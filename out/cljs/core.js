// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5490__delegate = function (args){
return console.log.apply(console,(function (){var G__5489 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5489) : cljs.core.into_array.call(null,G__5489));
})());
};
var G__5490 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5491__i = 0, G__5491__a = new Array(arguments.length -  0);
while (G__5491__i < G__5491__a.length) {G__5491__a[G__5491__i] = arguments[G__5491__i + 0]; ++G__5491__i;}
  args = new cljs.core.IndexedSeq(G__5491__a,0);
} 
return G__5490__delegate.call(this,args);};
G__5490.cljs$lang$maxFixedArity = 0;
G__5490.cljs$lang$applyTo = (function (arglist__5492){
var args = cljs.core.seq(arglist__5492);
return G__5490__delegate(args);
});
G__5490.cljs$core$IFn$_invoke$arity$variadic = G__5490__delegate;
return G__5490;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5494 = x;
return goog.isString(G__5494);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5496 = x__$1;
return goog.typeOf(G__5496);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3917__auto__ = ty;
if(cljs.core.truth_(and__3917__auto__)){
return ty.cljs$lang$type;
} else {
return and__3917__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5498 = obj;
return goog.typeOf(G__5498);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5500 = Symbol;
return goog.typeOf(G__5500);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4816__auto___5502 = len;
var i_5503 = (0);
while(true){
if((i_5503 < n__4816__auto___5502)){
(new_arr[i_5503] = (arr[i_5503]));

var G__5504 = (i_5503 + (1));
i_5503 = G__5504;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5505 = (i + (1));
i = G__5505;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5514__delegate = function (array,i,idxs){
var G__5511 = aget;
var G__5512 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5513 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5511,G__5512,G__5513) : cljs.core.apply.call(null,G__5511,G__5512,G__5513));
};
var G__5514 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5515__i = 0, G__5515__a = new Array(arguments.length -  2);
while (G__5515__i < G__5515__a.length) {G__5515__a[G__5515__i] = arguments[G__5515__i + 2]; ++G__5515__i;}
  idxs = new cljs.core.IndexedSeq(G__5515__a,0);
} 
return G__5514__delegate.call(this,array,i,idxs);};
G__5514.cljs$lang$maxFixedArity = 2;
G__5514.cljs$lang$applyTo = (function (arglist__5516){
var array = cljs.core.first(arglist__5516);
arglist__5516 = cljs.core.next(arglist__5516);
var i = cljs.core.first(arglist__5516);
var idxs = cljs.core.rest(arglist__5516);
return G__5514__delegate(array,i,idxs);
});
G__5514.cljs$core$IFn$_invoke$arity$variadic = G__5514__delegate;
return G__5514;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5517 = null;
if (arguments.length > 2) {
var G__5518__i = 0, G__5518__a = new Array(arguments.length -  2);
while (G__5518__i < G__5518__a.length) {G__5518__a[G__5518__i] = arguments[G__5518__i + 2]; ++G__5518__i;}
G__5517 = new cljs.core.IndexedSeq(G__5518__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5527__delegate = function (array,idx,idx2,idxv){
var G__5523 = aset;
var G__5524 = (array[idx]);
var G__5525 = idx2;
var G__5526 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5523,G__5524,G__5525,G__5526) : cljs.core.apply.call(null,G__5523,G__5524,G__5525,G__5526));
};
var G__5527 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5528__i = 0, G__5528__a = new Array(arguments.length -  3);
while (G__5528__i < G__5528__a.length) {G__5528__a[G__5528__i] = arguments[G__5528__i + 3]; ++G__5528__i;}
  idxv = new cljs.core.IndexedSeq(G__5528__a,0);
} 
return G__5527__delegate.call(this,array,idx,idx2,idxv);};
G__5527.cljs$lang$maxFixedArity = 3;
G__5527.cljs$lang$applyTo = (function (arglist__5529){
var array = cljs.core.first(arglist__5529);
arglist__5529 = cljs.core.next(arglist__5529);
var idx = cljs.core.first(arglist__5529);
arglist__5529 = cljs.core.next(arglist__5529);
var idx2 = cljs.core.first(arglist__5529);
var idxv = cljs.core.rest(arglist__5529);
return G__5527__delegate(array,idx,idx2,idxv);
});
G__5527.cljs$core$IFn$_invoke$arity$variadic = G__5527__delegate;
return G__5527;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5530 = null;
if (arguments.length > 3) {
var G__5531__i = 0, G__5531__a = new Array(arguments.length -  3);
while (G__5531__i < G__5531__a.length) {G__5531__a[G__5531__i] = arguments[G__5531__i + 3]; ++G__5531__i;}
G__5530 = new cljs.core.IndexedSeq(G__5531__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5537 = (function (a,x){
a.push(x);

return a;
});
var G__5538 = [];
var G__5539 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5537,G__5538,G__5539) : cljs.core.reduce.call(null,G__5537,G__5538,G__5539));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5540__i = 0, G__5540__a = new Array(arguments.length -  2);
while (G__5540__i < G__5540__a.length) {G__5540__a[G__5540__i] = arguments[G__5540__i + 2]; ++G__5540__i;}
  args = new cljs.core.IndexedSeq(G__5540__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5541){
var obj = cljs.core.first(arglist__5541);
arglist__5541 = cljs.core.next(arglist__5541);
var s = cljs.core.first(arglist__5541);
var args = cljs.core.rest(arglist__5541);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5543 = {};
return obj5543;
})();


cljs.core.IFn = (function (){var obj5545 = {};
return obj5545;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5591 = x__4573__auto__;
return goog.typeOf(G__5591);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5593 = x__4573__auto__;
return goog.typeOf(G__5593);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5595 = x__4573__auto__;
return goog.typeOf(G__5595);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5597 = x__4573__auto__;
return goog.typeOf(G__5597);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5599 = x__4573__auto__;
return goog.typeOf(G__5599);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5601 = x__4573__auto__;
return goog.typeOf(G__5601);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5603 = x__4573__auto__;
return goog.typeOf(G__5603);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5605 = x__4573__auto__;
return goog.typeOf(G__5605);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5607 = x__4573__auto__;
return goog.typeOf(G__5607);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5609 = x__4573__auto__;
return goog.typeOf(G__5609);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5611 = x__4573__auto__;
return goog.typeOf(G__5611);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5613 = x__4573__auto__;
return goog.typeOf(G__5613);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5615 = x__4573__auto__;
return goog.typeOf(G__5615);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5617 = x__4573__auto__;
return goog.typeOf(G__5617);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5619 = x__4573__auto__;
return goog.typeOf(G__5619);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5621 = x__4573__auto__;
return goog.typeOf(G__5621);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5623 = x__4573__auto__;
return goog.typeOf(G__5623);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5625 = x__4573__auto__;
return goog.typeOf(G__5625);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5627 = x__4573__auto__;
return goog.typeOf(G__5627);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5629 = x__4573__auto__;
return goog.typeOf(G__5629);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5631 = x__4573__auto__;
return goog.typeOf(G__5631);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__5633 = x__4573__auto__;
return goog.typeOf(G__5633);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5635 = {};
return obj5635;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3917__auto__ = value;
if(and__3917__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3917__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4573__auto__ = (((value == null))?null:value);
return (function (){var or__3929__auto__ = (cljs.core._clone[(function (){var G__5639 = x__4573__auto__;
return goog.typeOf(G__5639);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._clone["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5641 = {};
return obj5641;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._count[(function (){var G__5645 = x__4573__auto__;
return goog.typeOf(G__5645);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._count["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj5647 = {};
return obj5647;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._empty[(function (){var G__5651 = x__4573__auto__;
return goog.typeOf(G__5651);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._empty["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj5653 = {};
return obj5653;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._conj[(function (){var G__5657 = x__4573__auto__;
return goog.typeOf(G__5657);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._conj["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj5659 = {};
return obj5659;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._nth[(function (){var G__5665 = x__4573__auto__;
return goog.typeOf(G__5665);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._nth["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._nth[(function (){var G__5667 = x__4573__auto__;
return goog.typeOf(G__5667);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._nth["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj5669 = {};
return obj5669;
})();


cljs.core.ISeq = (function (){var obj5671 = {};
return obj5671;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._first[(function (){var G__5675 = x__4573__auto__;
return goog.typeOf(G__5675);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._rest[(function (){var G__5679 = x__4573__auto__;
return goog.typeOf(G__5679);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._rest["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj5681 = {};
return obj5681;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._next[(function (){var G__5685 = x__4573__auto__;
return goog.typeOf(G__5685);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._next["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj5687 = {};
return obj5687;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._lookup[(function (){var G__5693 = x__4573__auto__;
return goog.typeOf(G__5693);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._lookup["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._lookup[(function (){var G__5695 = x__4573__auto__;
return goog.typeOf(G__5695);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._lookup["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj5697 = {};
return obj5697;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__5701 = x__4573__auto__;
return goog.typeOf(G__5701);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._assoc[(function (){var G__5705 = x__4573__auto__;
return goog.typeOf(G__5705);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj5707 = {};
return obj5707;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._dissoc[(function (){var G__5711 = x__4573__auto__;
return goog.typeOf(G__5711);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj5713 = {};
return obj5713;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._key[(function (){var G__5717 = x__4573__auto__;
return goog.typeOf(G__5717);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._key["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._val[(function (){var G__5721 = x__4573__auto__;
return goog.typeOf(G__5721);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._val["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj5723 = {};
return obj5723;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._disjoin[(function (){var G__5727 = x__4573__auto__;
return goog.typeOf(G__5727);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj5729 = {};
return obj5729;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._peek[(function (){var G__5733 = x__4573__auto__;
return goog.typeOf(G__5733);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._peek["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._pop[(function (){var G__5737 = x__4573__auto__;
return goog.typeOf(G__5737);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pop["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj5739 = {};
return obj5739;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_n[(function (){var G__5743 = x__4573__auto__;
return goog.typeOf(G__5743);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj5745 = {};
return obj5745;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._deref[(function (){var G__5749 = x__4573__auto__;
return goog.typeOf(G__5749);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._deref["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5751 = {};
return obj5751;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5755 = x__4573__auto__;
return goog.typeOf(G__5755);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj5757 = {};
return obj5757;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._meta[(function (){var G__5761 = x__4573__auto__;
return goog.typeOf(G__5761);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._meta["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj5763 = {};
return obj5763;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._with_meta[(function (){var G__5767 = x__4573__auto__;
return goog.typeOf(G__5767);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj5769 = {};
return obj5769;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._reduce[(function (){var G__5775 = x__4573__auto__;
return goog.typeOf(G__5775);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._reduce[(function (){var G__5777 = x__4573__auto__;
return goog.typeOf(G__5777);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj5779 = {};
return obj5779;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._kv_reduce[(function (){var G__5783 = x__4573__auto__;
return goog.typeOf(G__5783);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj5785 = {};
return obj5785;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._equiv[(function (){var G__5789 = x__4573__auto__;
return goog.typeOf(G__5789);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._equiv["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj5791 = {};
return obj5791;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._hash[(function (){var G__5795 = x__4573__auto__;
return goog.typeOf(G__5795);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._hash["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj5797 = {};
return obj5797;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._seq[(function (){var G__5801 = x__4573__auto__;
return goog.typeOf(G__5801);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._seq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj5803 = {};
return obj5803;
})();


cljs.core.IList = (function (){var obj5805 = {};
return obj5805;
})();


cljs.core.IRecord = (function (){var obj5807 = {};
return obj5807;
})();


cljs.core.IReversible = (function (){var obj5809 = {};
return obj5809;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._rseq[(function (){var G__5813 = x__4573__auto__;
return goog.typeOf(G__5813);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._rseq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj5815 = {};
return obj5815;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._sorted_seq[(function (){var G__5819 = x__4573__auto__;
return goog.typeOf(G__5819);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5823 = x__4573__auto__;
return goog.typeOf(G__5823);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._entry_key[(function (){var G__5827 = x__4573__auto__;
return goog.typeOf(G__5827);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._comparator[(function (){var G__5831 = x__4573__auto__;
return goog.typeOf(G__5831);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._comparator["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj5833 = {};
return obj5833;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3917__auto__ = writer;
if(and__3917__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3917__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4573__auto__ = (((writer == null))?null:writer);
return (function (){var or__3929__auto__ = (cljs.core._write[(function (){var G__5837 = x__4573__auto__;
return goog.typeOf(G__5837);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._write["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3917__auto__ = writer;
if(and__3917__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3917__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4573__auto__ = (((writer == null))?null:writer);
return (function (){var or__3929__auto__ = (cljs.core._flush[(function (){var G__5841 = x__4573__auto__;
return goog.typeOf(G__5841);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._flush["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj5843 = {};
return obj5843;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._pr_writer[(function (){var G__5847 = x__4573__auto__;
return goog.typeOf(G__5847);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj5849 = {};
return obj5849;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3917__auto__ = d;
if(and__3917__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4573__auto__ = (((d == null))?null:d);
return (function (){var or__3929__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5853 = x__4573__auto__;
return goog.typeOf(G__5853);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj5855 = {};
return obj5855;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._notify_watches[(function (){var G__5859 = x__4573__auto__;
return goog.typeOf(G__5859);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._add_watch[(function (){var G__5863 = x__4573__auto__;
return goog.typeOf(G__5863);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._remove_watch[(function (){var G__5867 = x__4573__auto__;
return goog.typeOf(G__5867);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5869 = {};
return obj5869;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._as_transient[(function (){var G__5873 = x__4573__auto__;
return goog.typeOf(G__5873);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5875 = {};
return obj5875;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._conj_BANG_[(function (){var G__5879 = x__4573__auto__;
return goog.typeOf(G__5879);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5883 = x__4573__auto__;
return goog.typeOf(G__5883);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5885 = {};
return obj5885;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5889 = x__4573__auto__;
return goog.typeOf(G__5889);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5891 = {};
return obj5891;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5895 = x__4573__auto__;
return goog.typeOf(G__5895);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5897 = {};
return obj5897;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5901 = x__4573__auto__;
return goog.typeOf(G__5901);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._pop_BANG_[(function (){var G__5905 = x__4573__auto__;
return goog.typeOf(G__5905);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5907 = {};
return obj5907;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5911 = x__4573__auto__;
return goog.typeOf(G__5911);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5913 = {};
return obj5913;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._compare[(function (){var G__5917 = x__4573__auto__;
return goog.typeOf(G__5917);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._compare["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5919 = {};
return obj5919;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._drop_first[(function (){var G__5923 = x__4573__auto__;
return goog.typeOf(G__5923);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5925 = {};
return obj5925;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_first[(function (){var G__5929 = x__4573__auto__;
return goog.typeOf(G__5929);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_rest[(function (){var G__5933 = x__4573__auto__;
return goog.typeOf(G__5933);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5935 = {};
return obj5935;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_next[(function (){var G__5939 = x__4573__auto__;
return goog.typeOf(G__5939);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5941 = {};
return obj5941;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._name[(function (){var G__5945 = x__4573__auto__;
return goog.typeOf(G__5945);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._name["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._namespace[(function (){var G__5949 = x__4573__auto__;
return goog.typeOf(G__5949);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._namespace["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5951 = {};
return obj5951;
})();


cljs.core.IReset = (function (){var obj5953 = {};
return obj5953;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._reset_BANG_[(function (){var G__5957 = x__4573__auto__;
return goog.typeOf(G__5957);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5959 = {};
return obj5959;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__5969 = x__4573__auto__;
return goog.typeOf(G__5969);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__5971 = x__4573__auto__;
return goog.typeOf(G__5971);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__5973 = x__4573__auto__;
return goog.typeOf(G__5973);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__5975 = x__4573__auto__;
return goog.typeOf(G__5975);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5977 = {};
return obj5977;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5981 = x__4573__auto__;
return goog.typeOf(G__5981);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5983 = {};
return obj5983;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._iterator[(function (){var G__5987 = x__4573__auto__;
return goog.typeOf(G__5987);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._iterator["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5990 = (4294967295);
var G__5991 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5990,G__5991) : Math.imul.call(null,G__5990,G__5991));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5994 = a;
var G__5995 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5994,G__5995) : Math.imul.call(null,G__5994,G__5995));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5996 = (i + (2));
var G__5997 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5996;
h1 = G__5997;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5999 = {};
return obj5999;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6000 = (i + (1));
var G__6001 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6000;
hash = G__6001;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6005 = {};
return obj6005;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6008 = o;
if(G__6008){
var bit__4603__auto__ = (G__6008.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4603__auto__) || (G__6008.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6009 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6009) : Math.floor.call(null,G__6009));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.not(a.ns);
if(and__3917__auto__){
return b.ns;
} else {
return and__3917__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6016 = a.ns;
var G__6017 = b.ns;
return goog.array.defaultCompare(G__6016,G__6017);
})();
if(((0) === nsc)){
var G__6018 = a.name;
var G__6019 = b.name;
return goog.array.defaultCompare(G__6018,G__6019);
} else {
return nsc;
}
}
} else {
var G__6020 = a.name;
var G__6021 = b.name;
return goog.array.defaultCompare(G__6020,G__6021);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4350__auto__ = self__._hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6023 = null;
var G__6023__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6023__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6023 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6023__2.call(this,self__,coll);
case 3:
return G__6023__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6023.cljs$core$IFn$_invoke$arity$2 = G__6023__2;
G__6023.cljs$core$IFn$_invoke$arity$3 = G__6023__3;
return G__6023;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6022){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6022)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6071 = null;
var G__6071__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6071__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6071__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6071__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6071__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6071__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6071__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6071__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6071__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6071__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6071__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6071__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6071__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6071__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6071__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6071__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6071__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6071__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6071__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6071__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6071__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6071__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6027 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6028 = a;
var G__6029 = b;
var G__6030 = c;
var G__6031 = d;
var G__6032 = e;
var G__6033 = f;
var G__6034 = g;
var G__6035 = h;
var G__6036 = i;
var G__6037 = j;
var G__6038 = k;
var G__6039 = l;
var G__6040 = m;
var G__6041 = n;
var G__6042 = o;
var G__6043 = p;
var G__6044 = q;
var G__6045 = r;
var G__6046 = s;
var G__6047 = t;
var G__6048 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6027,G__6028,G__6029,G__6030,G__6031,G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048) : cljs.core.apply.call(null,G__6027,G__6028,G__6029,G__6030,G__6031,G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046,G__6047,G__6048));
});
G__6071 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6071__1.call(this,self__);
case 2:
return G__6071__2.call(this,self__,a);
case 3:
return G__6071__3.call(this,self__,a,b);
case 4:
return G__6071__4.call(this,self__,a,b,c);
case 5:
return G__6071__5.call(this,self__,a,b,c,d);
case 6:
return G__6071__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6071__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6071__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6071__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6071__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6071__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6071__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6071__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6071__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6071__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6071__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6071__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6071__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6071__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6071__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6071__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6071__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6071.cljs$core$IFn$_invoke$arity$1 = G__6071__1;
G__6071.cljs$core$IFn$_invoke$arity$2 = G__6071__2;
G__6071.cljs$core$IFn$_invoke$arity$3 = G__6071__3;
G__6071.cljs$core$IFn$_invoke$arity$4 = G__6071__4;
G__6071.cljs$core$IFn$_invoke$arity$5 = G__6071__5;
G__6071.cljs$core$IFn$_invoke$arity$6 = G__6071__6;
G__6071.cljs$core$IFn$_invoke$arity$7 = G__6071__7;
G__6071.cljs$core$IFn$_invoke$arity$8 = G__6071__8;
G__6071.cljs$core$IFn$_invoke$arity$9 = G__6071__9;
G__6071.cljs$core$IFn$_invoke$arity$10 = G__6071__10;
G__6071.cljs$core$IFn$_invoke$arity$11 = G__6071__11;
G__6071.cljs$core$IFn$_invoke$arity$12 = G__6071__12;
G__6071.cljs$core$IFn$_invoke$arity$13 = G__6071__13;
G__6071.cljs$core$IFn$_invoke$arity$14 = G__6071__14;
G__6071.cljs$core$IFn$_invoke$arity$15 = G__6071__15;
G__6071.cljs$core$IFn$_invoke$arity$16 = G__6071__16;
G__6071.cljs$core$IFn$_invoke$arity$17 = G__6071__17;
G__6071.cljs$core$IFn$_invoke$arity$18 = G__6071__18;
G__6071.cljs$core$IFn$_invoke$arity$19 = G__6071__19;
G__6071.cljs$core$IFn$_invoke$arity$20 = G__6071__20;
G__6071.cljs$core$IFn$_invoke$arity$21 = G__6071__21;
G__6071.cljs$core$IFn$_invoke$arity$22 = G__6071__22;
return G__6071;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6026){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6026)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6049 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6050 = a;
var G__6051 = b;
var G__6052 = c;
var G__6053 = d;
var G__6054 = e;
var G__6055 = f;
var G__6056 = g;
var G__6057 = h;
var G__6058 = i;
var G__6059 = j;
var G__6060 = k;
var G__6061 = l;
var G__6062 = m;
var G__6063 = n;
var G__6064 = o;
var G__6065 = p;
var G__6066 = q;
var G__6067 = r;
var G__6068 = s;
var G__6069 = t;
var G__6070 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070) : cljs.core.apply.call(null,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061,G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6073 = x;
if(G__6073){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__6073.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6073.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6073);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6073);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6075 = value;
if(G__6075){
var bit__4610__auto__ = (G__6075.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4610__auto__) || (G__6075.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6075.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6075);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6075);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6077 = coll;
if(G__6077){
var bit__4603__auto__ = (G__6077.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4603__auto__) || (G__6077.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6079 = coll;
if(G__6079){
var bit__4603__auto__ = (G__6079.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__6079.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6081 = coll;
if(G__6081){
var bit__4603__auto__ = (G__6081.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__6081.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6083 = coll;
if(G__6083){
var bit__4603__auto__ = (G__6083.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__6083.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6088__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6089 = y;
var G__6090 = cljs.core.first(more);
var G__6091 = cljs.core.next(more);
x = G__6089;
y = G__6090;
more = G__6091;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6088 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6092__i = 0, G__6092__a = new Array(arguments.length -  2);
while (G__6092__i < G__6092__a.length) {G__6092__a[G__6092__i] = arguments[G__6092__i + 2]; ++G__6092__i;}
  more = new cljs.core.IndexedSeq(G__6092__a,0);
} 
return G__6088__delegate.call(this,x,y,more);};
G__6088.cljs$lang$maxFixedArity = 2;
G__6088.cljs$lang$applyTo = (function (arglist__6093){
var x = cljs.core.first(arglist__6093);
arglist__6093 = cljs.core.next(arglist__6093);
var y = cljs.core.first(arglist__6093);
var more = cljs.core.rest(arglist__6093);
return G__6088__delegate(x,y,more);
});
G__6088.cljs$core$IFn$_invoke$arity$variadic = G__6088__delegate;
return G__6088;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6094 = null;
if (arguments.length > 2) {
var G__6095__i = 0, G__6095__a = new Array(arguments.length -  2);
while (G__6095__i < G__6095__a.length) {G__6095__a[G__6095__i] = arguments[G__6095__i + 2]; ++G__6095__i;}
G__6094 = new cljs.core.IndexedSeq(G__6095__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6096 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6096) : cljs.core.es6_iterator_seq.call(null,G__6096));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6097 = (n + (1));
var G__6098 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6099 = cljs.core.next(coll__$1);
n = G__6097;
hash_code = G__6098;
coll__$1 = G__6099;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6100 = (n + (1));
var G__6101 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6102 = cljs.core.next(coll__$1);
n = G__6100;
hash_code = G__6101;
coll__$1 = G__6102;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6103 = o;
return goog.getUid(G__6103);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6105 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6105) : cljs.core.deref.call(null,G__6105));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6112 = val;
var G__6113 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6112,G__6113) : f.call(null,G__6112,G__6113));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6118 = nval;
var G__6119 = (n + (1));
val = G__6118;
n = G__6119;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6114 = val__$1;
var G__6115 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6114,G__6115) : f.call(null,G__6114,G__6115));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6120 = nval;
var G__6121 = (n + (1));
val__$1 = G__6120;
n = G__6121;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6116 = val__$1;
var G__6117 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6116,G__6117) : f.call(null,G__6116,G__6117));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6122 = nval;
var G__6123 = (n + (1));
val__$1 = G__6122;
n = G__6123;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6130 = val;
var G__6131 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6130,G__6131) : f.call(null,G__6130,G__6131));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6136 = nval;
var G__6137 = (n + (1));
val = G__6136;
n = G__6137;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6132 = val__$1;
var G__6133 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6132,G__6133) : f.call(null,G__6132,G__6133));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6138 = nval;
var G__6139 = (n + (1));
val__$1 = G__6138;
n = G__6139;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6134 = val__$1;
var G__6135 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6134,G__6135) : f.call(null,G__6134,G__6135));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6140 = nval;
var G__6141 = (n + (1));
val__$1 = G__6140;
n = G__6141;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6143 = x;
if(G__6143){
var bit__4610__auto__ = (G__6143.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4610__auto__) || (G__6143.cljs$core$ICounted$)){
return true;
} else {
if((!G__6143.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6143);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6143);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6145 = x;
if(G__6145){
var bit__4610__auto__ = (G__6145.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4610__auto__) || (G__6145.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6145.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6145);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6145);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6146 = coll__$1;
var G__6147 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6146,G__6147) : cljs.core.equiv_sequential.call(null,G__6146,G__6147));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6148 = o;
var G__6149 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6148,G__6149) : cljs.core.cons.call(null,G__6148,G__6149));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6152 = coll__$1;
var G__6153 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6152,G__6153) : cljs.core.equiv_sequential.call(null,G__6152,G__6153));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6154 = cljs.core.List.EMPTY;
var G__6155 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6154,G__6155) : cljs.core.with_meta.call(null,G__6154,G__6155));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6156 = f;
var G__6157 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6156,G__6157) : cljs.core.seq_reduce.call(null,G__6156,G__6157));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6158 = f;
var G__6159 = start;
var G__6160 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6158,G__6159,G__6160) : cljs.core.seq_reduce.call(null,G__6158,G__6159,G__6160));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6161 = o;
var G__6162 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6161,G__6162) : cljs.core.cons.call(null,G__6161,G__6162));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6163 = sn;
s = G__6163;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6168__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6169 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6170 = cljs.core.first(xs);
var G__6171 = cljs.core.next(xs);
coll = G__6169;
x = G__6170;
xs = G__6171;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6168 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6172__i = 0, G__6172__a = new Array(arguments.length -  2);
while (G__6172__i < G__6172__a.length) {G__6172__a[G__6172__i] = arguments[G__6172__i + 2]; ++G__6172__i;}
  xs = new cljs.core.IndexedSeq(G__6172__a,0);
} 
return G__6168__delegate.call(this,coll,x,xs);};
G__6168.cljs$lang$maxFixedArity = 2;
G__6168.cljs$lang$applyTo = (function (arglist__6173){
var coll = cljs.core.first(arglist__6173);
arglist__6173 = cljs.core.next(arglist__6173);
var x = cljs.core.first(arglist__6173);
var xs = cljs.core.rest(arglist__6173);
return G__6168__delegate(coll,x,xs);
});
G__6168.cljs$core$IFn$_invoke$arity$variadic = G__6168__delegate;
return G__6168;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6174 = null;
if (arguments.length > 2) {
var G__6175__i = 0, G__6175__a = new Array(arguments.length -  2);
while (G__6175__i < G__6175__a.length) {G__6175__a[G__6175__i] = arguments[G__6175__i + 2]; ++G__6175__i;}
G__6174 = new cljs.core.IndexedSeq(G__6175__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6176 = cljs.core.next(s);
var G__6177 = (acc + (1));
s = G__6176;
acc = G__6177;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6179 = coll;
if(G__6179){
var bit__4603__auto__ = (G__6179.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4603__auto__) || (G__6179.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6180 = cljs.core.next(coll);
var G__6181 = (n - (1));
coll = G__6180;
n = G__6181;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6182 = cljs.core.next(coll);
var G__6183 = (n - (1));
var G__6184 = not_found;
coll = G__6182;
n = G__6183;
not_found = G__6184;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6189 = coll;
if(G__6189){
var bit__4603__auto__ = (G__6189.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4603__auto__) || (G__6189.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6190 = coll;
if(G__6190){
var bit__4610__auto__ = (G__6190.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__6190.cljs$core$ISeq$)){
return true;
} else {
if((!G__6190.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6190);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6190);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6191 = coll;
if(G__6191){
var bit__4603__auto__ = (G__6191.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4603__auto__) || (G__6191.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6192 = coll;
if(G__6192){
var bit__4610__auto__ = (G__6192.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__6192.cljs$core$ISeq$)){
return true;
} else {
if((!G__6192.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6192);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6192);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6193 = (n__$1 - (1));
var G__6194 = cljs.core.rest(xs);
n__$1 = G__6193;
xs = G__6194;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6197 = o;
if(G__6197){
var bit__4603__auto__ = (G__6197.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4603__auto__) || (G__6197.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6198 = o;
if(G__6198){
var bit__4603__auto__ = (G__6198.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4603__auto__) || (G__6198.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6202__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6203 = ret;
var G__6204 = cljs.core.first(kvs);
var G__6205 = cljs.core.second(kvs);
var G__6206 = cljs.core.nnext(kvs);
coll = G__6203;
k = G__6204;
v = G__6205;
kvs = G__6206;
continue;
} else {
return ret;
}
break;
}
};
var G__6202 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6207__i = 0, G__6207__a = new Array(arguments.length -  3);
while (G__6207__i < G__6207__a.length) {G__6207__a[G__6207__i] = arguments[G__6207__i + 3]; ++G__6207__i;}
  kvs = new cljs.core.IndexedSeq(G__6207__a,0);
} 
return G__6202__delegate.call(this,coll,k,v,kvs);};
G__6202.cljs$lang$maxFixedArity = 3;
G__6202.cljs$lang$applyTo = (function (arglist__6208){
var coll = cljs.core.first(arglist__6208);
arglist__6208 = cljs.core.next(arglist__6208);
var k = cljs.core.first(arglist__6208);
arglist__6208 = cljs.core.next(arglist__6208);
var v = cljs.core.first(arglist__6208);
var kvs = cljs.core.rest(arglist__6208);
return G__6202__delegate(coll,k,v,kvs);
});
G__6202.cljs$core$IFn$_invoke$arity$variadic = G__6202__delegate;
return G__6202;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6209 = null;
if (arguments.length > 3) {
var G__6210__i = 0, G__6210__a = new Array(arguments.length -  3);
while (G__6210__i < G__6210__a.length) {G__6210__a[G__6210__i] = arguments[G__6210__i + 3]; ++G__6210__i;}
G__6209 = new cljs.core.IndexedSeq(G__6210__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6213__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6214 = ret;
var G__6215 = cljs.core.first(ks);
var G__6216 = cljs.core.next(ks);
coll = G__6214;
k = G__6215;
ks = G__6216;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6213 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6217__i = 0, G__6217__a = new Array(arguments.length -  2);
while (G__6217__i < G__6217__a.length) {G__6217__a[G__6217__i] = arguments[G__6217__i + 2]; ++G__6217__i;}
  ks = new cljs.core.IndexedSeq(G__6217__a,0);
} 
return G__6213__delegate.call(this,coll,k,ks);};
G__6213.cljs$lang$maxFixedArity = 2;
G__6213.cljs$lang$applyTo = (function (arglist__6218){
var coll = cljs.core.first(arglist__6218);
arglist__6218 = cljs.core.next(arglist__6218);
var k = cljs.core.first(arglist__6218);
var ks = cljs.core.rest(arglist__6218);
return G__6213__delegate(coll,k,ks);
});
G__6213.cljs$core$IFn$_invoke$arity$variadic = G__6213__delegate;
return G__6213;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6219 = null;
if (arguments.length > 2) {
var G__6220__i = 0, G__6220__a = new Array(arguments.length -  2);
while (G__6220__i < G__6220__a.length) {G__6220__a[G__6220__i] = arguments[G__6220__i + 2]; ++G__6220__i;}
G__6219 = new cljs.core.IndexedSeq(G__6220__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3929__auto__ = (function (){var G__6225 = f;
return goog.isFunction(G__6225);
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__6226 = f;
if(G__6226){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto____$1 = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
return G__6226.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6226.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6226);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6226);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__6692 = null;
var G__6692__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__6692__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6228 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6228) : self__.afn.call(null,G__6228));
});
var G__6692__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6229 = a;
var G__6230 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6229,G__6230) : self__.afn.call(null,G__6229,G__6230));
});
var G__6692__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6231 = a;
var G__6232 = b;
var G__6233 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6231,G__6232,G__6233) : self__.afn.call(null,G__6231,G__6232,G__6233));
});
var G__6692__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6234 = a;
var G__6235 = b;
var G__6236 = c;
var G__6237 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6234,G__6235,G__6236,G__6237) : self__.afn.call(null,G__6234,G__6235,G__6236,G__6237));
});
var G__6692__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6238 = a;
var G__6239 = b;
var G__6240 = c;
var G__6241 = d;
var G__6242 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6238,G__6239,G__6240,G__6241,G__6242) : self__.afn.call(null,G__6238,G__6239,G__6240,G__6241,G__6242));
});
var G__6692__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6243 = a;
var G__6244 = b;
var G__6245 = c;
var G__6246 = d;
var G__6247 = e;
var G__6248 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6243,G__6244,G__6245,G__6246,G__6247,G__6248) : self__.afn.call(null,G__6243,G__6244,G__6245,G__6246,G__6247,G__6248));
});
var G__6692__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6249 = a;
var G__6250 = b;
var G__6251 = c;
var G__6252 = d;
var G__6253 = e;
var G__6254 = f;
var G__6255 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255) : self__.afn.call(null,G__6249,G__6250,G__6251,G__6252,G__6253,G__6254,G__6255));
});
var G__6692__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6256 = a;
var G__6257 = b;
var G__6258 = c;
var G__6259 = d;
var G__6260 = e;
var G__6261 = f;
var G__6262 = g;
var G__6263 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263) : self__.afn.call(null,G__6256,G__6257,G__6258,G__6259,G__6260,G__6261,G__6262,G__6263));
});
var G__6692__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6264 = a;
var G__6265 = b;
var G__6266 = c;
var G__6267 = d;
var G__6268 = e;
var G__6269 = f;
var G__6270 = g;
var G__6271 = h;
var G__6272 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6264,G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272) : self__.afn.call(null,G__6264,G__6265,G__6266,G__6267,G__6268,G__6269,G__6270,G__6271,G__6272));
});
var G__6692__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6273 = a;
var G__6274 = b;
var G__6275 = c;
var G__6276 = d;
var G__6277 = e;
var G__6278 = f;
var G__6279 = g;
var G__6280 = h;
var G__6281 = i;
var G__6282 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282) : self__.afn.call(null,G__6273,G__6274,G__6275,G__6276,G__6277,G__6278,G__6279,G__6280,G__6281,G__6282));
});
var G__6692__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6283 = a;
var G__6284 = b;
var G__6285 = c;
var G__6286 = d;
var G__6287 = e;
var G__6288 = f;
var G__6289 = g;
var G__6290 = h;
var G__6291 = i;
var G__6292 = j;
var G__6293 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6283,G__6284,G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293) : self__.afn.call(null,G__6283,G__6284,G__6285,G__6286,G__6287,G__6288,G__6289,G__6290,G__6291,G__6292,G__6293));
});
var G__6692__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6294 = a;
var G__6295 = b;
var G__6296 = c;
var G__6297 = d;
var G__6298 = e;
var G__6299 = f;
var G__6300 = g;
var G__6301 = h;
var G__6302 = i;
var G__6303 = j;
var G__6304 = k;
var G__6305 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6294,G__6295,G__6296,G__6297,G__6298,G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305) : self__.afn.call(null,G__6294,G__6295,G__6296,G__6297,G__6298,G__6299,G__6300,G__6301,G__6302,G__6303,G__6304,G__6305));
});
var G__6692__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6306 = a;
var G__6307 = b;
var G__6308 = c;
var G__6309 = d;
var G__6310 = e;
var G__6311 = f;
var G__6312 = g;
var G__6313 = h;
var G__6314 = i;
var G__6315 = j;
var G__6316 = k;
var G__6317 = l;
var G__6318 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318) : self__.afn.call(null,G__6306,G__6307,G__6308,G__6309,G__6310,G__6311,G__6312,G__6313,G__6314,G__6315,G__6316,G__6317,G__6318));
});
var G__6692__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6319 = a;
var G__6320 = b;
var G__6321 = c;
var G__6322 = d;
var G__6323 = e;
var G__6324 = f;
var G__6325 = g;
var G__6326 = h;
var G__6327 = i;
var G__6328 = j;
var G__6329 = k;
var G__6330 = l;
var G__6331 = m;
var G__6332 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6319,G__6320,G__6321,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332) : self__.afn.call(null,G__6319,G__6320,G__6321,G__6322,G__6323,G__6324,G__6325,G__6326,G__6327,G__6328,G__6329,G__6330,G__6331,G__6332));
});
var G__6692__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6333 = a;
var G__6334 = b;
var G__6335 = c;
var G__6336 = d;
var G__6337 = e;
var G__6338 = f;
var G__6339 = g;
var G__6340 = h;
var G__6341 = i;
var G__6342 = j;
var G__6343 = k;
var G__6344 = l;
var G__6345 = m;
var G__6346 = n;
var G__6347 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347) : self__.afn.call(null,G__6333,G__6334,G__6335,G__6336,G__6337,G__6338,G__6339,G__6340,G__6341,G__6342,G__6343,G__6344,G__6345,G__6346,G__6347));
});
var G__6692__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6348 = a;
var G__6349 = b;
var G__6350 = c;
var G__6351 = d;
var G__6352 = e;
var G__6353 = f;
var G__6354 = g;
var G__6355 = h;
var G__6356 = i;
var G__6357 = j;
var G__6358 = k;
var G__6359 = l;
var G__6360 = m;
var G__6361 = n;
var G__6362 = o;
var G__6363 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363) : self__.afn.call(null,G__6348,G__6349,G__6350,G__6351,G__6352,G__6353,G__6354,G__6355,G__6356,G__6357,G__6358,G__6359,G__6360,G__6361,G__6362,G__6363));
});
var G__6692__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6364 = a;
var G__6365 = b;
var G__6366 = c;
var G__6367 = d;
var G__6368 = e;
var G__6369 = f;
var G__6370 = g;
var G__6371 = h;
var G__6372 = i;
var G__6373 = j;
var G__6374 = k;
var G__6375 = l;
var G__6376 = m;
var G__6377 = n;
var G__6378 = o;
var G__6379 = p;
var G__6380 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377,G__6378,G__6379,G__6380) : self__.afn.call(null,G__6364,G__6365,G__6366,G__6367,G__6368,G__6369,G__6370,G__6371,G__6372,G__6373,G__6374,G__6375,G__6376,G__6377,G__6378,G__6379,G__6380));
});
var G__6692__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6381 = a;
var G__6382 = b;
var G__6383 = c;
var G__6384 = d;
var G__6385 = e;
var G__6386 = f;
var G__6387 = g;
var G__6388 = h;
var G__6389 = i;
var G__6390 = j;
var G__6391 = k;
var G__6392 = l;
var G__6393 = m;
var G__6394 = n;
var G__6395 = o;
var G__6396 = p;
var G__6397 = q;
var G__6398 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398) : self__.afn.call(null,G__6381,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398));
});
var G__6692__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6399 = a;
var G__6400 = b;
var G__6401 = c;
var G__6402 = d;
var G__6403 = e;
var G__6404 = f;
var G__6405 = g;
var G__6406 = h;
var G__6407 = i;
var G__6408 = j;
var G__6409 = k;
var G__6410 = l;
var G__6411 = m;
var G__6412 = n;
var G__6413 = o;
var G__6414 = p;
var G__6415 = q;
var G__6416 = r;
var G__6417 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417) : self__.afn.call(null,G__6399,G__6400,G__6401,G__6402,G__6403,G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417));
});
var G__6692__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6418 = a;
var G__6419 = b;
var G__6420 = c;
var G__6421 = d;
var G__6422 = e;
var G__6423 = f;
var G__6424 = g;
var G__6425 = h;
var G__6426 = i;
var G__6427 = j;
var G__6428 = k;
var G__6429 = l;
var G__6430 = m;
var G__6431 = n;
var G__6432 = o;
var G__6433 = p;
var G__6434 = q;
var G__6435 = r;
var G__6436 = s;
var G__6437 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434,G__6435,G__6436,G__6437) : self__.afn.call(null,G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425,G__6426,G__6427,G__6428,G__6429,G__6430,G__6431,G__6432,G__6433,G__6434,G__6435,G__6436,G__6437));
});
var G__6692__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6438 = self__.afn;
var G__6439 = a;
var G__6440 = b;
var G__6441 = c;
var G__6442 = d;
var G__6443 = e;
var G__6444 = f;
var G__6445 = g;
var G__6446 = h;
var G__6447 = i;
var G__6448 = j;
var G__6449 = k;
var G__6450 = l;
var G__6451 = m;
var G__6452 = n;
var G__6453 = o;
var G__6454 = p;
var G__6455 = q;
var G__6456 = r;
var G__6457 = s;
var G__6458 = t;
var G__6459 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6438,G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453,G__6454,G__6455,G__6456,G__6457,G__6458,G__6459) : cljs.core.apply.call(null,G__6438,G__6439,G__6440,G__6441,G__6442,G__6443,G__6444,G__6445,G__6446,G__6447,G__6448,G__6449,G__6450,G__6451,G__6452,G__6453,G__6454,G__6455,G__6456,G__6457,G__6458,G__6459));
});
G__6692 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6692__1.call(this,self__);
case 2:
return G__6692__2.call(this,self__,a);
case 3:
return G__6692__3.call(this,self__,a,b);
case 4:
return G__6692__4.call(this,self__,a,b,c);
case 5:
return G__6692__5.call(this,self__,a,b,c,d);
case 6:
return G__6692__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6692__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6692__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6692__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6692__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6692__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6692__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6692__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6692__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6692__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6692__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6692__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6692__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6692__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6692__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6692__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6692__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6692.cljs$core$IFn$_invoke$arity$1 = G__6692__1;
G__6692.cljs$core$IFn$_invoke$arity$2 = G__6692__2;
G__6692.cljs$core$IFn$_invoke$arity$3 = G__6692__3;
G__6692.cljs$core$IFn$_invoke$arity$4 = G__6692__4;
G__6692.cljs$core$IFn$_invoke$arity$5 = G__6692__5;
G__6692.cljs$core$IFn$_invoke$arity$6 = G__6692__6;
G__6692.cljs$core$IFn$_invoke$arity$7 = G__6692__7;
G__6692.cljs$core$IFn$_invoke$arity$8 = G__6692__8;
G__6692.cljs$core$IFn$_invoke$arity$9 = G__6692__9;
G__6692.cljs$core$IFn$_invoke$arity$10 = G__6692__10;
G__6692.cljs$core$IFn$_invoke$arity$11 = G__6692__11;
G__6692.cljs$core$IFn$_invoke$arity$12 = G__6692__12;
G__6692.cljs$core$IFn$_invoke$arity$13 = G__6692__13;
G__6692.cljs$core$IFn$_invoke$arity$14 = G__6692__14;
G__6692.cljs$core$IFn$_invoke$arity$15 = G__6692__15;
G__6692.cljs$core$IFn$_invoke$arity$16 = G__6692__16;
G__6692.cljs$core$IFn$_invoke$arity$17 = G__6692__17;
G__6692.cljs$core$IFn$_invoke$arity$18 = G__6692__18;
G__6692.cljs$core$IFn$_invoke$arity$19 = G__6692__19;
G__6692.cljs$core$IFn$_invoke$arity$20 = G__6692__20;
G__6692.cljs$core$IFn$_invoke$arity$21 = G__6692__21;
G__6692.cljs$core$IFn$_invoke$arity$22 = G__6692__22;
return G__6692;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6227){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6227)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6460 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6460) : self__.afn.call(null,G__6460));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6461 = a;
var G__6462 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6461,G__6462) : self__.afn.call(null,G__6461,G__6462));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6463 = a;
var G__6464 = b;
var G__6465 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6463,G__6464,G__6465) : self__.afn.call(null,G__6463,G__6464,G__6465));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6466 = a;
var G__6467 = b;
var G__6468 = c;
var G__6469 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6466,G__6467,G__6468,G__6469) : self__.afn.call(null,G__6466,G__6467,G__6468,G__6469));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6470 = a;
var G__6471 = b;
var G__6472 = c;
var G__6473 = d;
var G__6474 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6470,G__6471,G__6472,G__6473,G__6474) : self__.afn.call(null,G__6470,G__6471,G__6472,G__6473,G__6474));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6475 = a;
var G__6476 = b;
var G__6477 = c;
var G__6478 = d;
var G__6479 = e;
var G__6480 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6475,G__6476,G__6477,G__6478,G__6479,G__6480) : self__.afn.call(null,G__6475,G__6476,G__6477,G__6478,G__6479,G__6480));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6481 = a;
var G__6482 = b;
var G__6483 = c;
var G__6484 = d;
var G__6485 = e;
var G__6486 = f;
var G__6487 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487) : self__.afn.call(null,G__6481,G__6482,G__6483,G__6484,G__6485,G__6486,G__6487));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6488 = a;
var G__6489 = b;
var G__6490 = c;
var G__6491 = d;
var G__6492 = e;
var G__6493 = f;
var G__6494 = g;
var G__6495 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495) : self__.afn.call(null,G__6488,G__6489,G__6490,G__6491,G__6492,G__6493,G__6494,G__6495));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6496 = a;
var G__6497 = b;
var G__6498 = c;
var G__6499 = d;
var G__6500 = e;
var G__6501 = f;
var G__6502 = g;
var G__6503 = h;
var G__6504 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504) : self__.afn.call(null,G__6496,G__6497,G__6498,G__6499,G__6500,G__6501,G__6502,G__6503,G__6504));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6505 = a;
var G__6506 = b;
var G__6507 = c;
var G__6508 = d;
var G__6509 = e;
var G__6510 = f;
var G__6511 = g;
var G__6512 = h;
var G__6513 = i;
var G__6514 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514) : self__.afn.call(null,G__6505,G__6506,G__6507,G__6508,G__6509,G__6510,G__6511,G__6512,G__6513,G__6514));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6515 = a;
var G__6516 = b;
var G__6517 = c;
var G__6518 = d;
var G__6519 = e;
var G__6520 = f;
var G__6521 = g;
var G__6522 = h;
var G__6523 = i;
var G__6524 = j;
var G__6525 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6515,G__6516,G__6517,G__6518,G__6519,G__6520,G__6521,G__6522,G__6523,G__6524,G__6525) : self__.afn.call(null,G__6515,G__6516,G__6517,G__6518,G__6519,G__6520,G__6521,G__6522,G__6523,G__6524,G__6525));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6526 = a;
var G__6527 = b;
var G__6528 = c;
var G__6529 = d;
var G__6530 = e;
var G__6531 = f;
var G__6532 = g;
var G__6533 = h;
var G__6534 = i;
var G__6535 = j;
var G__6536 = k;
var G__6537 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6526,G__6527,G__6528,G__6529,G__6530,G__6531,G__6532,G__6533,G__6534,G__6535,G__6536,G__6537) : self__.afn.call(null,G__6526,G__6527,G__6528,G__6529,G__6530,G__6531,G__6532,G__6533,G__6534,G__6535,G__6536,G__6537));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6538 = a;
var G__6539 = b;
var G__6540 = c;
var G__6541 = d;
var G__6542 = e;
var G__6543 = f;
var G__6544 = g;
var G__6545 = h;
var G__6546 = i;
var G__6547 = j;
var G__6548 = k;
var G__6549 = l;
var G__6550 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6538,G__6539,G__6540,G__6541,G__6542,G__6543,G__6544,G__6545,G__6546,G__6547,G__6548,G__6549,G__6550) : self__.afn.call(null,G__6538,G__6539,G__6540,G__6541,G__6542,G__6543,G__6544,G__6545,G__6546,G__6547,G__6548,G__6549,G__6550));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6551 = a;
var G__6552 = b;
var G__6553 = c;
var G__6554 = d;
var G__6555 = e;
var G__6556 = f;
var G__6557 = g;
var G__6558 = h;
var G__6559 = i;
var G__6560 = j;
var G__6561 = k;
var G__6562 = l;
var G__6563 = m;
var G__6564 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558,G__6559,G__6560,G__6561,G__6562,G__6563,G__6564) : self__.afn.call(null,G__6551,G__6552,G__6553,G__6554,G__6555,G__6556,G__6557,G__6558,G__6559,G__6560,G__6561,G__6562,G__6563,G__6564));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6565 = a;
var G__6566 = b;
var G__6567 = c;
var G__6568 = d;
var G__6569 = e;
var G__6570 = f;
var G__6571 = g;
var G__6572 = h;
var G__6573 = i;
var G__6574 = j;
var G__6575 = k;
var G__6576 = l;
var G__6577 = m;
var G__6578 = n;
var G__6579 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6565,G__6566,G__6567,G__6568,G__6569,G__6570,G__6571,G__6572,G__6573,G__6574,G__6575,G__6576,G__6577,G__6578,G__6579) : self__.afn.call(null,G__6565,G__6566,G__6567,G__6568,G__6569,G__6570,G__6571,G__6572,G__6573,G__6574,G__6575,G__6576,G__6577,G__6578,G__6579));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6580 = a;
var G__6581 = b;
var G__6582 = c;
var G__6583 = d;
var G__6584 = e;
var G__6585 = f;
var G__6586 = g;
var G__6587 = h;
var G__6588 = i;
var G__6589 = j;
var G__6590 = k;
var G__6591 = l;
var G__6592 = m;
var G__6593 = n;
var G__6594 = o;
var G__6595 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595) : self__.afn.call(null,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6596 = a;
var G__6597 = b;
var G__6598 = c;
var G__6599 = d;
var G__6600 = e;
var G__6601 = f;
var G__6602 = g;
var G__6603 = h;
var G__6604 = i;
var G__6605 = j;
var G__6606 = k;
var G__6607 = l;
var G__6608 = m;
var G__6609 = n;
var G__6610 = o;
var G__6611 = p;
var G__6612 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6596,G__6597,G__6598,G__6599,G__6600,G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612) : self__.afn.call(null,G__6596,G__6597,G__6598,G__6599,G__6600,G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6613 = a;
var G__6614 = b;
var G__6615 = c;
var G__6616 = d;
var G__6617 = e;
var G__6618 = f;
var G__6619 = g;
var G__6620 = h;
var G__6621 = i;
var G__6622 = j;
var G__6623 = k;
var G__6624 = l;
var G__6625 = m;
var G__6626 = n;
var G__6627 = o;
var G__6628 = p;
var G__6629 = q;
var G__6630 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630) : self__.afn.call(null,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6631 = a;
var G__6632 = b;
var G__6633 = c;
var G__6634 = d;
var G__6635 = e;
var G__6636 = f;
var G__6637 = g;
var G__6638 = h;
var G__6639 = i;
var G__6640 = j;
var G__6641 = k;
var G__6642 = l;
var G__6643 = m;
var G__6644 = n;
var G__6645 = o;
var G__6646 = p;
var G__6647 = q;
var G__6648 = r;
var G__6649 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649) : self__.afn.call(null,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__6650 = a;
var G__6651 = b;
var G__6652 = c;
var G__6653 = d;
var G__6654 = e;
var G__6655 = f;
var G__6656 = g;
var G__6657 = h;
var G__6658 = i;
var G__6659 = j;
var G__6660 = k;
var G__6661 = l;
var G__6662 = m;
var G__6663 = n;
var G__6664 = o;
var G__6665 = p;
var G__6666 = q;
var G__6667 = r;
var G__6668 = s;
var G__6669 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669) : self__.afn.call(null,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6670 = self__.afn;
var G__6671 = a;
var G__6672 = b;
var G__6673 = c;
var G__6674 = d;
var G__6675 = e;
var G__6676 = f;
var G__6677 = g;
var G__6678 = h;
var G__6679 = i;
var G__6680 = j;
var G__6681 = k;
var G__6682 = l;
var G__6683 = m;
var G__6684 = n;
var G__6685 = o;
var G__6686 = p;
var G__6687 = q;
var G__6688 = r;
var G__6689 = s;
var G__6690 = t;
var G__6691 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691) : cljs.core.apply.call(null,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__6696 = o;
if(G__6696){
var bit__4610__auto__ = (G__6696.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4610__auto__) || (G__6696.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__6696.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__6696);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3917__auto__ = !((o == null));
if(and__3917__auto__){
var G__6700 = o;
if(G__6700){
var bit__4610__auto__ = (G__6700.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4610__auto__) || (G__6700.cljs$core$IMeta$)){
return true;
} else {
if((!G__6700.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6700);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__6700);
}
} else {
return and__3917__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__6703__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6704 = ret;
var G__6705 = cljs.core.first(ks);
var G__6706 = cljs.core.next(ks);
coll = G__6704;
k = G__6705;
ks = G__6706;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6703 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6707__i = 0, G__6707__a = new Array(arguments.length -  2);
while (G__6707__i < G__6707__a.length) {G__6707__a[G__6707__i] = arguments[G__6707__i + 2]; ++G__6707__i;}
  ks = new cljs.core.IndexedSeq(G__6707__a,0);
} 
return G__6703__delegate.call(this,coll,k,ks);};
G__6703.cljs$lang$maxFixedArity = 2;
G__6703.cljs$lang$applyTo = (function (arglist__6708){
var coll = cljs.core.first(arglist__6708);
arglist__6708 = cljs.core.next(arglist__6708);
var k = cljs.core.first(arglist__6708);
var ks = cljs.core.rest(arglist__6708);
return G__6703__delegate(coll,k,ks);
});
G__6703.cljs$core$IFn$_invoke$arity$variadic = G__6703__delegate;
return G__6703;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__6709 = null;
if (arguments.length > 2) {
var G__6710__i = 0, G__6710__a = new Array(arguments.length -  2);
while (G__6710__i < G__6710__a.length) {G__6710__a[G__6710__i] = arguments[G__6710__i + 2]; ++G__6710__i;}
G__6709 = new cljs.core.IndexedSeq(G__6710__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6712 = x;
if(G__6712){
var bit__4610__auto__ = (G__6712.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4610__auto__) || (G__6712.cljs$core$ICollection$)){
return true;
} else {
if((!G__6712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__6712);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6714 = x;
if(G__6714){
var bit__4610__auto__ = (G__6714.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4610__auto__) || (G__6714.cljs$core$ISet$)){
return true;
} else {
if((!G__6714.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6714);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__6714);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__6716 = x;
if(G__6716){
var bit__4610__auto__ = (G__6716.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4610__auto__) || (G__6716.cljs$core$IAssociative$)){
return true;
} else {
if((!G__6716.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6716);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__6716);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__6718 = x;
if(G__6718){
var bit__4610__auto__ = (G__6718.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4610__auto__) || (G__6718.cljs$core$ISequential$)){
return true;
} else {
if((!G__6718.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6718);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__6718);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__6720 = x;
if(G__6720){
var bit__4610__auto__ = (G__6720.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4610__auto__) || (G__6720.cljs$core$ISorted$)){
return true;
} else {
if((!G__6720.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6720);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__6720);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__6722 = x;
if(G__6722){
var bit__4610__auto__ = (G__6722.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4610__auto__) || (G__6722.cljs$core$IReduce$)){
return true;
} else {
if((!G__6722.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6722);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__6722);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__6724 = x;
if(G__6724){
var bit__4610__auto__ = (G__6724.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4610__auto__) || (G__6724.cljs$core$IMap$)){
return true;
} else {
if((!G__6724.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6724);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__6724);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__6726 = x;
if(G__6726){
var bit__4610__auto__ = (G__6726.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4610__auto__) || (G__6726.cljs$core$IVector$)){
return true;
} else {
if((!G__6726.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6726);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__6726);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__6728 = x;
if(G__6728){
var bit__4603__auto__ = (G__6728.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4603__auto__) || (G__6728.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj6734 = {};
return obj6734;
});
var js_obj__1 = (function() { 
var G__6737__delegate = function (keyvals){
var G__6735 = goog.object.create;
var G__6736 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6735,G__6736) : cljs.core.apply.call(null,G__6735,G__6736));
};
var G__6737 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__6738__i = 0, G__6738__a = new Array(arguments.length -  0);
while (G__6738__i < G__6738__a.length) {G__6738__a[G__6738__i] = arguments[G__6738__i + 0]; ++G__6738__i;}
  keyvals = new cljs.core.IndexedSeq(G__6738__a,0);
} 
return G__6737__delegate.call(this,keyvals);};
G__6737.cljs$lang$maxFixedArity = 0;
G__6737.cljs$lang$applyTo = (function (arglist__6739){
var keyvals = cljs.core.seq(arglist__6739);
return G__6737__delegate(keyvals);
});
G__6737.cljs$core$IFn$_invoke$arity$variadic = G__6737__delegate;
return G__6737;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__6740 = null;
if (arguments.length > 0) {
var G__6741__i = 0, G__6741__a = new Array(arguments.length -  0);
while (G__6741__i < G__6741__a.length) {G__6741__a[G__6741__i] = arguments[G__6741__i + 0]; ++G__6741__i;}
G__6740 = new cljs.core.IndexedSeq(G__6741__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__6744_6746 = obj;
var G__6745_6747 = ((function (G__6744_6746,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6744_6746,keys))
;
goog.object.forEach(G__6744_6746,G__6745_6747);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6748 = (i__$1 + (1));
var G__6749 = (j__$1 + (1));
var G__6750 = (len__$1 - (1));
i__$1 = G__6748;
j__$1 = G__6749;
len__$1 = G__6750;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6751 = (i__$1 - (1));
var G__6752 = (j__$1 - (1));
var G__6753 = (len__$1 - (1));
i__$1 = G__6751;
j__$1 = G__6752;
len__$1 = G__6753;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6755 = {};
return obj6755;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6757 = s;
if(G__6757){
var bit__4610__auto__ = (G__6757.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__6757.cljs$core$ISeq$)){
return true;
} else {
if((!G__6757.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6757);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6757);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__6759 = s;
if(G__6759){
var bit__4610__auto__ = (G__6759.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4610__auto__) || (G__6759.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6759.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6759);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6759);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3929__auto__ = cljs.core.fn_QMARK_(f);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var G__6763 = f;
if(G__6763){
var bit__4610__auto__ = (G__6763.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4610__auto__) || (G__6763.cljs$core$IFn$)){
return true;
} else {
if((!G__6763.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6763);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6763);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6776 = n;
return isNaN(G__6776);
})())) && (!((n === Infinity))) && (((function (){var G__6777 = n;
return parseFloat(G__6777);
})() === (function (){var G__6778 = n;
var G__6779 = (10);
return parseInt(G__6778,G__6779);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__6780__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6781 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6782 = etc;
s = G__6781;
xs = G__6782;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6780 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6783__i = 0, G__6783__a = new Array(arguments.length -  2);
while (G__6783__i < G__6783__a.length) {G__6783__a[G__6783__i] = arguments[G__6783__i + 2]; ++G__6783__i;}
  more = new cljs.core.IndexedSeq(G__6783__a,0);
} 
return G__6780__delegate.call(this,x,y,more);};
G__6780.cljs$lang$maxFixedArity = 2;
G__6780.cljs$lang$applyTo = (function (arglist__6784){
var x = cljs.core.first(arglist__6784);
arglist__6784 = cljs.core.next(arglist__6784);
var y = cljs.core.first(arglist__6784);
var more = cljs.core.rest(arglist__6784);
return G__6780__delegate(x,y,more);
});
G__6780.cljs$core$IFn$_invoke$arity$variadic = G__6780__delegate;
return G__6780;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__6785 = null;
if (arguments.length > 2) {
var G__6786__i = 0, G__6786__a = new Array(arguments.length -  2);
while (G__6786__i < G__6786__a.length) {G__6786__a[G__6786__i] = arguments[G__6786__i + 2]; ++G__6786__i;}
G__6785 = new cljs.core.IndexedSeq(G__6786__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6790 = x;
if(G__6790){
var bit__4603__auto__ = (G__6790.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4603__auto__) || (G__6790.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6791 = x;
var G__6792 = y;
return goog.array.defaultCompare(G__6791,G__6792);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6797 = xs;
var G__6798 = ys;
var G__6799 = len;
var G__6800 = (n + (1));
xs = G__6797;
ys = G__6798;
len = G__6799;
n = G__6800;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6805 = x;
var G__6806 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6805,G__6806) : f.call(null,G__6805,G__6806));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6807 = y;
var G__6808 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6807,G__6808) : f.call(null,G__6807,G__6808));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6814 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6814) : cljs.core.to_array.call(null,G__6814));
})();
var G__6815_6817 = a;
var G__6816_6818 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6815_6817,G__6816_6818);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6824 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6824) : keyfn.call(null,G__6824));
})(),(function (){var G__6825 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6825) : keyfn.call(null,G__6825));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__6831 = f;
var G__6832 = cljs.core.first(s);
var G__6833 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6831,G__6832,G__6833) : cljs.core.reduce.call(null,G__6831,G__6832,G__6833));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6834 = val__$1;
var G__6835 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6834,G__6835) : f.call(null,G__6834,G__6835));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6836 = nval;
var G__6837 = cljs.core.next(coll__$1);
val__$1 = G__6836;
coll__$1 = G__6837;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__6841 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6841) : cljs.core.to_array.call(null,G__6841));
})();
var G__6842_6844 = a;
goog.array.shuffle(G__6842_6844);

var G__6843 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6843) : cljs.core.vec.call(null,G__6843));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__6847 = coll;
if(G__6847){
var bit__4603__auto__ = (G__6847.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4603__auto__) || (G__6847.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__6848 = coll;
if(G__6848){
var bit__4603__auto__ = (G__6848.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4603__auto__) || (G__6848.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__6857 = null;
var G__6857__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6857__1 = (function (x){
var G__6854 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6854) : cf.call(null,G__6854));
});
var G__6857__2 = (function (x,y){
var G__6855 = x;
var G__6856 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6855,G__6856) : f.call(null,G__6855,G__6856));
});
G__6857 = function(x,y){
switch(arguments.length){
case 0:
return G__6857__0.call(this);
case 1:
return G__6857__1.call(this,x);
case 2:
return G__6857__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6857.cljs$core$IFn$_invoke$arity$0 = G__6857__0;
G__6857.cljs$core$IFn$_invoke$arity$1 = G__6857__1;
G__6857.cljs$core$IFn$_invoke$arity$2 = G__6857__2;
return G__6857;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6864 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6864) : xform.call(null,G__6864));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6865 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6865) : f__$1.call(null,G__6865));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6866__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6866 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6867__i = 0, G__6867__a = new Array(arguments.length -  2);
while (G__6867__i < G__6867__a.length) {G__6867__a[G__6867__i] = arguments[G__6867__i + 2]; ++G__6867__i;}
  more = new cljs.core.IndexedSeq(G__6867__a,0);
} 
return G__6866__delegate.call(this,x,y,more);};
G__6866.cljs$lang$maxFixedArity = 2;
G__6866.cljs$lang$applyTo = (function (arglist__6868){
var x = cljs.core.first(arglist__6868);
arglist__6868 = cljs.core.next(arglist__6868);
var y = cljs.core.first(arglist__6868);
var more = cljs.core.rest(arglist__6868);
return G__6866__delegate(x,y,more);
});
G__6866.cljs$core$IFn$_invoke$arity$variadic = G__6866__delegate;
return G__6866;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6869 = null;
if (arguments.length > 2) {
var G__6870__i = 0, G__6870__a = new Array(arguments.length -  2);
while (G__6870__i < G__6870__a.length) {G__6870__a[G__6870__i] = arguments[G__6870__i + 2]; ++G__6870__i;}
G__6869 = new cljs.core.IndexedSeq(G__6870__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6869);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6871__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6871 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6872__i = 0, G__6872__a = new Array(arguments.length -  2);
while (G__6872__i < G__6872__a.length) {G__6872__a[G__6872__i] = arguments[G__6872__i + 2]; ++G__6872__i;}
  more = new cljs.core.IndexedSeq(G__6872__a,0);
} 
return G__6871__delegate.call(this,x,y,more);};
G__6871.cljs$lang$maxFixedArity = 2;
G__6871.cljs$lang$applyTo = (function (arglist__6873){
var x = cljs.core.first(arglist__6873);
arglist__6873 = cljs.core.next(arglist__6873);
var y = cljs.core.first(arglist__6873);
var more = cljs.core.rest(arglist__6873);
return G__6871__delegate(x,y,more);
});
G__6871.cljs$core$IFn$_invoke$arity$variadic = G__6871__delegate;
return G__6871;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6874 = null;
if (arguments.length > 2) {
var G__6875__i = 0, G__6875__a = new Array(arguments.length -  2);
while (G__6875__i < G__6875__a.length) {G__6875__a[G__6875__i] = arguments[G__6875__i + 2]; ++G__6875__i;}
G__6874 = new cljs.core.IndexedSeq(G__6875__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6874);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6876__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6876 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6877__i = 0, G__6877__a = new Array(arguments.length -  2);
while (G__6877__i < G__6877__a.length) {G__6877__a[G__6877__i] = arguments[G__6877__i + 2]; ++G__6877__i;}
  more = new cljs.core.IndexedSeq(G__6877__a,0);
} 
return G__6876__delegate.call(this,x,y,more);};
G__6876.cljs$lang$maxFixedArity = 2;
G__6876.cljs$lang$applyTo = (function (arglist__6878){
var x = cljs.core.first(arglist__6878);
arglist__6878 = cljs.core.next(arglist__6878);
var y = cljs.core.first(arglist__6878);
var more = cljs.core.rest(arglist__6878);
return G__6876__delegate(x,y,more);
});
G__6876.cljs$core$IFn$_invoke$arity$variadic = G__6876__delegate;
return G__6876;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6879 = null;
if (arguments.length > 2) {
var G__6880__i = 0, G__6880__a = new Array(arguments.length -  2);
while (G__6880__i < G__6880__a.length) {G__6880__a[G__6880__i] = arguments[G__6880__i + 2]; ++G__6880__i;}
G__6879 = new cljs.core.IndexedSeq(G__6880__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6885__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6885 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6886__i = 0, G__6886__a = new Array(arguments.length -  2);
while (G__6886__i < G__6886__a.length) {G__6886__a[G__6886__i] = arguments[G__6886__i + 2]; ++G__6886__i;}
  more = new cljs.core.IndexedSeq(G__6886__a,0);
} 
return G__6885__delegate.call(this,x,y,more);};
G__6885.cljs$lang$maxFixedArity = 2;
G__6885.cljs$lang$applyTo = (function (arglist__6887){
var x = cljs.core.first(arglist__6887);
arglist__6887 = cljs.core.next(arglist__6887);
var y = cljs.core.first(arglist__6887);
var more = cljs.core.rest(arglist__6887);
return G__6885__delegate(x,y,more);
});
G__6885.cljs$core$IFn$_invoke$arity$variadic = G__6885__delegate;
return G__6885;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6888 = null;
if (arguments.length > 2) {
var G__6889__i = 0, G__6889__a = new Array(arguments.length -  2);
while (G__6889__i < G__6889__a.length) {G__6889__a[G__6889__i] = arguments[G__6889__i + 2]; ++G__6889__i;}
G__6888 = new cljs.core.IndexedSeq(G__6889__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6890__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6891 = y;
var G__6892 = cljs.core.first(more);
var G__6893 = cljs.core.next(more);
x = G__6891;
y = G__6892;
more = G__6893;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6890 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6894__i = 0, G__6894__a = new Array(arguments.length -  2);
while (G__6894__i < G__6894__a.length) {G__6894__a[G__6894__i] = arguments[G__6894__i + 2]; ++G__6894__i;}
  more = new cljs.core.IndexedSeq(G__6894__a,0);
} 
return G__6890__delegate.call(this,x,y,more);};
G__6890.cljs$lang$maxFixedArity = 2;
G__6890.cljs$lang$applyTo = (function (arglist__6895){
var x = cljs.core.first(arglist__6895);
arglist__6895 = cljs.core.next(arglist__6895);
var y = cljs.core.first(arglist__6895);
var more = cljs.core.rest(arglist__6895);
return G__6890__delegate(x,y,more);
});
G__6890.cljs$core$IFn$_invoke$arity$variadic = G__6890__delegate;
return G__6890;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6896 = null;
if (arguments.length > 2) {
var G__6897__i = 0, G__6897__a = new Array(arguments.length -  2);
while (G__6897__i < G__6897__a.length) {G__6897__a[G__6897__i] = arguments[G__6897__i + 2]; ++G__6897__i;}
G__6896 = new cljs.core.IndexedSeq(G__6897__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6898__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6899 = y;
var G__6900 = cljs.core.first(more);
var G__6901 = cljs.core.next(more);
x = G__6899;
y = G__6900;
more = G__6901;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6898 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6902__i = 0, G__6902__a = new Array(arguments.length -  2);
while (G__6902__i < G__6902__a.length) {G__6902__a[G__6902__i] = arguments[G__6902__i + 2]; ++G__6902__i;}
  more = new cljs.core.IndexedSeq(G__6902__a,0);
} 
return G__6898__delegate.call(this,x,y,more);};
G__6898.cljs$lang$maxFixedArity = 2;
G__6898.cljs$lang$applyTo = (function (arglist__6903){
var x = cljs.core.first(arglist__6903);
arglist__6903 = cljs.core.next(arglist__6903);
var y = cljs.core.first(arglist__6903);
var more = cljs.core.rest(arglist__6903);
return G__6898__delegate(x,y,more);
});
G__6898.cljs$core$IFn$_invoke$arity$variadic = G__6898__delegate;
return G__6898;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6904 = null;
if (arguments.length > 2) {
var G__6905__i = 0, G__6905__a = new Array(arguments.length -  2);
while (G__6905__i < G__6905__a.length) {G__6905__a[G__6905__i] = arguments[G__6905__i + 2]; ++G__6905__i;}
G__6904 = new cljs.core.IndexedSeq(G__6905__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6906__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6907 = y;
var G__6908 = cljs.core.first(more);
var G__6909 = cljs.core.next(more);
x = G__6907;
y = G__6908;
more = G__6909;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6906 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6910__i = 0, G__6910__a = new Array(arguments.length -  2);
while (G__6910__i < G__6910__a.length) {G__6910__a[G__6910__i] = arguments[G__6910__i + 2]; ++G__6910__i;}
  more = new cljs.core.IndexedSeq(G__6910__a,0);
} 
return G__6906__delegate.call(this,x,y,more);};
G__6906.cljs$lang$maxFixedArity = 2;
G__6906.cljs$lang$applyTo = (function (arglist__6911){
var x = cljs.core.first(arglist__6911);
arglist__6911 = cljs.core.next(arglist__6911);
var y = cljs.core.first(arglist__6911);
var more = cljs.core.rest(arglist__6911);
return G__6906__delegate(x,y,more);
});
G__6906.cljs$core$IFn$_invoke$arity$variadic = G__6906__delegate;
return G__6906;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6912 = null;
if (arguments.length > 2) {
var G__6913__i = 0, G__6913__a = new Array(arguments.length -  2);
while (G__6913__i < G__6913__a.length) {G__6913__a[G__6913__i] = arguments[G__6913__i + 2]; ++G__6913__i;}
G__6912 = new cljs.core.IndexedSeq(G__6913__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6912);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6914__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6915 = y;
var G__6916 = cljs.core.first(more);
var G__6917 = cljs.core.next(more);
x = G__6915;
y = G__6916;
more = G__6917;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6914 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6918__i = 0, G__6918__a = new Array(arguments.length -  2);
while (G__6918__i < G__6918__a.length) {G__6918__a[G__6918__i] = arguments[G__6918__i + 2]; ++G__6918__i;}
  more = new cljs.core.IndexedSeq(G__6918__a,0);
} 
return G__6914__delegate.call(this,x,y,more);};
G__6914.cljs$lang$maxFixedArity = 2;
G__6914.cljs$lang$applyTo = (function (arglist__6919){
var x = cljs.core.first(arglist__6919);
arglist__6919 = cljs.core.next(arglist__6919);
var y = cljs.core.first(arglist__6919);
var more = cljs.core.rest(arglist__6919);
return G__6914__delegate(x,y,more);
});
G__6914.cljs$core$IFn$_invoke$arity$variadic = G__6914__delegate;
return G__6914;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6920 = null;
if (arguments.length > 2) {
var G__6921__i = 0, G__6921__a = new Array(arguments.length -  2);
while (G__6921__i < G__6921__a.length) {G__6921__a[G__6921__i] = arguments[G__6921__i + 2]; ++G__6921__i;}
G__6920 = new cljs.core.IndexedSeq(G__6921__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
});
var max__3 = (function() { 
var G__6922__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
})(),more);
};
var G__6922 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6923__i = 0, G__6923__a = new Array(arguments.length -  2);
while (G__6923__i < G__6923__a.length) {G__6923__a[G__6923__i] = arguments[G__6923__i + 2]; ++G__6923__i;}
  more = new cljs.core.IndexedSeq(G__6923__a,0);
} 
return G__6922__delegate.call(this,x,y,more);};
G__6922.cljs$lang$maxFixedArity = 2;
G__6922.cljs$lang$applyTo = (function (arglist__6924){
var x = cljs.core.first(arglist__6924);
arglist__6924 = cljs.core.next(arglist__6924);
var y = cljs.core.first(arglist__6924);
var more = cljs.core.rest(arglist__6924);
return G__6922__delegate(x,y,more);
});
G__6922.cljs$core$IFn$_invoke$arity$variadic = G__6922__delegate;
return G__6922;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6925 = null;
if (arguments.length > 2) {
var G__6926__i = 0, G__6926__a = new Array(arguments.length -  2);
while (G__6926__i < G__6926__a.length) {G__6926__a[G__6926__i] = arguments[G__6926__i + 2]; ++G__6926__i;}
G__6925 = new cljs.core.IndexedSeq(G__6926__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4253__auto__ = x;
var y__4254__auto__ = y;
return ((x__4253__auto__ < y__4254__auto__) ? x__4253__auto__ : y__4254__auto__);
});
var min__3 = (function() { 
var G__6927__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4253__auto__ = x;
var y__4254__auto__ = y;
return ((x__4253__auto__ < y__4254__auto__) ? x__4253__auto__ : y__4254__auto__);
})(),more);
};
var G__6927 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6928__i = 0, G__6928__a = new Array(arguments.length -  2);
while (G__6928__i < G__6928__a.length) {G__6928__a[G__6928__i] = arguments[G__6928__i + 2]; ++G__6928__i;}
  more = new cljs.core.IndexedSeq(G__6928__a,0);
} 
return G__6927__delegate.call(this,x,y,more);};
G__6927.cljs$lang$maxFixedArity = 2;
G__6927.cljs$lang$applyTo = (function (arglist__6929){
var x = cljs.core.first(arglist__6929);
arglist__6929 = cljs.core.next(arglist__6929);
var y = cljs.core.first(arglist__6929);
var more = cljs.core.rest(arglist__6929);
return G__6927__delegate(x,y,more);
});
G__6927.cljs$core$IFn$_invoke$arity$variadic = G__6927__delegate;
return G__6927;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6930 = null;
if (arguments.length > 2) {
var G__6931__i = 0, G__6931__a = new Array(arguments.length -  2);
while (G__6931__i < G__6931__a.length) {G__6931__a[G__6931__i] = arguments[G__6931__i + 2]; ++G__6931__i;}
G__6930 = new cljs.core.IndexedSeq(G__6931__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6932__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6932 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6933__i = 0, G__6933__a = new Array(arguments.length -  2);
while (G__6933__i < G__6933__a.length) {G__6933__a[G__6933__i] = arguments[G__6933__i + 2]; ++G__6933__i;}
  more = new cljs.core.IndexedSeq(G__6933__a,0);
} 
return G__6932__delegate.call(this,x,y,more);};
G__6932.cljs$lang$maxFixedArity = 2;
G__6932.cljs$lang$applyTo = (function (arglist__6934){
var x = cljs.core.first(arglist__6934);
arglist__6934 = cljs.core.next(arglist__6934);
var y = cljs.core.first(arglist__6934);
var more = cljs.core.rest(arglist__6934);
return G__6932__delegate(x,y,more);
});
G__6932.cljs$core$IFn$_invoke$arity$variadic = G__6932__delegate;
return G__6932;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6935 = null;
if (arguments.length > 2) {
var G__6936__i = 0, G__6936__a = new Array(arguments.length -  2);
while (G__6936__i < G__6936__a.length) {G__6936__a[G__6936__i] = arguments[G__6936__i + 2]; ++G__6936__i;}
G__6935 = new cljs.core.IndexedSeq(G__6936__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6937__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6937 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6938__i = 0, G__6938__a = new Array(arguments.length -  2);
while (G__6938__i < G__6938__a.length) {G__6938__a[G__6938__i] = arguments[G__6938__i + 2]; ++G__6938__i;}
  more = new cljs.core.IndexedSeq(G__6938__a,0);
} 
return G__6937__delegate.call(this,x,y,more);};
G__6937.cljs$lang$maxFixedArity = 2;
G__6937.cljs$lang$applyTo = (function (arglist__6939){
var x = cljs.core.first(arglist__6939);
arglist__6939 = cljs.core.next(arglist__6939);
var y = cljs.core.first(arglist__6939);
var more = cljs.core.rest(arglist__6939);
return G__6937__delegate(x,y,more);
});
G__6937.cljs$core$IFn$_invoke$arity$variadic = G__6937__delegate;
return G__6937;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6940 = null;
if (arguments.length > 2) {
var G__6941__i = 0, G__6941__a = new Array(arguments.length -  2);
while (G__6941__i < G__6941__a.length) {G__6941__a[G__6941__i] = arguments[G__6941__i + 2]; ++G__6941__i;}
G__6940 = new cljs.core.IndexedSeq(G__6941__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6946__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6946 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6947__i = 0, G__6947__a = new Array(arguments.length -  2);
while (G__6947__i < G__6947__a.length) {G__6947__a[G__6947__i] = arguments[G__6947__i + 2]; ++G__6947__i;}
  more = new cljs.core.IndexedSeq(G__6947__a,0);
} 
return G__6946__delegate.call(this,x,y,more);};
G__6946.cljs$lang$maxFixedArity = 2;
G__6946.cljs$lang$applyTo = (function (arglist__6948){
var x = cljs.core.first(arglist__6948);
arglist__6948 = cljs.core.next(arglist__6948);
var y = cljs.core.first(arglist__6948);
var more = cljs.core.rest(arglist__6948);
return G__6946__delegate(x,y,more);
});
G__6946.cljs$core$IFn$_invoke$arity$variadic = G__6946__delegate;
return G__6946;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6949 = null;
if (arguments.length > 2) {
var G__6950__i = 0, G__6950__a = new Array(arguments.length -  2);
while (G__6950__i < G__6950__a.length) {G__6950__a[G__6950__i] = arguments[G__6950__i + 2]; ++G__6950__i;}
G__6949 = new cljs.core.IndexedSeq(G__6950__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6951__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6951 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6952__i = 0, G__6952__a = new Array(arguments.length -  2);
while (G__6952__i < G__6952__a.length) {G__6952__a[G__6952__i] = arguments[G__6952__i + 2]; ++G__6952__i;}
  more = new cljs.core.IndexedSeq(G__6952__a,0);
} 
return G__6951__delegate.call(this,x,y,more);};
G__6951.cljs$lang$maxFixedArity = 2;
G__6951.cljs$lang$applyTo = (function (arglist__6953){
var x = cljs.core.first(arglist__6953);
arglist__6953 = cljs.core.next(arglist__6953);
var y = cljs.core.first(arglist__6953);
var more = cljs.core.rest(arglist__6953);
return G__6951__delegate(x,y,more);
});
G__6951.cljs$core$IFn$_invoke$arity$variadic = G__6951__delegate;
return G__6951;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6954 = null;
if (arguments.length > 2) {
var G__6955__i = 0, G__6955__a = new Array(arguments.length -  2);
while (G__6955__i < G__6955__a.length) {G__6955__a[G__6955__i] = arguments[G__6955__i + 2]; ++G__6955__i;}
G__6954 = new cljs.core.IndexedSeq(G__6955__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6956__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6956 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6957__i = 0, G__6957__a = new Array(arguments.length -  2);
while (G__6957__i < G__6957__a.length) {G__6957__a[G__6957__i] = arguments[G__6957__i + 2]; ++G__6957__i;}
  more = new cljs.core.IndexedSeq(G__6957__a,0);
} 
return G__6956__delegate.call(this,x,y,more);};
G__6956.cljs$lang$maxFixedArity = 2;
G__6956.cljs$lang$applyTo = (function (arglist__6958){
var x = cljs.core.first(arglist__6958);
arglist__6958 = cljs.core.next(arglist__6958);
var y = cljs.core.first(arglist__6958);
var more = cljs.core.rest(arglist__6958);
return G__6956__delegate(x,y,more);
});
G__6956.cljs$core$IFn$_invoke$arity$variadic = G__6956__delegate;
return G__6956;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6959 = null;
if (arguments.length > 2) {
var G__6960__i = 0, G__6960__a = new Array(arguments.length -  2);
while (G__6960__i < G__6960__a.length) {G__6960__a[G__6960__i] = arguments[G__6960__i + 2]; ++G__6960__i;}
G__6959 = new cljs.core.IndexedSeq(G__6960__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6963 = x;
var G__6964 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6963,G__6964) : cljs.core.mod.call(null,G__6963,G__6964));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6965__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6965 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6966__i = 0, G__6966__a = new Array(arguments.length -  2);
while (G__6966__i < G__6966__a.length) {G__6966__a[G__6966__i] = arguments[G__6966__i + 2]; ++G__6966__i;}
  more = new cljs.core.IndexedSeq(G__6966__a,0);
} 
return G__6965__delegate.call(this,x,y,more);};
G__6965.cljs$lang$maxFixedArity = 2;
G__6965.cljs$lang$applyTo = (function (arglist__6967){
var x = cljs.core.first(arglist__6967);
arglist__6967 = cljs.core.next(arglist__6967);
var y = cljs.core.first(arglist__6967);
var more = cljs.core.rest(arglist__6967);
return G__6965__delegate(x,y,more);
});
G__6965.cljs$core$IFn$_invoke$arity$variadic = G__6965__delegate;
return G__6965;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6968 = null;
if (arguments.length > 2) {
var G__6969__i = 0, G__6969__a = new Array(arguments.length -  2);
while (G__6969__i < G__6969__a.length) {G__6969__a[G__6969__i] = arguments[G__6969__i + 2]; ++G__6969__i;}
G__6968 = new cljs.core.IndexedSeq(G__6969__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6970__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6970 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6971__i = 0, G__6971__a = new Array(arguments.length -  2);
while (G__6971__i < G__6971__a.length) {G__6971__a[G__6971__i] = arguments[G__6971__i + 2]; ++G__6971__i;}
  more = new cljs.core.IndexedSeq(G__6971__a,0);
} 
return G__6970__delegate.call(this,x,y,more);};
G__6970.cljs$lang$maxFixedArity = 2;
G__6970.cljs$lang$applyTo = (function (arglist__6972){
var x = cljs.core.first(arglist__6972);
arglist__6972 = cljs.core.next(arglist__6972);
var y = cljs.core.first(arglist__6972);
var more = cljs.core.rest(arglist__6972);
return G__6970__delegate(x,y,more);
});
G__6970.cljs$core$IFn$_invoke$arity$variadic = G__6970__delegate;
return G__6970;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6973 = null;
if (arguments.length > 2) {
var G__6974__i = 0, G__6974__a = new Array(arguments.length -  2);
while (G__6974__i < G__6974__a.length) {G__6974__a[G__6974__i] = arguments[G__6974__i + 2]; ++G__6974__i;}
G__6973 = new cljs.core.IndexedSeq(G__6974__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6977 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6977) : Math.floor.call(null,G__6977));
} else {
var G__6978 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6978) : Math.ceil.call(null,G__6978));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6979__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6979 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6980__i = 0, G__6980__a = new Array(arguments.length -  2);
while (G__6980__i < G__6980__a.length) {G__6980__a[G__6980__i] = arguments[G__6980__i + 2]; ++G__6980__i;}
  more = new cljs.core.IndexedSeq(G__6980__a,0);
} 
return G__6979__delegate.call(this,x,y,more);};
G__6979.cljs$lang$maxFixedArity = 2;
G__6979.cljs$lang$applyTo = (function (arglist__6981){
var x = cljs.core.first(arglist__6981);
arglist__6981 = cljs.core.next(arglist__6981);
var y = cljs.core.first(arglist__6981);
var more = cljs.core.rest(arglist__6981);
return G__6979__delegate(x,y,more);
});
G__6979.cljs$core$IFn$_invoke$arity$variadic = G__6979__delegate;
return G__6979;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6982 = null;
if (arguments.length > 2) {
var G__6983__i = 0, G__6983__a = new Array(arguments.length -  2);
while (G__6983__i < G__6983__a.length) {G__6983__a[G__6983__i] = arguments[G__6983__i + 2]; ++G__6983__i;}
G__6982 = new cljs.core.IndexedSeq(G__6983__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6984__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6984 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6985__i = 0, G__6985__a = new Array(arguments.length -  2);
while (G__6985__i < G__6985__a.length) {G__6985__a[G__6985__i] = arguments[G__6985__i + 2]; ++G__6985__i;}
  more = new cljs.core.IndexedSeq(G__6985__a,0);
} 
return G__6984__delegate.call(this,x,y,more);};
G__6984.cljs$lang$maxFixedArity = 2;
G__6984.cljs$lang$applyTo = (function (arglist__6986){
var x = cljs.core.first(arglist__6986);
arglist__6986 = cljs.core.next(arglist__6986);
var y = cljs.core.first(arglist__6986);
var more = cljs.core.rest(arglist__6986);
return G__6984__delegate(x,y,more);
});
G__6984.cljs$core$IFn$_invoke$arity$variadic = G__6984__delegate;
return G__6984;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6987 = null;
if (arguments.length > 2) {
var G__6988__i = 0, G__6988__a = new Array(arguments.length -  2);
while (G__6988__i < G__6988__a.length) {G__6988__a[G__6988__i] = arguments[G__6988__i + 2]; ++G__6988__i;}
G__6987 = new cljs.core.IndexedSeq(G__6988__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6989__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6989 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6990__i = 0, G__6990__a = new Array(arguments.length -  2);
while (G__6990__i < G__6990__a.length) {G__6990__a[G__6990__i] = arguments[G__6990__i + 2]; ++G__6990__i;}
  more = new cljs.core.IndexedSeq(G__6990__a,0);
} 
return G__6989__delegate.call(this,x,y,more);};
G__6989.cljs$lang$maxFixedArity = 2;
G__6989.cljs$lang$applyTo = (function (arglist__6991){
var x = cljs.core.first(arglist__6991);
arglist__6991 = cljs.core.next(arglist__6991);
var y = cljs.core.first(arglist__6991);
var more = cljs.core.rest(arglist__6991);
return G__6989__delegate(x,y,more);
});
G__6989.cljs$core$IFn$_invoke$arity$variadic = G__6989__delegate;
return G__6989;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6992 = null;
if (arguments.length > 2) {
var G__6993__i = 0, G__6993__a = new Array(arguments.length -  2);
while (G__6993__i < G__6993__a.length) {G__6993__a[G__6993__i] = arguments[G__6993__i + 2]; ++G__6993__i;}
G__6992 = new cljs.core.IndexedSeq(G__6993__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6994__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6994 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6995__i = 0, G__6995__a = new Array(arguments.length -  2);
while (G__6995__i < G__6995__a.length) {G__6995__a[G__6995__i] = arguments[G__6995__i + 2]; ++G__6995__i;}
  more = new cljs.core.IndexedSeq(G__6995__a,0);
} 
return G__6994__delegate.call(this,x,y,more);};
G__6994.cljs$lang$maxFixedArity = 2;
G__6994.cljs$lang$applyTo = (function (arglist__6996){
var x = cljs.core.first(arglist__6996);
arglist__6996 = cljs.core.next(arglist__6996);
var y = cljs.core.first(arglist__6996);
var more = cljs.core.rest(arglist__6996);
return G__6994__delegate(x,y,more);
});
G__6994.cljs$core$IFn$_invoke$arity$variadic = G__6994__delegate;
return G__6994;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6997 = null;
if (arguments.length > 2) {
var G__6998__i = 0, G__6998__a = new Array(arguments.length -  2);
while (G__6998__i < G__6998__a.length) {G__6998__a[G__6998__i] = arguments[G__6998__i + 2]; ++G__6998__i;}
G__6997 = new cljs.core.IndexedSeq(G__6998__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7003__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7004 = y;
var G__7005 = cljs.core.first(more);
var G__7006 = cljs.core.next(more);
x = G__7004;
y = G__7005;
more = G__7006;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7003 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7007__i = 0, G__7007__a = new Array(arguments.length -  2);
while (G__7007__i < G__7007__a.length) {G__7007__a[G__7007__i] = arguments[G__7007__i + 2]; ++G__7007__i;}
  more = new cljs.core.IndexedSeq(G__7007__a,0);
} 
return G__7003__delegate.call(this,x,y,more);};
G__7003.cljs$lang$maxFixedArity = 2;
G__7003.cljs$lang$applyTo = (function (arglist__7008){
var x = cljs.core.first(arglist__7008);
arglist__7008 = cljs.core.next(arglist__7008);
var y = cljs.core.first(arglist__7008);
var more = cljs.core.rest(arglist__7008);
return G__7003__delegate(x,y,more);
});
G__7003.cljs$core$IFn$_invoke$arity$variadic = G__7003__delegate;
return G__7003;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7009 = null;
if (arguments.length > 2) {
var G__7010__i = 0, G__7010__a = new Array(arguments.length -  2);
while (G__7010__i < G__7010__a.length) {G__7010__a[G__7010__i] = arguments[G__7010__i + 2]; ++G__7010__i;}
G__7009 = new cljs.core.IndexedSeq(G__7010__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7011 = (n__$1 - (1));
var G__7012 = cljs.core.next(xs);
n__$1 = G__7011;
xs = G__7012;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7016 = x;
return goog.string.buildString(G__7016);
}
});
var str__2 = (function() { 
var G__7017__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7018 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7019 = cljs.core.next(more);
sb = G__7018;
more = G__7019;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7017 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7020__i = 0, G__7020__a = new Array(arguments.length -  1);
while (G__7020__i < G__7020__a.length) {G__7020__a[G__7020__i] = arguments[G__7020__i + 1]; ++G__7020__i;}
  ys = new cljs.core.IndexedSeq(G__7020__a,0);
} 
return G__7017__delegate.call(this,x,ys);};
G__7017.cljs$lang$maxFixedArity = 1;
G__7017.cljs$lang$applyTo = (function (arglist__7021){
var x = cljs.core.first(arglist__7021);
var ys = cljs.core.rest(arglist__7021);
return G__7017__delegate(x,ys);
});
G__7017.cljs$core$IFn$_invoke$arity$variadic = G__7017__delegate;
return G__7017;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7022 = null;
if (arguments.length > 1) {
var G__7023__i = 0, G__7023__a = new Array(arguments.length -  1);
while (G__7023__i < G__7023__a.length) {G__7023__a[G__7023__i] = arguments[G__7023__i + 1]; ++G__7023__i;}
G__7022 = new cljs.core.IndexedSeq(G__7023__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7024 = cljs.core.next(xs);
var G__7025 = cljs.core.next(ys);
xs = G__7024;
ys = G__7025;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7026 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7027 = cljs.core.next(s);
res = G__7026;
s = G__7027;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7032 = ((h + (cljs.core.hash((function (){var G__7030 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7030) : cljs.core.key.call(null,G__7030));
})()) ^ cljs.core.hash((function (){var G__7031 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7031) : cljs.core.val.call(null,G__7031));
})()))) % (4503599627370496));
var G__7033 = cljs.core.next(s);
h = G__7032;
s = G__7033;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7034 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7035 = cljs.core.next(s__$1);
h = G__7034;
s__$1 = G__7035;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7046_7056 = cljs.core.seq(fn_map);
var chunk__7047_7057 = null;
var count__7048_7058 = (0);
var i__7049_7059 = (0);
while(true){
if((i__7049_7059 < count__7048_7058)){
var vec__7050_7060 = chunk__7047_7057.cljs$core$IIndexed$_nth$arity$2(null,i__7049_7059);
var key_name_7061 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7050_7060,(0),null);
var f_7062 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7050_7060,(1),null);
var str_name_7063 = (function (){var G__7051 = key_name_7061;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7051) : cljs.core.name.call(null,G__7051));
})();
(obj[str_name_7063] = f_7062);

var G__7064 = seq__7046_7056;
var G__7065 = chunk__7047_7057;
var G__7066 = count__7048_7058;
var G__7067 = (i__7049_7059 + (1));
seq__7046_7056 = G__7064;
chunk__7047_7057 = G__7065;
count__7048_7058 = G__7066;
i__7049_7059 = G__7067;
continue;
} else {
var temp__4126__auto___7068 = cljs.core.seq(seq__7046_7056);
if(temp__4126__auto___7068){
var seq__7046_7069__$1 = temp__4126__auto___7068;
if(cljs.core.chunked_seq_QMARK_(seq__7046_7069__$1)){
var c__4716__auto___7070 = (function (){var G__7052 = seq__7046_7069__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7052) : cljs.core.chunk_first.call(null,G__7052));
})();
var G__7071 = (function (){var G__7053 = seq__7046_7069__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7053) : cljs.core.chunk_rest.call(null,G__7053));
})();
var G__7072 = c__4716__auto___7070;
var G__7073 = cljs.core.count(c__4716__auto___7070);
var G__7074 = (0);
seq__7046_7056 = G__7071;
chunk__7047_7057 = G__7072;
count__7048_7058 = G__7073;
i__7049_7059 = G__7074;
continue;
} else {
var vec__7054_7075 = cljs.core.first(seq__7046_7069__$1);
var key_name_7076 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7054_7075,(0),null);
var f_7077 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7054_7075,(1),null);
var str_name_7078 = (function (){var G__7055 = key_name_7076;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7055) : cljs.core.name.call(null,G__7055));
})();
(obj[str_name_7078] = f_7077);

var G__7079 = cljs.core.next(seq__7046_7069__$1);
var G__7080 = null;
var G__7081 = (0);
var G__7082 = (0);
seq__7046_7056 = G__7079;
chunk__7047_7057 = G__7080;
count__7048_7058 = G__7081;
i__7049_7059 = G__7082;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7084 = coll;
if(G__7084){
var bit__4610__auto__ = (G__7084.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4610__auto__) || (G__7084.cljs$core$IReversible$)){
return true;
} else {
if((!G__7084.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7084);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7085 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7085;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7086 = (i - (1));
var G__7087 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7086;
r = G__7087;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7088__i = 0, G__7088__a = new Array(arguments.length -  0);
while (G__7088__i < G__7088__a.length) {G__7088__a[G__7088__i] = arguments[G__7088__i + 0]; ++G__7088__i;}
  xs = new cljs.core.IndexedSeq(G__7088__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7089){
var xs = cljs.core.seq(arglist__7089);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3929__auto__ = (coll == null);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var G__7093 = coll;
if(G__7093){
var bit__4603__auto__ = (G__7093.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__7093.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7095 = x;
if(G__7095){
var bit__4610__auto__ = (G__7095.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4610__auto__) || (G__7095.cljs$core$IList$)){
return true;
} else {
if((!G__7095.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7095);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7095);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.not(a.ns);
if(and__3917__auto__){
return b.ns;
} else {
return and__3917__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7102 = a.ns;
var G__7103 = b.ns;
return goog.array.defaultCompare(G__7102,G__7103);
})();
if(((0) === nsc)){
var G__7104 = a.name;
var G__7105 = b.name;
return goog.array.defaultCompare(G__7104,G__7105);
} else {
return nsc;
}
}
} else {
var G__7106 = a.name;
var G__7107 = b.name;
return goog.array.defaultCompare(G__7106,G__7107);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4350__auto__ = self__._hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7109 = null;
var G__7109__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7109__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7109 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7109__2.call(this,self__,coll);
case 3:
return G__7109__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7109.cljs$core$IFn$_invoke$arity$2 = G__7109__2;
G__7109.cljs$core$IFn$_invoke$arity$3 = G__7109__3;
return G__7109;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7108){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7108)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7111 = x;
if(G__7111){
var bit__4603__auto__ = (G__7111.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4603__auto__) || (G__7111.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7113 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7113) : cljs.core.name.call(null,G__7113));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7114 = ls.sval();
ls = G__7114;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7116 = s;
if(G__7116){
var bit__4603__auto__ = (G__7116.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4603__auto__) || (G__7116.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7117 = cljs.core.next(s__$1);
s__$1 = G__7117;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7118 = (0);
var xs_7119 = cljs.core.seq(coll);
while(true){
if(xs_7119){
(ret[i_7118] = cljs.core.to_array(cljs.core.first(xs_7119)));

var G__7120 = (i_7118 + (1));
var G__7121 = cljs.core.next(xs_7119);
i_7118 = G__7120;
xs_7119 = G__7121;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7124 = (i + (1));
var G__7125 = cljs.core.next(s__$1);
i = G__7124;
s__$1 = G__7125;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___7126 = size;
var i_7127 = (0);
while(true){
if((i_7127 < n__4816__auto___7126)){
(a[i_7127] = init_val_or_seq);

var G__7128 = (i_7127 + (1));
i_7127 = G__7128;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7131 = (i + (1));
var G__7132 = cljs.core.next(s__$1);
i = G__7131;
s__$1 = G__7132;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___7133 = size;
var i_7134 = (0);
while(true){
if((i_7134 < n__4816__auto___7133)){
(a[i_7134] = init_val_or_seq);

var G__7135 = (i_7134 + (1));
i_7134 = G__7135;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7138 = (i + (1));
var G__7139 = cljs.core.next(s__$1);
i = G__7138;
s__$1 = G__7139;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___7140 = size;
var i_7141 = (0);
while(true){
if((i_7141 < n__4816__auto___7140)){
(a[i_7141] = init_val_or_seq);

var G__7142 = (i_7141 + (1));
i_7141 = G__7142;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7145 = (i + (1));
var G__7146 = cljs.core.next(s__$1);
i = G__7145;
s__$1 = G__7146;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___7147 = size;
var i_7148 = (0);
while(true){
if((i_7148 < n__4816__auto___7147)){
(a[i_7148] = init_val_or_seq);

var G__7149 = (i_7148 + (1));
i_7148 = G__7149;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7150 = cljs.core.next(s__$1);
var G__7151 = (i - (1));
var G__7152 = (sum + (1));
s__$1 = G__7150;
i = G__7151;
sum = G__7152;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7172__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7172 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7173__i = 0, G__7173__a = new Array(arguments.length -  2);
while (G__7173__i < G__7173__a.length) {G__7173__a[G__7173__i] = arguments[G__7173__i + 2]; ++G__7173__i;}
  zs = new cljs.core.IndexedSeq(G__7173__a,0);
} 
return G__7172__delegate.call(this,x,y,zs);};
G__7172.cljs$lang$maxFixedArity = 2;
G__7172.cljs$lang$applyTo = (function (arglist__7174){
var x = cljs.core.first(arglist__7174);
arglist__7174 = cljs.core.next(arglist__7174);
var y = cljs.core.first(arglist__7174);
var zs = cljs.core.rest(arglist__7174);
return G__7172__delegate(x,y,zs);
});
G__7172.cljs$core$IFn$_invoke$arity$variadic = G__7172__delegate;
return G__7172;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7175 = null;
if (arguments.length > 2) {
var G__7176__i = 0, G__7176__a = new Array(arguments.length -  2);
while (G__7176__i < G__7176__a.length) {G__7176__a[G__7176__i] = arguments[G__7176__i + 2]; ++G__7176__i;}
G__7175 = new cljs.core.IndexedSeq(G__7176__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7177__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7177 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7178__i = 0, G__7178__a = new Array(arguments.length -  4);
while (G__7178__i < G__7178__a.length) {G__7178__a[G__7178__i] = arguments[G__7178__i + 4]; ++G__7178__i;}
  more = new cljs.core.IndexedSeq(G__7178__a,0);
} 
return G__7177__delegate.call(this,a,b,c,d,more);};
G__7177.cljs$lang$maxFixedArity = 4;
G__7177.cljs$lang$applyTo = (function (arglist__7179){
var a = cljs.core.first(arglist__7179);
arglist__7179 = cljs.core.next(arglist__7179);
var b = cljs.core.first(arglist__7179);
arglist__7179 = cljs.core.next(arglist__7179);
var c = cljs.core.first(arglist__7179);
arglist__7179 = cljs.core.next(arglist__7179);
var d = cljs.core.first(arglist__7179);
var more = cljs.core.rest(arglist__7179);
return G__7177__delegate(a,b,c,d,more);
});
G__7177.cljs$core$IFn$_invoke$arity$variadic = G__7177__delegate;
return G__7177;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7180 = null;
if (arguments.length > 4) {
var G__7181__i = 0, G__7181__a = new Array(arguments.length -  4);
while (G__7181__i < G__7181__a.length) {G__7181__a[G__7181__i] = arguments[G__7181__i + 4]; ++G__7181__i;}
G__7180 = new cljs.core.IndexedSeq(G__7181__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7182__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7183 = ntcoll;
var G__7184 = cljs.core.first(vals);
var G__7185 = cljs.core.next(vals);
tcoll = G__7183;
val = G__7184;
vals = G__7185;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7182 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7186__i = 0, G__7186__a = new Array(arguments.length -  2);
while (G__7186__i < G__7186__a.length) {G__7186__a[G__7186__i] = arguments[G__7186__i + 2]; ++G__7186__i;}
  vals = new cljs.core.IndexedSeq(G__7186__a,0);
} 
return G__7182__delegate.call(this,tcoll,val,vals);};
G__7182.cljs$lang$maxFixedArity = 2;
G__7182.cljs$lang$applyTo = (function (arglist__7187){
var tcoll = cljs.core.first(arglist__7187);
arglist__7187 = cljs.core.next(arglist__7187);
var val = cljs.core.first(arglist__7187);
var vals = cljs.core.rest(arglist__7187);
return G__7182__delegate(tcoll,val,vals);
});
G__7182.cljs$core$IFn$_invoke$arity$variadic = G__7182__delegate;
return G__7182;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7188 = null;
if (arguments.length > 2) {
var G__7189__i = 0, G__7189__a = new Array(arguments.length -  2);
while (G__7189__i < G__7189__a.length) {G__7189__a[G__7189__i] = arguments[G__7189__i + 2]; ++G__7189__i;}
G__7188 = new cljs.core.IndexedSeq(G__7189__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7190__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7191 = ntcoll;
var G__7192 = cljs.core.first(kvs);
var G__7193 = cljs.core.second(kvs);
var G__7194 = cljs.core.nnext(kvs);
tcoll = G__7191;
key = G__7192;
val = G__7193;
kvs = G__7194;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7190 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7195__i = 0, G__7195__a = new Array(arguments.length -  3);
while (G__7195__i < G__7195__a.length) {G__7195__a[G__7195__i] = arguments[G__7195__i + 3]; ++G__7195__i;}
  kvs = new cljs.core.IndexedSeq(G__7195__a,0);
} 
return G__7190__delegate.call(this,tcoll,key,val,kvs);};
G__7190.cljs$lang$maxFixedArity = 3;
G__7190.cljs$lang$applyTo = (function (arglist__7196){
var tcoll = cljs.core.first(arglist__7196);
arglist__7196 = cljs.core.next(arglist__7196);
var key = cljs.core.first(arglist__7196);
arglist__7196 = cljs.core.next(arglist__7196);
var val = cljs.core.first(arglist__7196);
var kvs = cljs.core.rest(arglist__7196);
return G__7190__delegate(tcoll,key,val,kvs);
});
G__7190.cljs$core$IFn$_invoke$arity$variadic = G__7190__delegate;
return G__7190;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7197 = null;
if (arguments.length > 3) {
var G__7198__i = 0, G__7198__a = new Array(arguments.length -  3);
while (G__7198__i < G__7198__a.length) {G__7198__a[G__7198__i] = arguments[G__7198__i + 3]; ++G__7198__i;}
G__7197 = new cljs.core.IndexedSeq(G__7198__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7199__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7200 = ntcoll;
var G__7201 = cljs.core.first(ks);
var G__7202 = cljs.core.next(ks);
tcoll = G__7200;
key = G__7201;
ks = G__7202;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7199 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7203__i = 0, G__7203__a = new Array(arguments.length -  2);
while (G__7203__i < G__7203__a.length) {G__7203__a[G__7203__i] = arguments[G__7203__i + 2]; ++G__7203__i;}
  ks = new cljs.core.IndexedSeq(G__7203__a,0);
} 
return G__7199__delegate.call(this,tcoll,key,ks);};
G__7199.cljs$lang$maxFixedArity = 2;
G__7199.cljs$lang$applyTo = (function (arglist__7204){
var tcoll = cljs.core.first(arglist__7204);
arglist__7204 = cljs.core.next(arglist__7204);
var key = cljs.core.first(arglist__7204);
var ks = cljs.core.rest(arglist__7204);
return G__7199__delegate(tcoll,key,ks);
});
G__7199.cljs$core$IFn$_invoke$arity$variadic = G__7199__delegate;
return G__7199;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7205 = null;
if (arguments.length > 2) {
var G__7206__i = 0, G__7206__a = new Array(arguments.length -  2);
while (G__7206__i < G__7206__a.length) {G__7206__a[G__7206__i] = arguments[G__7206__i + 2]; ++G__7206__i;}
G__7205 = new cljs.core.IndexedSeq(G__7206__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7207__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7208 = ntcoll;
var G__7209 = cljs.core.first(vals);
var G__7210 = cljs.core.next(vals);
tcoll = G__7208;
val = G__7209;
vals = G__7210;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7207 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7211__i = 0, G__7211__a = new Array(arguments.length -  2);
while (G__7211__i < G__7211__a.length) {G__7211__a[G__7211__i] = arguments[G__7211__i + 2]; ++G__7211__i;}
  vals = new cljs.core.IndexedSeq(G__7211__a,0);
} 
return G__7207__delegate.call(this,tcoll,val,vals);};
G__7207.cljs$lang$maxFixedArity = 2;
G__7207.cljs$lang$applyTo = (function (arglist__7212){
var tcoll = cljs.core.first(arglist__7212);
arglist__7212 = cljs.core.next(arglist__7212);
var val = cljs.core.first(arglist__7212);
var vals = cljs.core.rest(arglist__7212);
return G__7207__delegate(tcoll,val,vals);
});
G__7207.cljs$core$IFn$_invoke$arity$variadic = G__7207__delegate;
return G__7207;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7213 = null;
if (arguments.length > 2) {
var G__7214__i = 0, G__7214__a = new Array(arguments.length -  2);
while (G__7214__i < G__7214__a.length) {G__7214__a[G__7214__i] = arguments[G__7214__i + 2]; ++G__7214__i;}
G__7213 = new cljs.core.IndexedSeq(G__7214__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4860 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4860);
} else {
var G__7425 = a4860;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7425) : f.call(null,G__7425));
}
} else {
var b4861 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4860,b4861);
} else {
var G__7426 = a4860;
var G__7427 = b4861;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7426,G__7427) : f.call(null,G__7426,G__7427));
}
} else {
var c4862 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4860,b4861,c4862);
} else {
var G__7428 = a4860;
var G__7429 = b4861;
var G__7430 = c4862;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7428,G__7429,G__7430) : f.call(null,G__7428,G__7429,G__7430));
}
} else {
var d4863 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4860,b4861,c4862,d4863);
} else {
var G__7431 = a4860;
var G__7432 = b4861;
var G__7433 = c4862;
var G__7434 = d4863;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7431,G__7432,G__7433,G__7434) : f.call(null,G__7431,G__7432,G__7433,G__7434));
}
} else {
var e4864 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4860,b4861,c4862,d4863,e4864);
} else {
var G__7435 = a4860;
var G__7436 = b4861;
var G__7437 = c4862;
var G__7438 = d4863;
var G__7439 = e4864;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7435,G__7436,G__7437,G__7438,G__7439) : f.call(null,G__7435,G__7436,G__7437,G__7438,G__7439));
}
} else {
var f4865 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4860,b4861,c4862,d4863,e4864,f4865);
} else {
var G__7440 = a4860;
var G__7441 = b4861;
var G__7442 = c4862;
var G__7443 = d4863;
var G__7444 = e4864;
var G__7445 = f4865;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7440,G__7441,G__7442,G__7443,G__7444,G__7445) : f.call(null,G__7440,G__7441,G__7442,G__7443,G__7444,G__7445));
}
} else {
var g4866 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4860,b4861,c4862,d4863,e4864,f4865,g4866);
} else {
var G__7446 = a4860;
var G__7447 = b4861;
var G__7448 = c4862;
var G__7449 = d4863;
var G__7450 = e4864;
var G__7451 = f4865;
var G__7452 = g4866;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452) : f.call(null,G__7446,G__7447,G__7448,G__7449,G__7450,G__7451,G__7452));
}
} else {
var h4867 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867);
} else {
var G__7453 = a4860;
var G__7454 = b4861;
var G__7455 = c4862;
var G__7456 = d4863;
var G__7457 = e4864;
var G__7458 = f4865;
var G__7459 = g4866;
var G__7460 = h4867;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460) : f.call(null,G__7453,G__7454,G__7455,G__7456,G__7457,G__7458,G__7459,G__7460));
}
} else {
var i4868 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868);
} else {
var G__7461 = a4860;
var G__7462 = b4861;
var G__7463 = c4862;
var G__7464 = d4863;
var G__7465 = e4864;
var G__7466 = f4865;
var G__7467 = g4866;
var G__7468 = h4867;
var G__7469 = i4868;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469) : f.call(null,G__7461,G__7462,G__7463,G__7464,G__7465,G__7466,G__7467,G__7468,G__7469));
}
} else {
var j4869 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869);
} else {
var G__7470 = a4860;
var G__7471 = b4861;
var G__7472 = c4862;
var G__7473 = d4863;
var G__7474 = e4864;
var G__7475 = f4865;
var G__7476 = g4866;
var G__7477 = h4867;
var G__7478 = i4868;
var G__7479 = j4869;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7470,G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478,G__7479) : f.call(null,G__7470,G__7471,G__7472,G__7473,G__7474,G__7475,G__7476,G__7477,G__7478,G__7479));
}
} else {
var k4870 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870);
} else {
var G__7480 = a4860;
var G__7481 = b4861;
var G__7482 = c4862;
var G__7483 = d4863;
var G__7484 = e4864;
var G__7485 = f4865;
var G__7486 = g4866;
var G__7487 = h4867;
var G__7488 = i4868;
var G__7489 = j4869;
var G__7490 = k4870;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7480,G__7481,G__7482,G__7483,G__7484,G__7485,G__7486,G__7487,G__7488,G__7489,G__7490) : f.call(null,G__7480,G__7481,G__7482,G__7483,G__7484,G__7485,G__7486,G__7487,G__7488,G__7489,G__7490));
}
} else {
var l4871 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871);
} else {
var G__7491 = a4860;
var G__7492 = b4861;
var G__7493 = c4862;
var G__7494 = d4863;
var G__7495 = e4864;
var G__7496 = f4865;
var G__7497 = g4866;
var G__7498 = h4867;
var G__7499 = i4868;
var G__7500 = j4869;
var G__7501 = k4870;
var G__7502 = l4871;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7491,G__7492,G__7493,G__7494,G__7495,G__7496,G__7497,G__7498,G__7499,G__7500,G__7501,G__7502) : f.call(null,G__7491,G__7492,G__7493,G__7494,G__7495,G__7496,G__7497,G__7498,G__7499,G__7500,G__7501,G__7502));
}
} else {
var m4872 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872);
} else {
var G__7503 = a4860;
var G__7504 = b4861;
var G__7505 = c4862;
var G__7506 = d4863;
var G__7507 = e4864;
var G__7508 = f4865;
var G__7509 = g4866;
var G__7510 = h4867;
var G__7511 = i4868;
var G__7512 = j4869;
var G__7513 = k4870;
var G__7514 = l4871;
var G__7515 = m4872;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7503,G__7504,G__7505,G__7506,G__7507,G__7508,G__7509,G__7510,G__7511,G__7512,G__7513,G__7514,G__7515) : f.call(null,G__7503,G__7504,G__7505,G__7506,G__7507,G__7508,G__7509,G__7510,G__7511,G__7512,G__7513,G__7514,G__7515));
}
} else {
var n4873 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873);
} else {
var G__7516 = a4860;
var G__7517 = b4861;
var G__7518 = c4862;
var G__7519 = d4863;
var G__7520 = e4864;
var G__7521 = f4865;
var G__7522 = g4866;
var G__7523 = h4867;
var G__7524 = i4868;
var G__7525 = j4869;
var G__7526 = k4870;
var G__7527 = l4871;
var G__7528 = m4872;
var G__7529 = n4873;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7516,G__7517,G__7518,G__7519,G__7520,G__7521,G__7522,G__7523,G__7524,G__7525,G__7526,G__7527,G__7528,G__7529) : f.call(null,G__7516,G__7517,G__7518,G__7519,G__7520,G__7521,G__7522,G__7523,G__7524,G__7525,G__7526,G__7527,G__7528,G__7529));
}
} else {
var o4874 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874);
} else {
var G__7530 = a4860;
var G__7531 = b4861;
var G__7532 = c4862;
var G__7533 = d4863;
var G__7534 = e4864;
var G__7535 = f4865;
var G__7536 = g4866;
var G__7537 = h4867;
var G__7538 = i4868;
var G__7539 = j4869;
var G__7540 = k4870;
var G__7541 = l4871;
var G__7542 = m4872;
var G__7543 = n4873;
var G__7544 = o4874;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7530,G__7531,G__7532,G__7533,G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541,G__7542,G__7543,G__7544) : f.call(null,G__7530,G__7531,G__7532,G__7533,G__7534,G__7535,G__7536,G__7537,G__7538,G__7539,G__7540,G__7541,G__7542,G__7543,G__7544));
}
} else {
var p4875 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875);
} else {
var G__7545 = a4860;
var G__7546 = b4861;
var G__7547 = c4862;
var G__7548 = d4863;
var G__7549 = e4864;
var G__7550 = f4865;
var G__7551 = g4866;
var G__7552 = h4867;
var G__7553 = i4868;
var G__7554 = j4869;
var G__7555 = k4870;
var G__7556 = l4871;
var G__7557 = m4872;
var G__7558 = n4873;
var G__7559 = o4874;
var G__7560 = p4875;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7545,G__7546,G__7547,G__7548,G__7549,G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558,G__7559,G__7560) : f.call(null,G__7545,G__7546,G__7547,G__7548,G__7549,G__7550,G__7551,G__7552,G__7553,G__7554,G__7555,G__7556,G__7557,G__7558,G__7559,G__7560));
}
} else {
var q4876 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876);
} else {
var G__7561 = a4860;
var G__7562 = b4861;
var G__7563 = c4862;
var G__7564 = d4863;
var G__7565 = e4864;
var G__7566 = f4865;
var G__7567 = g4866;
var G__7568 = h4867;
var G__7569 = i4868;
var G__7570 = j4869;
var G__7571 = k4870;
var G__7572 = l4871;
var G__7573 = m4872;
var G__7574 = n4873;
var G__7575 = o4874;
var G__7576 = p4875;
var G__7577 = q4876;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7561,G__7562,G__7563,G__7564,G__7565,G__7566,G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577) : f.call(null,G__7561,G__7562,G__7563,G__7564,G__7565,G__7566,G__7567,G__7568,G__7569,G__7570,G__7571,G__7572,G__7573,G__7574,G__7575,G__7576,G__7577));
}
} else {
var r4877 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877);
} else {
var G__7578 = a4860;
var G__7579 = b4861;
var G__7580 = c4862;
var G__7581 = d4863;
var G__7582 = e4864;
var G__7583 = f4865;
var G__7584 = g4866;
var G__7585 = h4867;
var G__7586 = i4868;
var G__7587 = j4869;
var G__7588 = k4870;
var G__7589 = l4871;
var G__7590 = m4872;
var G__7591 = n4873;
var G__7592 = o4874;
var G__7593 = p4875;
var G__7594 = q4876;
var G__7595 = r4877;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595) : f.call(null,G__7578,G__7579,G__7580,G__7581,G__7582,G__7583,G__7584,G__7585,G__7586,G__7587,G__7588,G__7589,G__7590,G__7591,G__7592,G__7593,G__7594,G__7595));
}
} else {
var s4878 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877,s4878);
} else {
var G__7596 = a4860;
var G__7597 = b4861;
var G__7598 = c4862;
var G__7599 = d4863;
var G__7600 = e4864;
var G__7601 = f4865;
var G__7602 = g4866;
var G__7603 = h4867;
var G__7604 = i4868;
var G__7605 = j4869;
var G__7606 = k4870;
var G__7607 = l4871;
var G__7608 = m4872;
var G__7609 = n4873;
var G__7610 = o4874;
var G__7611 = p4875;
var G__7612 = q4876;
var G__7613 = r4877;
var G__7614 = s4878;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612,G__7613,G__7614) : f.call(null,G__7596,G__7597,G__7598,G__7599,G__7600,G__7601,G__7602,G__7603,G__7604,G__7605,G__7606,G__7607,G__7608,G__7609,G__7610,G__7611,G__7612,G__7613,G__7614));
}
} else {
var t4879 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877,s4878,t4879);
} else {
var G__7615 = a4860;
var G__7616 = b4861;
var G__7617 = c4862;
var G__7618 = d4863;
var G__7619 = e4864;
var G__7620 = f4865;
var G__7621 = g4866;
var G__7622 = h4867;
var G__7623 = i4868;
var G__7624 = j4869;
var G__7625 = k4870;
var G__7626 = l4871;
var G__7627 = m4872;
var G__7628 = n4873;
var G__7629 = o4874;
var G__7630 = p4875;
var G__7631 = q4876;
var G__7632 = r4877;
var G__7633 = s4878;
var G__7634 = t4879;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633,G__7634) : f.call(null,G__7615,G__7616,G__7617,G__7618,G__7619,G__7620,G__7621,G__7622,G__7623,G__7624,G__7625,G__7626,G__7627,G__7628,G__7629,G__7630,G__7631,G__7632,G__7633,G__7634));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7635__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7635 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7636__i = 0, G__7636__a = new Array(arguments.length -  5);
while (G__7636__i < G__7636__a.length) {G__7636__a[G__7636__i] = arguments[G__7636__i + 5]; ++G__7636__i;}
  args = new cljs.core.IndexedSeq(G__7636__a,0);
} 
return G__7635__delegate.call(this,f,a,b,c,d,args);};
G__7635.cljs$lang$maxFixedArity = 5;
G__7635.cljs$lang$applyTo = (function (arglist__7637){
var f = cljs.core.first(arglist__7637);
arglist__7637 = cljs.core.next(arglist__7637);
var a = cljs.core.first(arglist__7637);
arglist__7637 = cljs.core.next(arglist__7637);
var b = cljs.core.first(arglist__7637);
arglist__7637 = cljs.core.next(arglist__7637);
var c = cljs.core.first(arglist__7637);
arglist__7637 = cljs.core.next(arglist__7637);
var d = cljs.core.first(arglist__7637);
var args = cljs.core.rest(arglist__7637);
return G__7635__delegate(f,a,b,c,d,args);
});
G__7635.cljs$core$IFn$_invoke$arity$variadic = G__7635__delegate;
return G__7635;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7638 = null;
if (arguments.length > 5) {
var G__7639__i = 0, G__7639__a = new Array(arguments.length -  5);
while (G__7639__i < G__7639__a.length) {G__7639__a[G__7639__i] = arguments[G__7639__i + 5]; ++G__7639__i;}
G__7638 = new cljs.core.IndexedSeq(G__7639__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7638);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__7655 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7655) : f.call(null,G__7655));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__7656 = cljs.core.meta(obj);
var G__7657 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7656,G__7657) : f.call(null,G__7656,G__7657));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__7658 = cljs.core.meta(obj);
var G__7659 = a;
var G__7660 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7658,G__7659,G__7660) : f.call(null,G__7658,G__7659,G__7660));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__7661 = cljs.core.meta(obj);
var G__7662 = a;
var G__7663 = b;
var G__7664 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7661,G__7662,G__7663,G__7664) : f.call(null,G__7661,G__7662,G__7663,G__7664));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__7665 = cljs.core.meta(obj);
var G__7666 = a;
var G__7667 = b;
var G__7668 = c;
var G__7669 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7665,G__7666,G__7667,G__7668,G__7669) : f.call(null,G__7665,G__7666,G__7667,G__7668,G__7669));
})());
});
var vary_meta__7 = (function() { 
var G__7670__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__7670 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__7671__i = 0, G__7671__a = new Array(arguments.length -  6);
while (G__7671__i < G__7671__a.length) {G__7671__a[G__7671__i] = arguments[G__7671__i + 6]; ++G__7671__i;}
  args = new cljs.core.IndexedSeq(G__7671__a,0);
} 
return G__7670__delegate.call(this,obj,f,a,b,c,d,args);};
G__7670.cljs$lang$maxFixedArity = 6;
G__7670.cljs$lang$applyTo = (function (arglist__7672){
var obj = cljs.core.first(arglist__7672);
arglist__7672 = cljs.core.next(arglist__7672);
var f = cljs.core.first(arglist__7672);
arglist__7672 = cljs.core.next(arglist__7672);
var a = cljs.core.first(arglist__7672);
arglist__7672 = cljs.core.next(arglist__7672);
var b = cljs.core.first(arglist__7672);
arglist__7672 = cljs.core.next(arglist__7672);
var c = cljs.core.first(arglist__7672);
arglist__7672 = cljs.core.next(arglist__7672);
var d = cljs.core.first(arglist__7672);
var args = cljs.core.rest(arglist__7672);
return G__7670__delegate(obj,f,a,b,c,d,args);
});
G__7670.cljs$core$IFn$_invoke$arity$variadic = G__7670__delegate;
return G__7670;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__7673 = null;
if (arguments.length > 6) {
var G__7674__i = 0, G__7674__a = new Array(arguments.length -  6);
while (G__7674__i < G__7674__a.length) {G__7674__a[G__7674__i] = arguments[G__7674__i + 6]; ++G__7674__i;}
G__7673 = new cljs.core.IndexedSeq(G__7674__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__7673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__7675__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__7675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7676__i = 0, G__7676__a = new Array(arguments.length -  2);
while (G__7676__i < G__7676__a.length) {G__7676__a[G__7676__i] = arguments[G__7676__i + 2]; ++G__7676__i;}
  more = new cljs.core.IndexedSeq(G__7676__a,0);
} 
return G__7675__delegate.call(this,x,y,more);};
G__7675.cljs$lang$maxFixedArity = 2;
G__7675.cljs$lang$applyTo = (function (arglist__7677){
var x = cljs.core.first(arglist__7677);
arglist__7677 = cljs.core.next(arglist__7677);
var y = cljs.core.first(arglist__7677);
var more = cljs.core.rest(arglist__7677);
return G__7675__delegate(x,y,more);
});
G__7675.cljs$core$IFn$_invoke$arity$variadic = G__7675__delegate;
return G__7675;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__7678 = null;
if (arguments.length > 2) {
var G__7679__i = 0, G__7679__a = new Array(arguments.length -  2);
while (G__7679__i < G__7679__a.length) {G__7679__a[G__7679__i] = arguments[G__7679__i + 2]; ++G__7679__i;}
G__7678 = new cljs.core.IndexedSeq(G__7679__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t7683 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t7683 = (function (nil_iter,meta7684){
this.nil_iter = nil_iter;
this.meta7684 = meta7684;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t7683.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t7683.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t7683.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t7683.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_7685){
var self__ = this;
var _7685__$1 = this;
return self__.meta7684;
});

cljs.core.t7683.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_7685,meta7684__$1){
var self__ = this;
var _7685__$1 = this;
return (new cljs.core.t7683(self__.nil_iter,meta7684__$1));
});

cljs.core.t7683.cljs$lang$type = true;

cljs.core.t7683.cljs$lang$ctorStr = "cljs.core/t7683";

cljs.core.t7683.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/t7683");
});

cljs.core.__GT_t7683 = (function __GT_t7683(nil_iter__$1,meta7684){
return (new cljs.core.t7683(nil_iter__$1,meta7684));
});

}

return (new cljs.core.t7683(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/victorneo/Development/modern-cljs/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3917__auto__ = !((lt.stepper == null));
if(and__3917__auto__){
return self__.iter.hasNext();
} else {
return and__3917__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__7686 = lt;
var G__7687 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7686,G__7687) : self__.xform.call(null,G__7686,G__7687));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7688 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7688) : self__.xform.call(null,G__7688));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__7690 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7690) : xform.call(null,G__7690));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__7692 = cljs.core.next(iters__$1);
iters__$1 = G__7692;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4816__auto___7693 = self__.iters.length;
var i_7694 = (0);
while(true){
if((i_7694 < n__4816__auto___7693)){
(self__.nexts[i_7694] = (self__.iters[i_7694]).next());

var G__7695 = (i_7694 + (1));
i_7694 = G__7695;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3917__auto__ = !((lt.stepper == null));
if(and__3917__auto__){
return this$.hasNext();
} else {
return and__3917__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__7691 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7691) : self__.xform.call(null,G__7691));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__7700 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7700) : xform.call(null,G__7700));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__7701_7705 = cljs.core.seq(colls);
var chunk__7702_7706 = null;
var count__7703_7707 = (0);
var i__7704_7708 = (0);
while(true){
if((i__7704_7708 < count__7703_7707)){
var coll_7709 = chunk__7702_7706.cljs$core$IIndexed$_nth$arity$2(null,i__7704_7708);
iters.push(cljs.core.iter(coll_7709));

var G__7710 = seq__7701_7705;
var G__7711 = chunk__7702_7706;
var G__7712 = count__7703_7707;
var G__7713 = (i__7704_7708 + (1));
seq__7701_7705 = G__7710;
chunk__7702_7706 = G__7711;
count__7703_7707 = G__7712;
i__7704_7708 = G__7713;
continue;
} else {
var temp__4126__auto___7714 = cljs.core.seq(seq__7701_7705);
if(temp__4126__auto___7714){
var seq__7701_7715__$1 = temp__4126__auto___7714;
if(cljs.core.chunked_seq_QMARK_(seq__7701_7715__$1)){
var c__4716__auto___7716 = cljs.core.chunk_first(seq__7701_7715__$1);
var G__7717 = cljs.core.chunk_rest(seq__7701_7715__$1);
var G__7718 = c__4716__auto___7716;
var G__7719 = cljs.core.count(c__4716__auto___7716);
var G__7720 = (0);
seq__7701_7705 = G__7717;
chunk__7702_7706 = G__7718;
count__7703_7707 = G__7719;
i__7704_7708 = G__7720;
continue;
} else {
var coll_7721 = cljs.core.first(seq__7701_7715__$1);
iters.push(cljs.core.iter(coll_7721));

var G__7722 = cljs.core.next(seq__7701_7715__$1);
var G__7723 = null;
var G__7724 = (0);
var G__7725 = (0);
seq__7701_7705 = G__7722;
chunk__7702_7706 = G__7723;
count__7703_7707 = G__7724;
i__7704_7708 = G__7725;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3929__auto__ = cljs.core.seq(coll);
if(or__3929__auto__){
return or__3929__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__7726__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__7726 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__7727__i = 0, G__7727__a = new Array(arguments.length -  2);
while (G__7727__i < G__7727__a.length) {G__7727__a[G__7727__i] = arguments[G__7727__i + 2]; ++G__7727__i;}
  colls = new cljs.core.IndexedSeq(G__7727__a,0);
} 
return G__7726__delegate.call(this,xform,coll,colls);};
G__7726.cljs$lang$maxFixedArity = 2;
G__7726.cljs$lang$applyTo = (function (arglist__7728){
var xform = cljs.core.first(arglist__7728);
arglist__7728 = cljs.core.next(arglist__7728);
var coll = cljs.core.first(arglist__7728);
var colls = cljs.core.rest(arglist__7728);
return G__7726__delegate(xform,coll,colls);
});
G__7726.cljs$core$IFn$_invoke$arity$variadic = G__7726__delegate;
return G__7726;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__7729 = null;
if (arguments.length > 2) {
var G__7730__i = 0, G__7730__a = new Array(arguments.length -  2);
while (G__7730__i < G__7730__a.length) {G__7730__a[G__7730__i] = arguments[G__7730__i + 2]; ++G__7730__i;}
G__7729 = new cljs.core.IndexedSeq(G__7730__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__7729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__7732 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7732) : pred.call(null,G__7732));
})())){
var G__7733 = pred;
var G__7734 = cljs.core.next(coll);
pred = G__7733;
coll = G__7734;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3929__auto__ = (function (){var G__7738 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7738) : pred.call(null,G__7738));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__7739 = pred;
var G__7740 = cljs.core.next(coll);
pred = G__7739;
coll = G__7740;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__7747 = null;
var G__7747__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7747__1 = (function (x){
return cljs.core.not((function (){var G__7744 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7744) : f.call(null,G__7744));
})());
});
var G__7747__2 = (function (x,y){
return cljs.core.not((function (){var G__7745 = x;
var G__7746 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7745,G__7746) : f.call(null,G__7745,G__7746));
})());
});
var G__7747__3 = (function() { 
var G__7748__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7748 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7749__i = 0, G__7749__a = new Array(arguments.length -  2);
while (G__7749__i < G__7749__a.length) {G__7749__a[G__7749__i] = arguments[G__7749__i + 2]; ++G__7749__i;}
  zs = new cljs.core.IndexedSeq(G__7749__a,0);
} 
return G__7748__delegate.call(this,x,y,zs);};
G__7748.cljs$lang$maxFixedArity = 2;
G__7748.cljs$lang$applyTo = (function (arglist__7750){
var x = cljs.core.first(arglist__7750);
arglist__7750 = cljs.core.next(arglist__7750);
var y = cljs.core.first(arglist__7750);
var zs = cljs.core.rest(arglist__7750);
return G__7748__delegate(x,y,zs);
});
G__7748.cljs$core$IFn$_invoke$arity$variadic = G__7748__delegate;
return G__7748;
})()
;
G__7747 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7747__0.call(this);
case 1:
return G__7747__1.call(this,x);
case 2:
return G__7747__2.call(this,x,y);
default:
var G__7751 = null;
if (arguments.length > 2) {
var G__7752__i = 0, G__7752__a = new Array(arguments.length -  2);
while (G__7752__i < G__7752__a.length) {G__7752__a[G__7752__i] = arguments[G__7752__i + 2]; ++G__7752__i;}
G__7751 = new cljs.core.IndexedSeq(G__7752__a,0);
}
return G__7747__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7751);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7747.cljs$lang$maxFixedArity = 2;
G__7747.cljs$lang$applyTo = G__7747__3.cljs$lang$applyTo;
G__7747.cljs$core$IFn$_invoke$arity$0 = G__7747__0;
G__7747.cljs$core$IFn$_invoke$arity$1 = G__7747__1;
G__7747.cljs$core$IFn$_invoke$arity$2 = G__7747__2;
G__7747.cljs$core$IFn$_invoke$arity$variadic = G__7747__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7747;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__7753__delegate = function (args){
return x;
};
var G__7753 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7754__i = 0, G__7754__a = new Array(arguments.length -  0);
while (G__7754__i < G__7754__a.length) {G__7754__a[G__7754__i] = arguments[G__7754__i + 0]; ++G__7754__i;}
  args = new cljs.core.IndexedSeq(G__7754__a,0);
} 
return G__7753__delegate.call(this,args);};
G__7753.cljs$lang$maxFixedArity = 0;
G__7753.cljs$lang$applyTo = (function (arglist__7755){
var args = cljs.core.seq(arglist__7755);
return G__7753__delegate(args);
});
G__7753.cljs$core$IFn$_invoke$arity$variadic = G__7753__delegate;
return G__7753;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__7810 = null;
var G__7810__0 = (function (){
var G__7783 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7783) : f.call(null,G__7783));
});
var G__7810__1 = (function (x){
var G__7784 = (function (){var G__7785 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7785) : g.call(null,G__7785));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7784) : f.call(null,G__7784));
});
var G__7810__2 = (function (x,y){
var G__7786 = (function (){var G__7787 = x;
var G__7788 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7787,G__7788) : g.call(null,G__7787,G__7788));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7786) : f.call(null,G__7786));
});
var G__7810__3 = (function (x,y,z){
var G__7789 = (function (){var G__7790 = x;
var G__7791 = y;
var G__7792 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7790,G__7791,G__7792) : g.call(null,G__7790,G__7791,G__7792));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7789) : f.call(null,G__7789));
});
var G__7810__4 = (function() { 
var G__7811__delegate = function (x,y,z,args){
var G__7793 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7793) : f.call(null,G__7793));
};
var G__7811 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7812__i = 0, G__7812__a = new Array(arguments.length -  3);
while (G__7812__i < G__7812__a.length) {G__7812__a[G__7812__i] = arguments[G__7812__i + 3]; ++G__7812__i;}
  args = new cljs.core.IndexedSeq(G__7812__a,0);
} 
return G__7811__delegate.call(this,x,y,z,args);};
G__7811.cljs$lang$maxFixedArity = 3;
G__7811.cljs$lang$applyTo = (function (arglist__7813){
var x = cljs.core.first(arglist__7813);
arglist__7813 = cljs.core.next(arglist__7813);
var y = cljs.core.first(arglist__7813);
arglist__7813 = cljs.core.next(arglist__7813);
var z = cljs.core.first(arglist__7813);
var args = cljs.core.rest(arglist__7813);
return G__7811__delegate(x,y,z,args);
});
G__7811.cljs$core$IFn$_invoke$arity$variadic = G__7811__delegate;
return G__7811;
})()
;
G__7810 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7810__0.call(this);
case 1:
return G__7810__1.call(this,x);
case 2:
return G__7810__2.call(this,x,y);
case 3:
return G__7810__3.call(this,x,y,z);
default:
var G__7814 = null;
if (arguments.length > 3) {
var G__7815__i = 0, G__7815__a = new Array(arguments.length -  3);
while (G__7815__i < G__7815__a.length) {G__7815__a[G__7815__i] = arguments[G__7815__i + 3]; ++G__7815__i;}
G__7814 = new cljs.core.IndexedSeq(G__7815__a,0);
}
return G__7810__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7810.cljs$lang$maxFixedArity = 3;
G__7810.cljs$lang$applyTo = G__7810__4.cljs$lang$applyTo;
G__7810.cljs$core$IFn$_invoke$arity$0 = G__7810__0;
G__7810.cljs$core$IFn$_invoke$arity$1 = G__7810__1;
G__7810.cljs$core$IFn$_invoke$arity$2 = G__7810__2;
G__7810.cljs$core$IFn$_invoke$arity$3 = G__7810__3;
G__7810.cljs$core$IFn$_invoke$arity$variadic = G__7810__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7810;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__7816 = null;
var G__7816__0 = (function (){
var G__7794 = (function (){var G__7795 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7795) : g.call(null,G__7795));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7794) : f.call(null,G__7794));
});
var G__7816__1 = (function (x){
var G__7796 = (function (){var G__7797 = (function (){var G__7798 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7798) : h.call(null,G__7798));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7797) : g.call(null,G__7797));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7796) : f.call(null,G__7796));
});
var G__7816__2 = (function (x,y){
var G__7799 = (function (){var G__7800 = (function (){var G__7801 = x;
var G__7802 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7801,G__7802) : h.call(null,G__7801,G__7802));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7800) : g.call(null,G__7800));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7799) : f.call(null,G__7799));
});
var G__7816__3 = (function (x,y,z){
var G__7803 = (function (){var G__7804 = (function (){var G__7805 = x;
var G__7806 = y;
var G__7807 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7805,G__7806,G__7807) : h.call(null,G__7805,G__7806,G__7807));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7804) : g.call(null,G__7804));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7803) : f.call(null,G__7803));
});
var G__7816__4 = (function() { 
var G__7817__delegate = function (x,y,z,args){
var G__7808 = (function (){var G__7809 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7809) : g.call(null,G__7809));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7808) : f.call(null,G__7808));
};
var G__7817 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7818__i = 0, G__7818__a = new Array(arguments.length -  3);
while (G__7818__i < G__7818__a.length) {G__7818__a[G__7818__i] = arguments[G__7818__i + 3]; ++G__7818__i;}
  args = new cljs.core.IndexedSeq(G__7818__a,0);
} 
return G__7817__delegate.call(this,x,y,z,args);};
G__7817.cljs$lang$maxFixedArity = 3;
G__7817.cljs$lang$applyTo = (function (arglist__7819){
var x = cljs.core.first(arglist__7819);
arglist__7819 = cljs.core.next(arglist__7819);
var y = cljs.core.first(arglist__7819);
arglist__7819 = cljs.core.next(arglist__7819);
var z = cljs.core.first(arglist__7819);
var args = cljs.core.rest(arglist__7819);
return G__7817__delegate(x,y,z,args);
});
G__7817.cljs$core$IFn$_invoke$arity$variadic = G__7817__delegate;
return G__7817;
})()
;
G__7816 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7816__0.call(this);
case 1:
return G__7816__1.call(this,x);
case 2:
return G__7816__2.call(this,x,y);
case 3:
return G__7816__3.call(this,x,y,z);
default:
var G__7820 = null;
if (arguments.length > 3) {
var G__7821__i = 0, G__7821__a = new Array(arguments.length -  3);
while (G__7821__i < G__7821__a.length) {G__7821__a[G__7821__i] = arguments[G__7821__i + 3]; ++G__7821__i;}
G__7820 = new cljs.core.IndexedSeq(G__7821__a,0);
}
return G__7816__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7816.cljs$lang$maxFixedArity = 3;
G__7816.cljs$lang$applyTo = G__7816__4.cljs$lang$applyTo;
G__7816.cljs$core$IFn$_invoke$arity$0 = G__7816__0;
G__7816.cljs$core$IFn$_invoke$arity$1 = G__7816__1;
G__7816.cljs$core$IFn$_invoke$arity$2 = G__7816__2;
G__7816.cljs$core$IFn$_invoke$arity$3 = G__7816__3;
G__7816.cljs$core$IFn$_invoke$arity$variadic = G__7816__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7816;
})()
});
var comp__4 = (function() { 
var G__7822__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7823__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7824 = cljs.core.first(fs__$2).call(null,ret);
var G__7825 = cljs.core.next(fs__$2);
ret = G__7824;
fs__$2 = G__7825;
continue;
} else {
return ret;
}
break;
}
};
var G__7823 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7826__i = 0, G__7826__a = new Array(arguments.length -  0);
while (G__7826__i < G__7826__a.length) {G__7826__a[G__7826__i] = arguments[G__7826__i + 0]; ++G__7826__i;}
  args = new cljs.core.IndexedSeq(G__7826__a,0);
} 
return G__7823__delegate.call(this,args);};
G__7823.cljs$lang$maxFixedArity = 0;
G__7823.cljs$lang$applyTo = (function (arglist__7827){
var args = cljs.core.seq(arglist__7827);
return G__7823__delegate(args);
});
G__7823.cljs$core$IFn$_invoke$arity$variadic = G__7823__delegate;
return G__7823;
})()
;
;})(fs__$1))
};
var G__7822 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7828__i = 0, G__7828__a = new Array(arguments.length -  3);
while (G__7828__i < G__7828__a.length) {G__7828__a[G__7828__i] = arguments[G__7828__i + 3]; ++G__7828__i;}
  fs = new cljs.core.IndexedSeq(G__7828__a,0);
} 
return G__7822__delegate.call(this,f1,f2,f3,fs);};
G__7822.cljs$lang$maxFixedArity = 3;
G__7822.cljs$lang$applyTo = (function (arglist__7829){
var f1 = cljs.core.first(arglist__7829);
arglist__7829 = cljs.core.next(arglist__7829);
var f2 = cljs.core.first(arglist__7829);
arglist__7829 = cljs.core.next(arglist__7829);
var f3 = cljs.core.first(arglist__7829);
var fs = cljs.core.rest(arglist__7829);
return G__7822__delegate(f1,f2,f3,fs);
});
G__7822.cljs$core$IFn$_invoke$arity$variadic = G__7822__delegate;
return G__7822;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__7830 = null;
if (arguments.length > 3) {
var G__7831__i = 0, G__7831__a = new Array(arguments.length -  3);
while (G__7831__i < G__7831__a.length) {G__7831__a[G__7831__i] = arguments[G__7831__i + 3]; ++G__7831__i;}
G__7830 = new cljs.core.IndexedSeq(G__7831__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7830);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7916 = null;
var G__7916__0 = (function (){
var G__7874 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7874) : f.call(null,G__7874));
});
var G__7916__1 = (function (x){
var G__7875 = arg1;
var G__7876 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7875,G__7876) : f.call(null,G__7875,G__7876));
});
var G__7916__2 = (function (x,y){
var G__7877 = arg1;
var G__7878 = x;
var G__7879 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7877,G__7878,G__7879) : f.call(null,G__7877,G__7878,G__7879));
});
var G__7916__3 = (function (x,y,z){
var G__7880 = arg1;
var G__7881 = x;
var G__7882 = y;
var G__7883 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7880,G__7881,G__7882,G__7883) : f.call(null,G__7880,G__7881,G__7882,G__7883));
});
var G__7916__4 = (function() { 
var G__7917__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7917 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7918__i = 0, G__7918__a = new Array(arguments.length -  3);
while (G__7918__i < G__7918__a.length) {G__7918__a[G__7918__i] = arguments[G__7918__i + 3]; ++G__7918__i;}
  args = new cljs.core.IndexedSeq(G__7918__a,0);
} 
return G__7917__delegate.call(this,x,y,z,args);};
G__7917.cljs$lang$maxFixedArity = 3;
G__7917.cljs$lang$applyTo = (function (arglist__7919){
var x = cljs.core.first(arglist__7919);
arglist__7919 = cljs.core.next(arglist__7919);
var y = cljs.core.first(arglist__7919);
arglist__7919 = cljs.core.next(arglist__7919);
var z = cljs.core.first(arglist__7919);
var args = cljs.core.rest(arglist__7919);
return G__7917__delegate(x,y,z,args);
});
G__7917.cljs$core$IFn$_invoke$arity$variadic = G__7917__delegate;
return G__7917;
})()
;
G__7916 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7916__0.call(this);
case 1:
return G__7916__1.call(this,x);
case 2:
return G__7916__2.call(this,x,y);
case 3:
return G__7916__3.call(this,x,y,z);
default:
var G__7920 = null;
if (arguments.length > 3) {
var G__7921__i = 0, G__7921__a = new Array(arguments.length -  3);
while (G__7921__i < G__7921__a.length) {G__7921__a[G__7921__i] = arguments[G__7921__i + 3]; ++G__7921__i;}
G__7920 = new cljs.core.IndexedSeq(G__7921__a,0);
}
return G__7916__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7920);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7916.cljs$lang$maxFixedArity = 3;
G__7916.cljs$lang$applyTo = G__7916__4.cljs$lang$applyTo;
G__7916.cljs$core$IFn$_invoke$arity$0 = G__7916__0;
G__7916.cljs$core$IFn$_invoke$arity$1 = G__7916__1;
G__7916.cljs$core$IFn$_invoke$arity$2 = G__7916__2;
G__7916.cljs$core$IFn$_invoke$arity$3 = G__7916__3;
G__7916.cljs$core$IFn$_invoke$arity$variadic = G__7916__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7916;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7922 = null;
var G__7922__0 = (function (){
var G__7884 = arg1;
var G__7885 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7884,G__7885) : f.call(null,G__7884,G__7885));
});
var G__7922__1 = (function (x){
var G__7886 = arg1;
var G__7887 = arg2;
var G__7888 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7886,G__7887,G__7888) : f.call(null,G__7886,G__7887,G__7888));
});
var G__7922__2 = (function (x,y){
var G__7889 = arg1;
var G__7890 = arg2;
var G__7891 = x;
var G__7892 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7889,G__7890,G__7891,G__7892) : f.call(null,G__7889,G__7890,G__7891,G__7892));
});
var G__7922__3 = (function (x,y,z){
var G__7893 = arg1;
var G__7894 = arg2;
var G__7895 = x;
var G__7896 = y;
var G__7897 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7893,G__7894,G__7895,G__7896,G__7897) : f.call(null,G__7893,G__7894,G__7895,G__7896,G__7897));
});
var G__7922__4 = (function() { 
var G__7923__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7923 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7924__i = 0, G__7924__a = new Array(arguments.length -  3);
while (G__7924__i < G__7924__a.length) {G__7924__a[G__7924__i] = arguments[G__7924__i + 3]; ++G__7924__i;}
  args = new cljs.core.IndexedSeq(G__7924__a,0);
} 
return G__7923__delegate.call(this,x,y,z,args);};
G__7923.cljs$lang$maxFixedArity = 3;
G__7923.cljs$lang$applyTo = (function (arglist__7925){
var x = cljs.core.first(arglist__7925);
arglist__7925 = cljs.core.next(arglist__7925);
var y = cljs.core.first(arglist__7925);
arglist__7925 = cljs.core.next(arglist__7925);
var z = cljs.core.first(arglist__7925);
var args = cljs.core.rest(arglist__7925);
return G__7923__delegate(x,y,z,args);
});
G__7923.cljs$core$IFn$_invoke$arity$variadic = G__7923__delegate;
return G__7923;
})()
;
G__7922 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7922__0.call(this);
case 1:
return G__7922__1.call(this,x);
case 2:
return G__7922__2.call(this,x,y);
case 3:
return G__7922__3.call(this,x,y,z);
default:
var G__7926 = null;
if (arguments.length > 3) {
var G__7927__i = 0, G__7927__a = new Array(arguments.length -  3);
while (G__7927__i < G__7927__a.length) {G__7927__a[G__7927__i] = arguments[G__7927__i + 3]; ++G__7927__i;}
G__7926 = new cljs.core.IndexedSeq(G__7927__a,0);
}
return G__7922__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7922.cljs$lang$maxFixedArity = 3;
G__7922.cljs$lang$applyTo = G__7922__4.cljs$lang$applyTo;
G__7922.cljs$core$IFn$_invoke$arity$0 = G__7922__0;
G__7922.cljs$core$IFn$_invoke$arity$1 = G__7922__1;
G__7922.cljs$core$IFn$_invoke$arity$2 = G__7922__2;
G__7922.cljs$core$IFn$_invoke$arity$3 = G__7922__3;
G__7922.cljs$core$IFn$_invoke$arity$variadic = G__7922__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7922;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7928 = null;
var G__7928__0 = (function (){
var G__7898 = arg1;
var G__7899 = arg2;
var G__7900 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7898,G__7899,G__7900) : f.call(null,G__7898,G__7899,G__7900));
});
var G__7928__1 = (function (x){
var G__7901 = arg1;
var G__7902 = arg2;
var G__7903 = arg3;
var G__7904 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7901,G__7902,G__7903,G__7904) : f.call(null,G__7901,G__7902,G__7903,G__7904));
});
var G__7928__2 = (function (x,y){
var G__7905 = arg1;
var G__7906 = arg2;
var G__7907 = arg3;
var G__7908 = x;
var G__7909 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7905,G__7906,G__7907,G__7908,G__7909) : f.call(null,G__7905,G__7906,G__7907,G__7908,G__7909));
});
var G__7928__3 = (function (x,y,z){
var G__7910 = arg1;
var G__7911 = arg2;
var G__7912 = arg3;
var G__7913 = x;
var G__7914 = y;
var G__7915 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7910,G__7911,G__7912,G__7913,G__7914,G__7915) : f.call(null,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915));
});
var G__7928__4 = (function() { 
var G__7929__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7929 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7930__i = 0, G__7930__a = new Array(arguments.length -  3);
while (G__7930__i < G__7930__a.length) {G__7930__a[G__7930__i] = arguments[G__7930__i + 3]; ++G__7930__i;}
  args = new cljs.core.IndexedSeq(G__7930__a,0);
} 
return G__7929__delegate.call(this,x,y,z,args);};
G__7929.cljs$lang$maxFixedArity = 3;
G__7929.cljs$lang$applyTo = (function (arglist__7931){
var x = cljs.core.first(arglist__7931);
arglist__7931 = cljs.core.next(arglist__7931);
var y = cljs.core.first(arglist__7931);
arglist__7931 = cljs.core.next(arglist__7931);
var z = cljs.core.first(arglist__7931);
var args = cljs.core.rest(arglist__7931);
return G__7929__delegate(x,y,z,args);
});
G__7929.cljs$core$IFn$_invoke$arity$variadic = G__7929__delegate;
return G__7929;
})()
;
G__7928 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7928__0.call(this);
case 1:
return G__7928__1.call(this,x);
case 2:
return G__7928__2.call(this,x,y);
case 3:
return G__7928__3.call(this,x,y,z);
default:
var G__7932 = null;
if (arguments.length > 3) {
var G__7933__i = 0, G__7933__a = new Array(arguments.length -  3);
while (G__7933__i < G__7933__a.length) {G__7933__a[G__7933__i] = arguments[G__7933__i + 3]; ++G__7933__i;}
G__7932 = new cljs.core.IndexedSeq(G__7933__a,0);
}
return G__7928__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7928.cljs$lang$maxFixedArity = 3;
G__7928.cljs$lang$applyTo = G__7928__4.cljs$lang$applyTo;
G__7928.cljs$core$IFn$_invoke$arity$0 = G__7928__0;
G__7928.cljs$core$IFn$_invoke$arity$1 = G__7928__1;
G__7928.cljs$core$IFn$_invoke$arity$2 = G__7928__2;
G__7928.cljs$core$IFn$_invoke$arity$3 = G__7928__3;
G__7928.cljs$core$IFn$_invoke$arity$variadic = G__7928__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7928;
})()
});
var partial__5 = (function() { 
var G__7934__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7935__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7935 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7936__i = 0, G__7936__a = new Array(arguments.length -  0);
while (G__7936__i < G__7936__a.length) {G__7936__a[G__7936__i] = arguments[G__7936__i + 0]; ++G__7936__i;}
  args = new cljs.core.IndexedSeq(G__7936__a,0);
} 
return G__7935__delegate.call(this,args);};
G__7935.cljs$lang$maxFixedArity = 0;
G__7935.cljs$lang$applyTo = (function (arglist__7937){
var args = cljs.core.seq(arglist__7937);
return G__7935__delegate(args);
});
G__7935.cljs$core$IFn$_invoke$arity$variadic = G__7935__delegate;
return G__7935;
})()
;
};
var G__7934 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7938__i = 0, G__7938__a = new Array(arguments.length -  4);
while (G__7938__i < G__7938__a.length) {G__7938__a[G__7938__i] = arguments[G__7938__i + 4]; ++G__7938__i;}
  more = new cljs.core.IndexedSeq(G__7938__a,0);
} 
return G__7934__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7934.cljs$lang$maxFixedArity = 4;
G__7934.cljs$lang$applyTo = (function (arglist__7939){
var f = cljs.core.first(arglist__7939);
arglist__7939 = cljs.core.next(arglist__7939);
var arg1 = cljs.core.first(arglist__7939);
arglist__7939 = cljs.core.next(arglist__7939);
var arg2 = cljs.core.first(arglist__7939);
arglist__7939 = cljs.core.next(arglist__7939);
var arg3 = cljs.core.first(arglist__7939);
var more = cljs.core.rest(arglist__7939);
return G__7934__delegate(f,arg1,arg2,arg3,more);
});
G__7934.cljs$core$IFn$_invoke$arity$variadic = G__7934__delegate;
return G__7934;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7940 = null;
if (arguments.length > 4) {
var G__7941__i = 0, G__7941__a = new Array(arguments.length -  4);
while (G__7941__i < G__7941__a.length) {G__7941__a[G__7941__i] = arguments[G__7941__i + 4]; ++G__7941__i;}
G__7940 = new cljs.core.IndexedSeq(G__7941__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7974 = null;
var G__7974__1 = (function (a){
var G__7958 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7958) : f.call(null,G__7958));
});
var G__7974__2 = (function (a,b){
var G__7959 = (((a == null))?x:a);
var G__7960 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7959,G__7960) : f.call(null,G__7959,G__7960));
});
var G__7974__3 = (function (a,b,c){
var G__7961 = (((a == null))?x:a);
var G__7962 = b;
var G__7963 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7961,G__7962,G__7963) : f.call(null,G__7961,G__7962,G__7963));
});
var G__7974__4 = (function() { 
var G__7975__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7975 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7976__i = 0, G__7976__a = new Array(arguments.length -  3);
while (G__7976__i < G__7976__a.length) {G__7976__a[G__7976__i] = arguments[G__7976__i + 3]; ++G__7976__i;}
  ds = new cljs.core.IndexedSeq(G__7976__a,0);
} 
return G__7975__delegate.call(this,a,b,c,ds);};
G__7975.cljs$lang$maxFixedArity = 3;
G__7975.cljs$lang$applyTo = (function (arglist__7977){
var a = cljs.core.first(arglist__7977);
arglist__7977 = cljs.core.next(arglist__7977);
var b = cljs.core.first(arglist__7977);
arglist__7977 = cljs.core.next(arglist__7977);
var c = cljs.core.first(arglist__7977);
var ds = cljs.core.rest(arglist__7977);
return G__7975__delegate(a,b,c,ds);
});
G__7975.cljs$core$IFn$_invoke$arity$variadic = G__7975__delegate;
return G__7975;
})()
;
G__7974 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7974__1.call(this,a);
case 2:
return G__7974__2.call(this,a,b);
case 3:
return G__7974__3.call(this,a,b,c);
default:
var G__7978 = null;
if (arguments.length > 3) {
var G__7979__i = 0, G__7979__a = new Array(arguments.length -  3);
while (G__7979__i < G__7979__a.length) {G__7979__a[G__7979__i] = arguments[G__7979__i + 3]; ++G__7979__i;}
G__7978 = new cljs.core.IndexedSeq(G__7979__a,0);
}
return G__7974__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7974.cljs$lang$maxFixedArity = 3;
G__7974.cljs$lang$applyTo = G__7974__4.cljs$lang$applyTo;
G__7974.cljs$core$IFn$_invoke$arity$1 = G__7974__1;
G__7974.cljs$core$IFn$_invoke$arity$2 = G__7974__2;
G__7974.cljs$core$IFn$_invoke$arity$3 = G__7974__3;
G__7974.cljs$core$IFn$_invoke$arity$variadic = G__7974__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7974;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7980 = null;
var G__7980__2 = (function (a,b){
var G__7964 = (((a == null))?x:a);
var G__7965 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7964,G__7965) : f.call(null,G__7964,G__7965));
});
var G__7980__3 = (function (a,b,c){
var G__7966 = (((a == null))?x:a);
var G__7967 = (((b == null))?y:b);
var G__7968 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7966,G__7967,G__7968) : f.call(null,G__7966,G__7967,G__7968));
});
var G__7980__4 = (function() { 
var G__7981__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7981 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7982__i = 0, G__7982__a = new Array(arguments.length -  3);
while (G__7982__i < G__7982__a.length) {G__7982__a[G__7982__i] = arguments[G__7982__i + 3]; ++G__7982__i;}
  ds = new cljs.core.IndexedSeq(G__7982__a,0);
} 
return G__7981__delegate.call(this,a,b,c,ds);};
G__7981.cljs$lang$maxFixedArity = 3;
G__7981.cljs$lang$applyTo = (function (arglist__7983){
var a = cljs.core.first(arglist__7983);
arglist__7983 = cljs.core.next(arglist__7983);
var b = cljs.core.first(arglist__7983);
arglist__7983 = cljs.core.next(arglist__7983);
var c = cljs.core.first(arglist__7983);
var ds = cljs.core.rest(arglist__7983);
return G__7981__delegate(a,b,c,ds);
});
G__7981.cljs$core$IFn$_invoke$arity$variadic = G__7981__delegate;
return G__7981;
})()
;
G__7980 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7980__2.call(this,a,b);
case 3:
return G__7980__3.call(this,a,b,c);
default:
var G__7984 = null;
if (arguments.length > 3) {
var G__7985__i = 0, G__7985__a = new Array(arguments.length -  3);
while (G__7985__i < G__7985__a.length) {G__7985__a[G__7985__i] = arguments[G__7985__i + 3]; ++G__7985__i;}
G__7984 = new cljs.core.IndexedSeq(G__7985__a,0);
}
return G__7980__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7984);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7980.cljs$lang$maxFixedArity = 3;
G__7980.cljs$lang$applyTo = G__7980__4.cljs$lang$applyTo;
G__7980.cljs$core$IFn$_invoke$arity$2 = G__7980__2;
G__7980.cljs$core$IFn$_invoke$arity$3 = G__7980__3;
G__7980.cljs$core$IFn$_invoke$arity$variadic = G__7980__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7980;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7986 = null;
var G__7986__2 = (function (a,b){
var G__7969 = (((a == null))?x:a);
var G__7970 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7969,G__7970) : f.call(null,G__7969,G__7970));
});
var G__7986__3 = (function (a,b,c){
var G__7971 = (((a == null))?x:a);
var G__7972 = (((b == null))?y:b);
var G__7973 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7971,G__7972,G__7973) : f.call(null,G__7971,G__7972,G__7973));
});
var G__7986__4 = (function() { 
var G__7987__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7987 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7988__i = 0, G__7988__a = new Array(arguments.length -  3);
while (G__7988__i < G__7988__a.length) {G__7988__a[G__7988__i] = arguments[G__7988__i + 3]; ++G__7988__i;}
  ds = new cljs.core.IndexedSeq(G__7988__a,0);
} 
return G__7987__delegate.call(this,a,b,c,ds);};
G__7987.cljs$lang$maxFixedArity = 3;
G__7987.cljs$lang$applyTo = (function (arglist__7989){
var a = cljs.core.first(arglist__7989);
arglist__7989 = cljs.core.next(arglist__7989);
var b = cljs.core.first(arglist__7989);
arglist__7989 = cljs.core.next(arglist__7989);
var c = cljs.core.first(arglist__7989);
var ds = cljs.core.rest(arglist__7989);
return G__7987__delegate(a,b,c,ds);
});
G__7987.cljs$core$IFn$_invoke$arity$variadic = G__7987__delegate;
return G__7987;
})()
;
G__7986 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7986__2.call(this,a,b);
case 3:
return G__7986__3.call(this,a,b,c);
default:
var G__7990 = null;
if (arguments.length > 3) {
var G__7991__i = 0, G__7991__a = new Array(arguments.length -  3);
while (G__7991__i < G__7991__a.length) {G__7991__a[G__7991__i] = arguments[G__7991__i + 3]; ++G__7991__i;}
G__7990 = new cljs.core.IndexedSeq(G__7991__a,0);
}
return G__7986__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7990);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7986.cljs$lang$maxFixedArity = 3;
G__7986.cljs$lang$applyTo = G__7986__4.cljs$lang$applyTo;
G__7986.cljs$core$IFn$_invoke$arity$2 = G__7986__2;
G__7986.cljs$core$IFn$_invoke$arity$3 = G__7986__3;
G__7986.cljs$core$IFn$_invoke$arity$variadic = G__7986__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7986;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8022 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8022) : cljs.core.volatile_BANG_.call(null,G__8022));
})();
return ((function (i){
return (function() {
var G__8052 = null;
var G__8052__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8052__1 = (function (result){
var G__8023 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8023) : rf.call(null,G__8023));
});
var G__8052__2 = (function (result,input){
var G__8024 = result;
var G__8025 = (function (){var G__8026 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8027 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8026,G__8027) : f.call(null,G__8026,G__8027));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8024,G__8025) : rf.call(null,G__8024,G__8025));
});
G__8052 = function(result,input){
switch(arguments.length){
case 0:
return G__8052__0.call(this);
case 1:
return G__8052__1.call(this,result);
case 2:
return G__8052__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8052.cljs$core$IFn$_invoke$arity$0 = G__8052__0;
G__8052.cljs$core$IFn$_invoke$arity$1 = G__8052__1;
G__8052.cljs$core$IFn$_invoke$arity$2 = G__8052__2;
return G__8052;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___8053 = size;
var i_8054 = (0);
while(true){
if((i_8054 < n__4816__auto___8053)){
cljs.core.chunk_append(b,(function (){var G__8048 = (idx + i_8054);
var G__8049 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8054);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8048,G__8049) : f.call(null,G__8048,G__8049));
})());

var G__8055 = (i_8054 + (1));
i_8054 = G__8055;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8050 = idx;
var G__8051 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8050,G__8051) : f.call(null,G__8050,G__8051));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8074 = null;
var G__8074__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8074__1 = (function (result){
var G__8068 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8068) : rf.call(null,G__8068));
});
var G__8074__2 = (function (result,input){
var v = (function (){var G__8069 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8069) : f.call(null,G__8069));
})();
if((v == null)){
return result;
} else {
var G__8070 = result;
var G__8071 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8070,G__8071) : rf.call(null,G__8070,G__8071));
}
});
G__8074 = function(result,input){
switch(arguments.length){
case 0:
return G__8074__0.call(this);
case 1:
return G__8074__1.call(this,result);
case 2:
return G__8074__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8074.cljs$core$IFn$_invoke$arity$0 = G__8074__0;
G__8074.cljs$core$IFn$_invoke$arity$1 = G__8074__1;
G__8074.cljs$core$IFn$_invoke$arity$2 = G__8074__2;
return G__8074;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___8075 = size;
var i_8076 = (0);
while(true){
if((i_8076 < n__4816__auto___8075)){
var x_8077 = (function (){var G__8072 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8076);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8072) : f.call(null,G__8072));
})();
if((x_8077 == null)){
} else {
cljs.core.chunk_append(b,x_8077);
}

var G__8078 = (i_8076 + (1));
i_8076 = G__8078;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8073 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8073) : f.call(null,G__8073));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8079 = this$__$1;
return goog.getUid(G__8079);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8080 = cljs.core.seq(self__.watches);
var chunk__8081 = null;
var count__8082 = (0);
var i__8083 = (0);
while(true){
if((i__8083 < count__8082)){
var vec__8084 = chunk__8081.cljs$core$IIndexed$_nth$arity$2(null,i__8083);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8084,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8084,(1),null);
var G__8085_8094 = key;
var G__8086_8095 = this$__$1;
var G__8087_8096 = oldval;
var G__8088_8097 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8085_8094,G__8086_8095,G__8087_8096,G__8088_8097) : f.call(null,G__8085_8094,G__8086_8095,G__8087_8096,G__8088_8097));

var G__8098 = seq__8080;
var G__8099 = chunk__8081;
var G__8100 = count__8082;
var G__8101 = (i__8083 + (1));
seq__8080 = G__8098;
chunk__8081 = G__8099;
count__8082 = G__8100;
i__8083 = G__8101;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8080);
if(temp__4126__auto__){
var seq__8080__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8080__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__8080__$1);
var G__8102 = cljs.core.chunk_rest(seq__8080__$1);
var G__8103 = c__4716__auto__;
var G__8104 = cljs.core.count(c__4716__auto__);
var G__8105 = (0);
seq__8080 = G__8102;
chunk__8081 = G__8103;
count__8082 = G__8104;
i__8083 = G__8105;
continue;
} else {
var vec__8089 = cljs.core.first(seq__8080__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8089,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8089,(1),null);
var G__8090_8106 = key;
var G__8091_8107 = this$__$1;
var G__8092_8108 = oldval;
var G__8093_8109 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8090_8106,G__8091_8107,G__8092_8108,G__8093_8109) : f.call(null,G__8090_8106,G__8091_8107,G__8092_8108,G__8093_8109));

var G__8110 = cljs.core.next(seq__8080__$1);
var G__8111 = null;
var G__8112 = (0);
var G__8113 = (0);
seq__8080 = G__8110;
chunk__8081 = G__8111;
count__8082 = G__8112;
i__8083 = G__8113;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8117__delegate = function (x,p__8114){
var map__8116 = p__8114;
var map__8116__$1 = ((cljs.core.seq_QMARK_(map__8116))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8116):map__8116);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8116__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8116__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8117 = function (x,var_args){
var p__8114 = null;
if (arguments.length > 1) {
var G__8118__i = 0, G__8118__a = new Array(arguments.length -  1);
while (G__8118__i < G__8118__a.length) {G__8118__a[G__8118__i] = arguments[G__8118__i + 1]; ++G__8118__i;}
  p__8114 = new cljs.core.IndexedSeq(G__8118__a,0);
} 
return G__8117__delegate.call(this,x,p__8114);};
G__8117.cljs$lang$maxFixedArity = 1;
G__8117.cljs$lang$applyTo = (function (arglist__8119){
var x = cljs.core.first(arglist__8119);
var p__8114 = cljs.core.rest(arglist__8119);
return G__8117__delegate(x,p__8114);
});
G__8117.cljs$core$IFn$_invoke$arity$variadic = G__8117__delegate;
return G__8117;
})()
;
atom = function(x,var_args){
var p__8114 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8120 = null;
if (arguments.length > 1) {
var G__8121__i = 0, G__8121__a = new Array(arguments.length -  1);
while (G__8121__i < G__8121__a.length) {G__8121__a[G__8121__i] = arguments[G__8121__i + 1]; ++G__8121__i;}
G__8120 = new cljs.core.IndexedSeq(G__8121__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8124 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8124) : validate.call(null,G__8124));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8125 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8125) : cljs.core.pr_str.call(null,G__8125));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8132 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8132) : f.call(null,G__8132));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8133 = a.state;
var G__8134 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8133,G__8134) : f.call(null,G__8133,G__8134));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8135 = a.state;
var G__8136 = x;
var G__8137 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8135,G__8136,G__8137) : f.call(null,G__8135,G__8136,G__8137));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8138__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8138 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8139__i = 0, G__8139__a = new Array(arguments.length -  4);
while (G__8139__i < G__8139__a.length) {G__8139__a[G__8139__i] = arguments[G__8139__i + 4]; ++G__8139__i;}
  more = new cljs.core.IndexedSeq(G__8139__a,0);
} 
return G__8138__delegate.call(this,a,f,x,y,more);};
G__8138.cljs$lang$maxFixedArity = 4;
G__8138.cljs$lang$applyTo = (function (arglist__8140){
var a = cljs.core.first(arglist__8140);
arglist__8140 = cljs.core.next(arglist__8140);
var f = cljs.core.first(arglist__8140);
arglist__8140 = cljs.core.next(arglist__8140);
var x = cljs.core.first(arglist__8140);
arglist__8140 = cljs.core.next(arglist__8140);
var y = cljs.core.first(arglist__8140);
var more = cljs.core.rest(arglist__8140);
return G__8138__delegate(a,f,x,y,more);
});
G__8138.cljs$core$IFn$_invoke$arity$variadic = G__8138__delegate;
return G__8138;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8141 = null;
if (arguments.length > 4) {
var G__8142__i = 0, G__8142__a = new Array(arguments.length -  4);
while (G__8142__i < G__8142__a.length) {G__8142__a[G__8142__i] = arguments[G__8142__i + 4]; ++G__8142__i;}
G__8141 = new cljs.core.IndexedSeq(G__8142__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8141);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8209 = null;
var G__8209__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8209__1 = (function (result){
var G__8176 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8176) : rf.call(null,G__8176));
});
var G__8209__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8177 = i;
var G__8178 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8177,G__8178) : f.call(null,G__8177,G__8178));
})();
if((v == null)){
return result;
} else {
var G__8179 = result;
var G__8180 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8179,G__8180) : rf.call(null,G__8179,G__8180));
}
});
G__8209 = function(result,input){
switch(arguments.length){
case 0:
return G__8209__0.call(this);
case 1:
return G__8209__1.call(this,result);
case 2:
return G__8209__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8209.cljs$core$IFn$_invoke$arity$0 = G__8209__0;
G__8209.cljs$core$IFn$_invoke$arity$1 = G__8209__1;
G__8209.cljs$core$IFn$_invoke$arity$2 = G__8209__2;
return G__8209;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___8210 = size;
var i_8211 = (0);
while(true){
if((i_8211 < n__4816__auto___8210)){
var x_8212 = (function (){var G__8205 = (idx + i_8211);
var G__8206 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8211);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8205,G__8206) : f.call(null,G__8205,G__8206));
})();
if((x_8212 == null)){
} else {
cljs.core.chunk_append(b,x_8212);
}

var G__8213 = (i_8211 + (1));
i_8211 = G__8213;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8207 = idx;
var G__8208 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8207,G__8208) : f.call(null,G__8207,G__8208));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8427 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8427) : p.call(null,G__8427));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8429 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8429) : p.call(null,G__8429));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__8430 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8430) : p.call(null,G__8430));
} else {
return and__3917__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8432 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8432) : p.call(null,G__8432));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8434 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8434) : p.call(null,G__8434));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__8435 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8435) : p.call(null,G__8435));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8604__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8604 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8605__i = 0, G__8605__a = new Array(arguments.length -  3);
while (G__8605__i < G__8605__a.length) {G__8605__a[G__8605__i] = arguments[G__8605__i + 3]; ++G__8605__i;}
  args = new cljs.core.IndexedSeq(G__8605__a,0);
} 
return G__8604__delegate.call(this,x,y,z,args);};
G__8604.cljs$lang$maxFixedArity = 3;
G__8604.cljs$lang$applyTo = (function (arglist__8606){
var x = cljs.core.first(arglist__8606);
arglist__8606 = cljs.core.next(arglist__8606);
var y = cljs.core.first(arglist__8606);
arglist__8606 = cljs.core.next(arglist__8606);
var z = cljs.core.first(arglist__8606);
var args = cljs.core.rest(arglist__8606);
return G__8604__delegate(x,y,z,args);
});
G__8604.cljs$core$IFn$_invoke$arity$variadic = G__8604__delegate;
return G__8604;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8607 = null;
if (arguments.length > 3) {
var G__8608__i = 0, G__8608__a = new Array(arguments.length -  3);
while (G__8608__i < G__8608__a.length) {G__8608__a[G__8608__i] = arguments[G__8608__i + 3]; ++G__8608__i;}
G__8607 = new cljs.core.IndexedSeq(G__8608__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8467 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8467) : p1.call(null,G__8467));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__8468 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8468) : p2.call(null,G__8468));
} else {
return and__3917__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8470 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8470) : p1.call(null,G__8470));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8472 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8472) : p1.call(null,G__8472));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__8474 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8474) : p2.call(null,G__8474));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var G__8475 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8475) : p2.call(null,G__8475));
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8477 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8477) : p1.call(null,G__8477));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8479 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8479) : p1.call(null,G__8479));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__8481 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8481) : p1.call(null,G__8481));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__8483 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8483) : p2.call(null,G__8483));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__8485 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8485) : p2.call(null,G__8485));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var G__8486 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8486) : p2.call(null,G__8486));
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8609__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8214_SHARP_){
var and__3917__auto__ = (function (){var G__8491 = p1__8214_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8491) : p1.call(null,G__8491));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__8492 = p1__8214_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8492) : p2.call(null,G__8492));
} else {
return and__3917__auto__;
}
}),args)));
};
var G__8609 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8610__i = 0, G__8610__a = new Array(arguments.length -  3);
while (G__8610__i < G__8610__a.length) {G__8610__a[G__8610__i] = arguments[G__8610__i + 3]; ++G__8610__i;}
  args = new cljs.core.IndexedSeq(G__8610__a,0);
} 
return G__8609__delegate.call(this,x,y,z,args);};
G__8609.cljs$lang$maxFixedArity = 3;
G__8609.cljs$lang$applyTo = (function (arglist__8611){
var x = cljs.core.first(arglist__8611);
arglist__8611 = cljs.core.next(arglist__8611);
var y = cljs.core.first(arglist__8611);
arglist__8611 = cljs.core.next(arglist__8611);
var z = cljs.core.first(arglist__8611);
var args = cljs.core.rest(arglist__8611);
return G__8609__delegate(x,y,z,args);
});
G__8609.cljs$core$IFn$_invoke$arity$variadic = G__8609__delegate;
return G__8609;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8612 = null;
if (arguments.length > 3) {
var G__8613__i = 0, G__8613__a = new Array(arguments.length -  3);
while (G__8613__i < G__8613__a.length) {G__8613__a[G__8613__i] = arguments[G__8613__i + 3]; ++G__8613__i;}
G__8612 = new cljs.core.IndexedSeq(G__8613__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8612);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8538 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8538) : p1.call(null,G__8538));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8540 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8540) : p2.call(null,G__8540));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__8541 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8541) : p3.call(null,G__8541));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8543 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8543) : p1.call(null,G__8543));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8545 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8545) : p2.call(null,G__8545));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__8547 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8547) : p3.call(null,G__8547));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__8549 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8549) : p1.call(null,G__8549));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__8551 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8551) : p2.call(null,G__8551));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var G__8552 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8552) : p3.call(null,G__8552));
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__8554 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8554) : p1.call(null,G__8554));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8556 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8556) : p2.call(null,G__8556));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__8558 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8558) : p3.call(null,G__8558));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__8560 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8560) : p1.call(null,G__8560));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__8562 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8562) : p2.call(null,G__8562));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var and__3917__auto____$5 = (function (){var G__8564 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8564) : p3.call(null,G__8564));
})();
if(cljs.core.truth_(and__3917__auto____$5)){
var and__3917__auto____$6 = (function (){var G__8566 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8566) : p1.call(null,G__8566));
})();
if(cljs.core.truth_(and__3917__auto____$6)){
var and__3917__auto____$7 = (function (){var G__8568 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8568) : p2.call(null,G__8568));
})();
if(cljs.core.truth_(and__3917__auto____$7)){
var G__8569 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8569) : p3.call(null,G__8569));
} else {
return and__3917__auto____$7;
}
} else {
return and__3917__auto____$6;
}
} else {
return and__3917__auto____$5;
}
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8614__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8215_SHARP_){
var and__3917__auto__ = (function (){var G__8576 = p1__8215_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8576) : p1.call(null,G__8576));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8578 = p1__8215_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8578) : p2.call(null,G__8578));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__8579 = p1__8215_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8579) : p3.call(null,G__8579));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
}),args)));
};
var G__8614 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8615__i = 0, G__8615__a = new Array(arguments.length -  3);
while (G__8615__i < G__8615__a.length) {G__8615__a[G__8615__i] = arguments[G__8615__i + 3]; ++G__8615__i;}
  args = new cljs.core.IndexedSeq(G__8615__a,0);
} 
return G__8614__delegate.call(this,x,y,z,args);};
G__8614.cljs$lang$maxFixedArity = 3;
G__8614.cljs$lang$applyTo = (function (arglist__8616){
var x = cljs.core.first(arglist__8616);
arglist__8616 = cljs.core.next(arglist__8616);
var y = cljs.core.first(arglist__8616);
arglist__8616 = cljs.core.next(arglist__8616);
var z = cljs.core.first(arglist__8616);
var args = cljs.core.rest(arglist__8616);
return G__8614__delegate(x,y,z,args);
});
G__8614.cljs$core$IFn$_invoke$arity$variadic = G__8614__delegate;
return G__8614;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8617 = null;
if (arguments.length > 3) {
var G__8618__i = 0, G__8618__a = new Array(arguments.length -  3);
while (G__8618__i < G__8618__a.length) {G__8618__a[G__8618__i] = arguments[G__8618__i + 3]; ++G__8618__i;}
G__8617 = new cljs.core.IndexedSeq(G__8618__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8619__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8216_SHARP_){
var G__8595 = x;
return (p1__8216_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8216_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8595) : p1__8216_SHARP_.call(null,G__8595));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8217_SHARP_){
var and__3917__auto__ = (function (){var G__8597 = x;
return (p1__8217_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8217_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8597) : p1__8217_SHARP_.call(null,G__8597));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__8598 = y;
return (p1__8217_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8217_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8598) : p1__8217_SHARP_.call(null,G__8598));
} else {
return and__3917__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8218_SHARP_){
var and__3917__auto__ = (function (){var G__8600 = x;
return (p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8600) : p1__8218_SHARP_.call(null,G__8600));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__8602 = y;
return (p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8602) : p1__8218_SHARP_.call(null,G__8602));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__8603 = z;
return (p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8218_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8603) : p1__8218_SHARP_.call(null,G__8603));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8620__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8219_SHARP_){
return cljs.core.every_QMARK_(p1__8219_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8620 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8621__i = 0, G__8621__a = new Array(arguments.length -  3);
while (G__8621__i < G__8621__a.length) {G__8621__a[G__8621__i] = arguments[G__8621__i + 3]; ++G__8621__i;}
  args = new cljs.core.IndexedSeq(G__8621__a,0);
} 
return G__8620__delegate.call(this,x,y,z,args);};
G__8620.cljs$lang$maxFixedArity = 3;
G__8620.cljs$lang$applyTo = (function (arglist__8622){
var x = cljs.core.first(arglist__8622);
arglist__8622 = cljs.core.next(arglist__8622);
var y = cljs.core.first(arglist__8622);
arglist__8622 = cljs.core.next(arglist__8622);
var z = cljs.core.first(arglist__8622);
var args = cljs.core.rest(arglist__8622);
return G__8620__delegate(x,y,z,args);
});
G__8620.cljs$core$IFn$_invoke$arity$variadic = G__8620__delegate;
return G__8620;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8623 = null;
if (arguments.length > 3) {
var G__8624__i = 0, G__8624__a = new Array(arguments.length -  3);
while (G__8624__i < G__8624__a.length) {G__8624__a[G__8624__i] = arguments[G__8624__i + 3]; ++G__8624__i;}
G__8623 = new cljs.core.IndexedSeq(G__8624__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8619 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8625__i = 0, G__8625__a = new Array(arguments.length -  3);
while (G__8625__i < G__8625__a.length) {G__8625__a[G__8625__i] = arguments[G__8625__i + 3]; ++G__8625__i;}
  ps = new cljs.core.IndexedSeq(G__8625__a,0);
} 
return G__8619__delegate.call(this,p1,p2,p3,ps);};
G__8619.cljs$lang$maxFixedArity = 3;
G__8619.cljs$lang$applyTo = (function (arglist__8626){
var p1 = cljs.core.first(arglist__8626);
arglist__8626 = cljs.core.next(arglist__8626);
var p2 = cljs.core.first(arglist__8626);
arglist__8626 = cljs.core.next(arglist__8626);
var p3 = cljs.core.first(arglist__8626);
var ps = cljs.core.rest(arglist__8626);
return G__8619__delegate(p1,p2,p3,ps);
});
G__8619.cljs$core$IFn$_invoke$arity$variadic = G__8619__delegate;
return G__8619;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8627 = null;
if (arguments.length > 3) {
var G__8628__i = 0, G__8628__a = new Array(arguments.length -  3);
while (G__8628__i < G__8628__a.length) {G__8628__a[G__8628__i] = arguments[G__8628__i + 3]; ++G__8628__i;}
G__8627 = new cljs.core.IndexedSeq(G__8628__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__8834 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8834) : p.call(null,G__8834));
});
var sp1__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__8836 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8836) : p.call(null,G__8836));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__8837 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8837) : p.call(null,G__8837));
}
});
var sp1__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__8839 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8839) : p.call(null,G__8839));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8841 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8841) : p.call(null,G__8841));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__8842 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8842) : p.call(null,G__8842));
}
}
});
var sp1__4 = (function() { 
var G__9003__delegate = function (x,y,z,args){
var or__3929__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9003 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9004__i = 0, G__9004__a = new Array(arguments.length -  3);
while (G__9004__i < G__9004__a.length) {G__9004__a[G__9004__i] = arguments[G__9004__i + 3]; ++G__9004__i;}
  args = new cljs.core.IndexedSeq(G__9004__a,0);
} 
return G__9003__delegate.call(this,x,y,z,args);};
G__9003.cljs$lang$maxFixedArity = 3;
G__9003.cljs$lang$applyTo = (function (arglist__9005){
var x = cljs.core.first(arglist__9005);
arglist__9005 = cljs.core.next(arglist__9005);
var y = cljs.core.first(arglist__9005);
arglist__9005 = cljs.core.next(arglist__9005);
var z = cljs.core.first(arglist__9005);
var args = cljs.core.rest(arglist__9005);
return G__9003__delegate(x,y,z,args);
});
G__9003.cljs$core$IFn$_invoke$arity$variadic = G__9003__delegate;
return G__9003;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9006 = null;
if (arguments.length > 3) {
var G__9007__i = 0, G__9007__a = new Array(arguments.length -  3);
while (G__9007__i < G__9007__a.length) {G__9007__a[G__9007__i] = arguments[G__9007__i + 3]; ++G__9007__i;}
G__9006 = new cljs.core.IndexedSeq(G__9007__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9006);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3929__auto__ = (function (){var G__8874 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8874) : p1.call(null,G__8874));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__8875 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8875) : p2.call(null,G__8875));
}
});
var sp2__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__8877 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8877) : p1.call(null,G__8877));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8879 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8879) : p1.call(null,G__8879));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__8881 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8881) : p2.call(null,G__8881));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var G__8882 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8882) : p2.call(null,G__8882));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__8884 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8884) : p1.call(null,G__8884));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8886 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8886) : p1.call(null,G__8886));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__8888 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8888) : p1.call(null,G__8888));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__8890 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8890) : p2.call(null,G__8890));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__8892 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8892) : p2.call(null,G__8892));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var G__8893 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8893) : p2.call(null,G__8893));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9008__delegate = function (x,y,z,args){
var or__3929__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__){
return (function (p1__8629_SHARP_){
var or__3929__auto____$1 = (function (){var G__8895 = p1__8629_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8895) : p1.call(null,G__8895));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__8896 = p1__8629_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8896) : p2.call(null,G__8896));
}
});})(or__3929__auto__))
,args);
}
};
var G__9008 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9009__i = 0, G__9009__a = new Array(arguments.length -  3);
while (G__9009__i < G__9009__a.length) {G__9009__a[G__9009__i] = arguments[G__9009__i + 3]; ++G__9009__i;}
  args = new cljs.core.IndexedSeq(G__9009__a,0);
} 
return G__9008__delegate.call(this,x,y,z,args);};
G__9008.cljs$lang$maxFixedArity = 3;
G__9008.cljs$lang$applyTo = (function (arglist__9010){
var x = cljs.core.first(arglist__9010);
arglist__9010 = cljs.core.next(arglist__9010);
var y = cljs.core.first(arglist__9010);
arglist__9010 = cljs.core.next(arglist__9010);
var z = cljs.core.first(arglist__9010);
var args = cljs.core.rest(arglist__9010);
return G__9008__delegate(x,y,z,args);
});
G__9008.cljs$core$IFn$_invoke$arity$variadic = G__9008__delegate;
return G__9008;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9011 = null;
if (arguments.length > 3) {
var G__9012__i = 0, G__9012__a = new Array(arguments.length -  3);
while (G__9012__i < G__9012__a.length) {G__9012__a[G__9012__i] = arguments[G__9012__i + 3]; ++G__9012__i;}
G__9011 = new cljs.core.IndexedSeq(G__9012__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3929__auto__ = (function (){var G__8942 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8942) : p1.call(null,G__8942));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8944 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8944) : p2.call(null,G__8944));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__8945 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8945) : p3.call(null,G__8945));
}
}
});
var sp3__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__8947 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8947) : p1.call(null,G__8947));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8949 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8949) : p2.call(null,G__8949));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__8951 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8951) : p3.call(null,G__8951));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__8953 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8953) : p1.call(null,G__8953));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__8955 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8955) : p2.call(null,G__8955));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var G__8956 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8956) : p3.call(null,G__8956));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__8958 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8958) : p1.call(null,G__8958));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__8960 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8960) : p2.call(null,G__8960));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__8962 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8962) : p3.call(null,G__8962));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__8964 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8964) : p1.call(null,G__8964));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__8966 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8966) : p2.call(null,G__8966));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var or__3929__auto____$5 = (function (){var G__8968 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8968) : p3.call(null,G__8968));
})();
if(cljs.core.truth_(or__3929__auto____$5)){
return or__3929__auto____$5;
} else {
var or__3929__auto____$6 = (function (){var G__8970 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8970) : p1.call(null,G__8970));
})();
if(cljs.core.truth_(or__3929__auto____$6)){
return or__3929__auto____$6;
} else {
var or__3929__auto____$7 = (function (){var G__8972 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8972) : p2.call(null,G__8972));
})();
if(cljs.core.truth_(or__3929__auto____$7)){
return or__3929__auto____$7;
} else {
var G__8973 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8973) : p3.call(null,G__8973));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9013__delegate = function (x,y,z,args){
var or__3929__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__){
return (function (p1__8630_SHARP_){
var or__3929__auto____$1 = (function (){var G__8975 = p1__8630_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8975) : p1.call(null,G__8975));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__8977 = p1__8630_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8977) : p2.call(null,G__8977));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var G__8978 = p1__8630_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8978) : p3.call(null,G__8978));
}
}
});})(or__3929__auto__))
,args);
}
};
var G__9013 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9014__i = 0, G__9014__a = new Array(arguments.length -  3);
while (G__9014__i < G__9014__a.length) {G__9014__a[G__9014__i] = arguments[G__9014__i + 3]; ++G__9014__i;}
  args = new cljs.core.IndexedSeq(G__9014__a,0);
} 
return G__9013__delegate.call(this,x,y,z,args);};
G__9013.cljs$lang$maxFixedArity = 3;
G__9013.cljs$lang$applyTo = (function (arglist__9015){
var x = cljs.core.first(arglist__9015);
arglist__9015 = cljs.core.next(arglist__9015);
var y = cljs.core.first(arglist__9015);
arglist__9015 = cljs.core.next(arglist__9015);
var z = cljs.core.first(arglist__9015);
var args = cljs.core.rest(arglist__9015);
return G__9013__delegate(x,y,z,args);
});
G__9013.cljs$core$IFn$_invoke$arity$variadic = G__9013__delegate;
return G__9013;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9016 = null;
if (arguments.length > 3) {
var G__9017__i = 0, G__9017__a = new Array(arguments.length -  3);
while (G__9017__i < G__9017__a.length) {G__9017__a[G__9017__i] = arguments[G__9017__i + 3]; ++G__9017__i;}
G__9016 = new cljs.core.IndexedSeq(G__9017__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9018__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8631_SHARP_){
var G__8994 = x;
return (p1__8631_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8631_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8994) : p1__8631_SHARP_.call(null,G__8994));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8632_SHARP_){
var or__3929__auto__ = (function (){var G__8996 = x;
return (p1__8632_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8632_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8996) : p1__8632_SHARP_.call(null,G__8996));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__8997 = y;
return (p1__8632_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8632_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8997) : p1__8632_SHARP_.call(null,G__8997));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8633_SHARP_){
var or__3929__auto__ = (function (){var G__8999 = x;
return (p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8999) : p1__8633_SHARP_.call(null,G__8999));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__9001 = y;
return (p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9001) : p1__8633_SHARP_.call(null,G__9001));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__9002 = z;
return (p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8633_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9002) : p1__8633_SHARP_.call(null,G__9002));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9019__delegate = function (x,y,z,args){
var or__3929__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__,ps__$1){
return (function (p1__8634_SHARP_){
return cljs.core.some(p1__8634_SHARP_,args);
});})(or__3929__auto__,ps__$1))
,ps__$1);
}
};
var G__9019 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9020__i = 0, G__9020__a = new Array(arguments.length -  3);
while (G__9020__i < G__9020__a.length) {G__9020__a[G__9020__i] = arguments[G__9020__i + 3]; ++G__9020__i;}
  args = new cljs.core.IndexedSeq(G__9020__a,0);
} 
return G__9019__delegate.call(this,x,y,z,args);};
G__9019.cljs$lang$maxFixedArity = 3;
G__9019.cljs$lang$applyTo = (function (arglist__9021){
var x = cljs.core.first(arglist__9021);
arglist__9021 = cljs.core.next(arglist__9021);
var y = cljs.core.first(arglist__9021);
arglist__9021 = cljs.core.next(arglist__9021);
var z = cljs.core.first(arglist__9021);
var args = cljs.core.rest(arglist__9021);
return G__9019__delegate(x,y,z,args);
});
G__9019.cljs$core$IFn$_invoke$arity$variadic = G__9019__delegate;
return G__9019;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9022 = null;
if (arguments.length > 3) {
var G__9023__i = 0, G__9023__a = new Array(arguments.length -  3);
while (G__9023__i < G__9023__a.length) {G__9023__a[G__9023__i] = arguments[G__9023__i + 3]; ++G__9023__i;}
G__9022 = new cljs.core.IndexedSeq(G__9023__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9018 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9024__i = 0, G__9024__a = new Array(arguments.length -  3);
while (G__9024__i < G__9024__a.length) {G__9024__a[G__9024__i] = arguments[G__9024__i + 3]; ++G__9024__i;}
  ps = new cljs.core.IndexedSeq(G__9024__a,0);
} 
return G__9018__delegate.call(this,p1,p2,p3,ps);};
G__9018.cljs$lang$maxFixedArity = 3;
G__9018.cljs$lang$applyTo = (function (arglist__9025){
var p1 = cljs.core.first(arglist__9025);
arglist__9025 = cljs.core.next(arglist__9025);
var p2 = cljs.core.first(arglist__9025);
arglist__9025 = cljs.core.next(arglist__9025);
var p3 = cljs.core.first(arglist__9025);
var ps = cljs.core.rest(arglist__9025);
return G__9018__delegate(p1,p2,p3,ps);
});
G__9018.cljs$core$IFn$_invoke$arity$variadic = G__9018__delegate;
return G__9018;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9026 = null;
if (arguments.length > 3) {
var G__9027__i = 0, G__9027__a = new Array(arguments.length -  3);
while (G__9027__i < G__9027__a.length) {G__9027__a[G__9027__i] = arguments[G__9027__i + 3]; ++G__9027__i;}
G__9026 = new cljs.core.IndexedSeq(G__9027__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9082 = null;
var G__9082__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9082__1 = (function (result){
var G__9068 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9068) : rf.call(null,G__9068));
});
var G__9082__2 = (function (result,input){
var G__9069 = result;
var G__9070 = (function (){var G__9071 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9071) : f.call(null,G__9071));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9069,G__9070) : rf.call(null,G__9069,G__9070));
});
var G__9082__3 = (function() { 
var G__9083__delegate = function (result,input,inputs){
var G__9072 = result;
var G__9073 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9072,G__9073) : rf.call(null,G__9072,G__9073));
};
var G__9083 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9084__i = 0, G__9084__a = new Array(arguments.length -  2);
while (G__9084__i < G__9084__a.length) {G__9084__a[G__9084__i] = arguments[G__9084__i + 2]; ++G__9084__i;}
  inputs = new cljs.core.IndexedSeq(G__9084__a,0);
} 
return G__9083__delegate.call(this,result,input,inputs);};
G__9083.cljs$lang$maxFixedArity = 2;
G__9083.cljs$lang$applyTo = (function (arglist__9085){
var result = cljs.core.first(arglist__9085);
arglist__9085 = cljs.core.next(arglist__9085);
var input = cljs.core.first(arglist__9085);
var inputs = cljs.core.rest(arglist__9085);
return G__9083__delegate(result,input,inputs);
});
G__9083.cljs$core$IFn$_invoke$arity$variadic = G__9083__delegate;
return G__9083;
})()
;
G__9082 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9082__0.call(this);
case 1:
return G__9082__1.call(this,result);
case 2:
return G__9082__2.call(this,result,input);
default:
var G__9086 = null;
if (arguments.length > 2) {
var G__9087__i = 0, G__9087__a = new Array(arguments.length -  2);
while (G__9087__i < G__9087__a.length) {G__9087__a[G__9087__i] = arguments[G__9087__i + 2]; ++G__9087__i;}
G__9086 = new cljs.core.IndexedSeq(G__9087__a,0);
}
return G__9082__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9082.cljs$lang$maxFixedArity = 2;
G__9082.cljs$lang$applyTo = G__9082__3.cljs$lang$applyTo;
G__9082.cljs$core$IFn$_invoke$arity$0 = G__9082__0;
G__9082.cljs$core$IFn$_invoke$arity$1 = G__9082__1;
G__9082.cljs$core$IFn$_invoke$arity$2 = G__9082__2;
G__9082.cljs$core$IFn$_invoke$arity$variadic = G__9082__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9082;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___9088 = size;
var i_9089 = (0);
while(true){
if((i_9089 < n__4816__auto___9088)){
cljs.core.chunk_append(b,(function (){var G__9074 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9089);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9074) : f.call(null,G__9074));
})());

var G__9090 = (i_9089 + (1));
i_9089 = G__9090;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9075 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9075) : f.call(null,G__9075));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9076 = cljs.core.first(s1);
var G__9077 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9076,G__9077) : f.call(null,G__9076,G__9077));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9078 = cljs.core.first(s1);
var G__9079 = cljs.core.first(s2);
var G__9080 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9078,G__9079,G__9080) : f.call(null,G__9078,G__9079,G__9080));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9091__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9028_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9028_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9091 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9092__i = 0, G__9092__a = new Array(arguments.length -  4);
while (G__9092__i < G__9092__a.length) {G__9092__a[G__9092__i] = arguments[G__9092__i + 4]; ++G__9092__i;}
  colls = new cljs.core.IndexedSeq(G__9092__a,0);
} 
return G__9091__delegate.call(this,f,c1,c2,c3,colls);};
G__9091.cljs$lang$maxFixedArity = 4;
G__9091.cljs$lang$applyTo = (function (arglist__9093){
var f = cljs.core.first(arglist__9093);
arglist__9093 = cljs.core.next(arglist__9093);
var c1 = cljs.core.first(arglist__9093);
arglist__9093 = cljs.core.next(arglist__9093);
var c2 = cljs.core.first(arglist__9093);
arglist__9093 = cljs.core.next(arglist__9093);
var c3 = cljs.core.first(arglist__9093);
var colls = cljs.core.rest(arglist__9093);
return G__9091__delegate(f,c1,c2,c3,colls);
});
G__9091.cljs$core$IFn$_invoke$arity$variadic = G__9091__delegate;
return G__9091;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9094 = null;
if (arguments.length > 4) {
var G__9095__i = 0, G__9095__a = new Array(arguments.length -  4);
while (G__9095__i < G__9095__a.length) {G__9095__a[G__9095__i] = arguments[G__9095__i + 4]; ++G__9095__i;}
G__9094 = new cljs.core.IndexedSeq(G__9095__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9104 = null;
var G__9104__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9104__1 = (function (result){
var G__9101 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9101) : rf.call(null,G__9101));
});
var G__9104__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9102 = result;
var G__9103 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9102,G__9103) : rf.call(null,G__9102,G__9103));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9104 = function(result,input){
switch(arguments.length){
case 0:
return G__9104__0.call(this);
case 1:
return G__9104__1.call(this,result);
case 2:
return G__9104__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9104.cljs$core$IFn$_invoke$arity$0 = G__9104__0;
G__9104.cljs$core$IFn$_invoke$arity$1 = G__9104__1;
G__9104.cljs$core$IFn$_invoke$arity$2 = G__9104__2;
return G__9104;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9111 = null;
var G__9111__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9111__1 = (function (result){
var G__9108 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9108) : rf.call(null,G__9108));
});
var G__9111__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9109 = result;
var G__9110 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9109,G__9110) : rf.call(null,G__9109,G__9110));
}
});
G__9111 = function(result,input){
switch(arguments.length){
case 0:
return G__9111__0.call(this);
case 1:
return G__9111__1.call(this,result);
case 2:
return G__9111__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9111.cljs$core$IFn$_invoke$arity$0 = G__9111__0;
G__9111.cljs$core$IFn$_invoke$arity$1 = G__9111__1;
G__9111.cljs$core$IFn$_invoke$arity$2 = G__9111__2;
return G__9111;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9112 = (n__$1 - (1));
var G__9113 = cljs.core.rest(s);
n__$1 = G__9112;
coll__$1 = G__9113;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9116 = cljs.core.next(s);
var G__9117 = cljs.core.next(lead);
s = G__9116;
lead = G__9117;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9130 = null;
var G__9130__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9130__1 = (function (result){
var G__9124 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9124) : rf.call(null,G__9124));
});
var G__9130__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3917__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3917__auto__)){
var G__9125 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9125) : pred.call(null,G__9125));
} else {
return and__3917__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9126 = result;
var G__9127 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9126,G__9127) : rf.call(null,G__9126,G__9127));
}
});
G__9130 = function(result,input){
switch(arguments.length){
case 0:
return G__9130__0.call(this);
case 1:
return G__9130__1.call(this,result);
case 2:
return G__9130__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9130.cljs$core$IFn$_invoke$arity$0 = G__9130__0;
G__9130.cljs$core$IFn$_invoke$arity$1 = G__9130__1;
G__9130.cljs$core$IFn$_invoke$arity$2 = G__9130__2;
return G__9130;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3917__auto__ = s;
if(and__3917__auto__){
var G__9129 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9129) : pred__$1.call(null,G__9129));
} else {
return and__3917__auto__;
}
})())){
var G__9131 = pred__$1;
var G__9132 = cljs.core.rest(s);
pred__$1 = G__9131;
coll__$1 = G__9132;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9141 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9141) : f.call(null,G__9141));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9144__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9144 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9145__i = 0, G__9145__a = new Array(arguments.length -  2);
while (G__9145__i < G__9145__a.length) {G__9145__a[G__9145__i] = arguments[G__9145__i + 2]; ++G__9145__i;}
  colls = new cljs.core.IndexedSeq(G__9145__a,0);
} 
return G__9144__delegate.call(this,c1,c2,colls);};
G__9144.cljs$lang$maxFixedArity = 2;
G__9144.cljs$lang$applyTo = (function (arglist__9146){
var c1 = cljs.core.first(arglist__9146);
arglist__9146 = cljs.core.next(arglist__9146);
var c2 = cljs.core.first(arglist__9146);
var colls = cljs.core.rest(arglist__9146);
return G__9144__delegate(c1,c2,colls);
});
G__9144.cljs$core$IFn$_invoke$arity$variadic = G__9144__delegate;
return G__9144;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9147 = null;
if (arguments.length > 2) {
var G__9148__i = 0, G__9148__a = new Array(arguments.length -  2);
while (G__9148__i < G__9148__a.length) {G__9148__a[G__9148__i] = arguments[G__9148__i + 2]; ++G__9148__i;}
G__9147 = new cljs.core.IndexedSeq(G__9148__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9163 = null;
var G__9163__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9163__1 = (function (result){
var G__9156 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9156) : rf.call(null,G__9156));
});
var G__9163__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9157 = result;
var G__9158 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9157,G__9158) : rf.call(null,G__9157,G__9158));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9159 = sepr;
var G__9160 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9159,G__9160) : rf.call(null,G__9159,G__9160));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9161 = result;
var G__9162 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9161,G__9162) : rf.call(null,G__9161,G__9162));
}
});
G__9163 = function(result,input){
switch(arguments.length){
case 0:
return G__9163__0.call(this);
case 1:
return G__9163__1.call(this,result);
case 2:
return G__9163__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9163.cljs$core$IFn$_invoke$arity$0 = G__9163__0;
G__9163.cljs$core$IFn$_invoke$arity$1 = G__9163__1;
G__9163.cljs$core$IFn$_invoke$arity$2 = G__9163__2;
return G__9163;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9172__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9172 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9173__i = 0, G__9173__a = new Array(arguments.length -  1);
while (G__9173__i < G__9173__a.length) {G__9173__a[G__9173__i] = arguments[G__9173__i + 1]; ++G__9173__i;}
  colls = new cljs.core.IndexedSeq(G__9173__a,0);
} 
return G__9172__delegate.call(this,f,colls);};
G__9172.cljs$lang$maxFixedArity = 1;
G__9172.cljs$lang$applyTo = (function (arglist__9174){
var f = cljs.core.first(arglist__9174);
var colls = cljs.core.rest(arglist__9174);
return G__9172__delegate(f,colls);
});
G__9172.cljs$core$IFn$_invoke$arity$variadic = G__9172__delegate;
return G__9172;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9175 = null;
if (arguments.length > 1) {
var G__9176__i = 0, G__9176__a = new Array(arguments.length -  1);
while (G__9176__i < G__9176__a.length) {G__9176__a[G__9176__i] = arguments[G__9176__i + 1]; ++G__9176__i;}
G__9175 = new cljs.core.IndexedSeq(G__9176__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9195 = null;
var G__9195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9195__1 = (function (result){
var G__9189 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9189) : rf.call(null,G__9189));
});
var G__9195__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9190 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9190) : pred.call(null,G__9190));
})())){
var G__9191 = result;
var G__9192 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9191,G__9192) : rf.call(null,G__9191,G__9192));
} else {
return result;
}
});
G__9195 = function(result,input){
switch(arguments.length){
case 0:
return G__9195__0.call(this);
case 1:
return G__9195__1.call(this,result);
case 2:
return G__9195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9195.cljs$core$IFn$_invoke$arity$0 = G__9195__0;
G__9195.cljs$core$IFn$_invoke$arity$1 = G__9195__1;
G__9195.cljs$core$IFn$_invoke$arity$2 = G__9195__2;
return G__9195;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___9196 = size;
var i_9197 = (0);
while(true){
if((i_9197 < n__4816__auto___9196)){
if(cljs.core.truth_((function (){var G__9193 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9197);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9193) : pred.call(null,G__9193));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9197));
} else {
}

var G__9198 = (i_9197 + (1));
i_9197 = G__9198;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9194 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9194) : pred.call(null,G__9194));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9205 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9205) : branch_QMARK_.call(null,G__9205));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9206 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9206) : children.call(null,G__9206));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9207_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9207_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9210 = to;
if(G__9210){
var bit__4603__auto__ = (G__9210.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4603__auto__) || (G__9210.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9211 = to;
if(G__9211){
var bit__4603__auto__ = (G__9211.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4603__auto__) || (G__9211.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9213 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9213) : f.call(null,G__9213));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9214__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9214 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9215__i = 0, G__9215__a = new Array(arguments.length -  4);
while (G__9215__i < G__9215__a.length) {G__9215__a[G__9215__i] = arguments[G__9215__i + 4]; ++G__9215__i;}
  colls = new cljs.core.IndexedSeq(G__9215__a,0);
} 
return G__9214__delegate.call(this,f,c1,c2,c3,colls);};
G__9214.cljs$lang$maxFixedArity = 4;
G__9214.cljs$lang$applyTo = (function (arglist__9216){
var f = cljs.core.first(arglist__9216);
arglist__9216 = cljs.core.next(arglist__9216);
var c1 = cljs.core.first(arglist__9216);
arglist__9216 = cljs.core.next(arglist__9216);
var c2 = cljs.core.first(arglist__9216);
arglist__9216 = cljs.core.next(arglist__9216);
var c3 = cljs.core.first(arglist__9216);
var colls = cljs.core.rest(arglist__9216);
return G__9214__delegate(f,c1,c2,c3,colls);
});
G__9214.cljs$core$IFn$_invoke$arity$variadic = G__9214__delegate;
return G__9214;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9217 = null;
if (arguments.length > 4) {
var G__9218__i = 0, G__9218__a = new Array(arguments.length -  4);
while (G__9218__i < G__9218__a.length) {G__9218__a[G__9218__i] = arguments[G__9218__i + 4]; ++G__9218__i;}
G__9217 = new cljs.core.IndexedSeq(G__9218__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9220 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9220) : pred.call(null,G__9220));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9235 = m__$1;
if(G__9235){
var bit__4610__auto__ = (G__9235.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4610__auto__) || (G__9235.cljs$core$ILookup$)){
return true;
} else {
if((!G__9235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9235);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9236 = sentinel;
var G__9237 = m__$2;
var G__9238 = cljs.core.next(ks__$1);
sentinel = G__9236;
m__$1 = G__9237;
ks__$1 = G__9238;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9239,v){
var vec__9244 = p__9239;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9244,(0),null);
var ks = cljs.core.nthnext(vec__9244,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9245,f){
var vec__9283 = p__9245;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9283,(0),null);
var ks = cljs.core.nthnext(vec__9283,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9284 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9284) : f.call(null,G__9284));
})());
}
});
var update_in__4 = (function (m,p__9246,f,a){
var vec__9285 = p__9246;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9285,(0),null);
var ks = cljs.core.nthnext(vec__9285,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9286 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9287 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9286,G__9287) : f.call(null,G__9286,G__9287));
})());
}
});
var update_in__5 = (function (m,p__9247,f,a,b){
var vec__9288 = p__9247;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9288,(0),null);
var ks = cljs.core.nthnext(vec__9288,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9289 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9290 = a;
var G__9291 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9289,G__9290,G__9291) : f.call(null,G__9289,G__9290,G__9291));
})());
}
});
var update_in__6 = (function (m,p__9248,f,a,b,c){
var vec__9292 = p__9248;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9292,(0),null);
var ks = cljs.core.nthnext(vec__9292,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9293 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9294 = a;
var G__9295 = b;
var G__9296 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9293,G__9294,G__9295,G__9296) : f.call(null,G__9293,G__9294,G__9295,G__9296));
})());
}
});
var update_in__7 = (function() { 
var G__9298__delegate = function (m,p__9249,f,a,b,c,args){
var vec__9297 = p__9249;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9297,(0),null);
var ks = cljs.core.nthnext(vec__9297,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9298 = function (m,p__9249,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9299__i = 0, G__9299__a = new Array(arguments.length -  6);
while (G__9299__i < G__9299__a.length) {G__9299__a[G__9299__i] = arguments[G__9299__i + 6]; ++G__9299__i;}
  args = new cljs.core.IndexedSeq(G__9299__a,0);
} 
return G__9298__delegate.call(this,m,p__9249,f,a,b,c,args);};
G__9298.cljs$lang$maxFixedArity = 6;
G__9298.cljs$lang$applyTo = (function (arglist__9300){
var m = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var p__9249 = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var f = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var a = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var b = cljs.core.first(arglist__9300);
arglist__9300 = cljs.core.next(arglist__9300);
var c = cljs.core.first(arglist__9300);
var args = cljs.core.rest(arglist__9300);
return G__9298__delegate(m,p__9249,f,a,b,c,args);
});
G__9298.cljs$core$IFn$_invoke$arity$variadic = G__9298__delegate;
return G__9298;
})()
;
update_in = function(m,p__9249,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9249,f);
case 4:
return update_in__4.call(this,m,p__9249,f,a);
case 5:
return update_in__5.call(this,m,p__9249,f,a,b);
case 6:
return update_in__6.call(this,m,p__9249,f,a,b,c);
default:
var G__9301 = null;
if (arguments.length > 6) {
var G__9302__i = 0, G__9302__a = new Array(arguments.length -  6);
while (G__9302__i < G__9302__a.length) {G__9302__a[G__9302__i] = arguments[G__9302__i + 6]; ++G__9302__i;}
G__9301 = new cljs.core.IndexedSeq(G__9302__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9249,f,a,b,c, G__9301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9313 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9313) : f.call(null,G__9313));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9314 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9315 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9314,G__9315) : f.call(null,G__9314,G__9315));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9316 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9317 = x;
var G__9318 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9316,G__9317,G__9318) : f.call(null,G__9316,G__9317,G__9318));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9319 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9320 = x;
var G__9321 = y;
var G__9322 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9319,G__9320,G__9321,G__9322) : f.call(null,G__9319,G__9320,G__9321,G__9322));
})());
});
var update__7 = (function() { 
var G__9323__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9323 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9324__i = 0, G__9324__a = new Array(arguments.length -  6);
while (G__9324__i < G__9324__a.length) {G__9324__a[G__9324__i] = arguments[G__9324__i + 6]; ++G__9324__i;}
  more = new cljs.core.IndexedSeq(G__9324__a,0);
} 
return G__9323__delegate.call(this,m,k,f,x,y,z,more);};
G__9323.cljs$lang$maxFixedArity = 6;
G__9323.cljs$lang$applyTo = (function (arglist__9325){
var m = cljs.core.first(arglist__9325);
arglist__9325 = cljs.core.next(arglist__9325);
var k = cljs.core.first(arglist__9325);
arglist__9325 = cljs.core.next(arglist__9325);
var f = cljs.core.first(arglist__9325);
arglist__9325 = cljs.core.next(arglist__9325);
var x = cljs.core.first(arglist__9325);
arglist__9325 = cljs.core.next(arglist__9325);
var y = cljs.core.first(arglist__9325);
arglist__9325 = cljs.core.next(arglist__9325);
var z = cljs.core.first(arglist__9325);
var more = cljs.core.rest(arglist__9325);
return G__9323__delegate(m,k,f,x,y,z,more);
});
G__9323.cljs$core$IFn$_invoke$arity$variadic = G__9323__delegate;
return G__9323;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9326 = null;
if (arguments.length > 6) {
var G__9327__i = 0, G__9327__a = new Array(arguments.length -  6);
while (G__9327__i < G__9327__a.length) {G__9327__a[G__9327__i] = arguments[G__9327__i + 6]; ++G__9327__i;}
G__9326 = new cljs.core.IndexedSeq(G__9327__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9328 = (ll - (5));
var G__9329 = r;
ll = G__9328;
ret = G__9329;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9334 = cljs.core.pv_aget(node,(0));
var G__9335 = (level - (5));
node = G__9334;
level = G__9335;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9336 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9337 = (level - (5));
node = G__9336;
level = G__9337;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9347 = init__$2;
var G__9348 = (j + i);
var G__9349 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9347,G__9348,G__9349) : f.call(null,G__9347,G__9348,G__9349));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9360 = (j + (1));
var G__9361 = init__$3;
j = G__9360;
init__$2 = G__9361;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9350 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9350) : cljs.core.deref.call(null,G__9350));
} else {
var G__9362 = (i + len);
var G__9363 = init__$2;
i = G__9362;
init__$1 = G__9363;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9351 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9351) : cljs.core.tv_editable_root.call(null,G__9351));
})(),(function (){var G__9352 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9352) : cljs.core.tv_editable_tail.call(null,G__9352));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9353 = init__$2;
var G__9354 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9353,G__9354) : f.call(null,G__9353,G__9354));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9364 = (j + (1));
var G__9365 = init__$3;
j = G__9364;
init__$2 = G__9365;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9355 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9355) : cljs.core.deref.call(null,G__9355));
} else {
var G__9366 = (i + len);
var G__9367 = init__$2;
i = G__9366;
init__$1 = G__9367;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9356 = coll__$1;
var G__9357 = cljs.core.first_array_for_longvec(coll__$1);
var G__9358 = (0);
var G__9359 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9356,G__9357,G__9358,G__9359) : cljs.core.chunked_seq.call(null,G__9356,G__9357,G__9358,G__9359));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4816__auto___9368 = len;
var i_9369 = (0);
while(true){
if((i_9369 < n__4816__auto___9368)){
(new_tail[i_9369] = (self__.tail[i_9369]));

var G__9370 = (i_9369 + (1));
i_9369 = G__9370;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9371 = null;
var G__9371__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9371__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9371 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9371__2.call(this,self__,k);
case 3:
return G__9371__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9371.cljs$core$IFn$_invoke$arity$2 = G__9371__2;
G__9371.cljs$core$IFn$_invoke$arity$3 = G__9371__3;
return G__9371;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9346){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9346)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9372 = (i + (1));
var G__9373 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9372;
out = G__9373;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9374__i = 0, G__9374__a = new Array(arguments.length -  0);
while (G__9374__i < G__9374__a.length) {G__9374__a[G__9374__i] = arguments[G__9374__i + 0]; ++G__9374__i;}
  args = new cljs.core.IndexedSeq(G__9374__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9375){
var args = cljs.core.seq(arglist__9375);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9376 = self__.vec;
var G__9377 = self__.node;
var G__9378 = self__.i;
var G__9379 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9376,G__9377,G__9378,G__9379) : cljs.core.chunked_seq.call(null,G__9376,G__9377,G__9378,G__9379));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9380 = self__.vec;
var G__9381 = (self__.i + self__.off);
var G__9382 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9380,G__9381,G__9382) : cljs.core.subvec.call(null,G__9380,G__9381,G__9382));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9383 = self__.vec;
var G__9384 = (self__.i + self__.off);
var G__9385 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9383,G__9384,G__9385) : cljs.core.subvec.call(null,G__9383,G__9384,G__9385));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9386 = self__.vec;
var G__9387 = self__.node;
var G__9388 = self__.i;
var G__9389 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9386,G__9387,G__9388,G__9389) : cljs.core.chunked_seq.call(null,G__9386,G__9387,G__9388,G__9389));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9390 = self__.vec;
var G__9391 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9392 = end;
var G__9393 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9390,G__9391,G__9392,G__9393) : cljs.core.chunked_seq.call(null,G__9390,G__9391,G__9392,G__9393));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9394 = self__.vec;
var G__9395 = self__.node;
var G__9396 = self__.i;
var G__9397 = self__.off;
var G__9398 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9394,G__9395,G__9396,G__9397,G__9398) : cljs.core.chunked_seq.call(null,G__9394,G__9395,G__9396,G__9397,G__9398));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9399 = self__.vec;
var G__9400 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9401 = end;
var G__9402 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9399,G__9400,G__9401,G__9402) : cljs.core.chunked_seq.call(null,G__9399,G__9400,G__9401,G__9402));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9404 = self__.meta;
var G__9405 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9406 = self__.start;
var G__9407 = (function (){var x__4246__auto__ = self__.end;
var y__4247__auto__ = (v_pos + (1));
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
})();
var G__9408 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9404,G__9405,G__9406,G__9407,G__9408) : cljs.core.build_subvec.call(null,G__9404,G__9405,G__9406,G__9407,G__9408));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9409 = self__.meta;
var G__9410 = self__.v;
var G__9411 = self__.start;
var G__9412 = (self__.end - (1));
var G__9413 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9409,G__9410,G__9411,G__9412,G__9413) : cljs.core.build_subvec.call(null,G__9409,G__9410,G__9411,G__9412,G__9413));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9415 = meta__$1;
var G__9416 = self__.v;
var G__9417 = self__.start;
var G__9418 = self__.end;
var G__9419 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9415,G__9416,G__9417,G__9418,G__9419) : cljs.core.build_subvec.call(null,G__9415,G__9416,G__9417,G__9418,G__9419));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9420 = self__.meta;
var G__9421 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9422 = self__.start;
var G__9423 = (self__.end + (1));
var G__9424 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9420,G__9421,G__9422,G__9423,G__9424) : cljs.core.build_subvec.call(null,G__9420,G__9421,G__9422,G__9423,G__9424));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9425 = null;
var G__9425__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9425__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9425 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9425__2.call(this,self__,k);
case 3:
return G__9425__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9425.cljs$core$IFn$_invoke$arity$2 = G__9425__2;
G__9425.cljs$core$IFn$_invoke$arity$3 = G__9425__3;
return G__9425;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9403){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9403)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9426 = meta;
var G__9427 = v.v;
var G__9428 = (v.start + start);
var G__9429 = (v.start + end);
var G__9430 = __hash;
meta = G__9426;
v = G__9427;
start = G__9428;
end = G__9429;
__hash = G__9430;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9437 = {};
return obj9437;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9445 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9446 = (level - (5));
node = G__9445;
level = G__9446;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9450 = null;
var G__9450__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9450__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9450 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9450__2.call(this,self__,k);
case 3:
return G__9450__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9450.cljs$core$IFn$_invoke$arity$2 = G__9450__2;
G__9450.cljs$core$IFn$_invoke$arity$3 = G__9450__3;
return G__9450;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9447){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9447)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3929__auto__ = self__.front;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3929__auto__ = self__.rear;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9451 = (i + incr);
i = G__9451;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9452 = (i + (1));
var G__9453 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9452;
out = G__9453;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9457 = {};
return obj9457;
})();
var l = ks.length;
var i_9458 = (0);
while(true){
if((i_9458 < l)){
var k_9459 = (ks[i_9458]);
(new_obj[k_9459] = (obj[k_9459]));

var G__9460 = (i_9458 + (1));
i_9458 = G__9460;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__9464 = k;
return goog.isString(G__9464);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9465 = init__$1;
var G__9466 = k;
var G__9467 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9465,G__9466,G__9467) : f.call(null,G__9465,G__9466,G__9467));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9468 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9468) : cljs.core.deref.call(null,G__9468));
} else {
var G__9474 = cljs.core.rest(keys__$1);
var G__9475 = init__$2;
keys__$1 = G__9474;
init__$1 = G__9475;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__9470 = k;
return goog.isString(G__9470);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9471 = k;
return goog.isString(G__9471);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__9473 = k;
return goog.isString(G__9473);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9461_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9461_SHARP_,(self__.strobj[p1__9461_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9476 = null;
var G__9476__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9476__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9476 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9476__2.call(this,self__,k);
case 3:
return G__9476__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9476.cljs$core$IFn$_invoke$arity$2 = G__9476__2;
G__9476.cljs$core$IFn$_invoke$arity$3 = G__9476__3;
return G__9476;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9462){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9462)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9478 = {};
return obj9478;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9479 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9479,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9479,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9480 = (i + (2));
i = G__9480;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9481 = (i + (2));
i = G__9481;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9482 = (i + (2));
i = G__9482;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9483 = (i + (2));
i = G__9483;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9484 = (i + (2));
i = G__9484;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3929__auto__ = (function (){var G__9488 = k;
return goog.isString(G__9488);
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9489 = (0);
while(true){
if((i_9489 < l)){
(narr[i_9489] = (arr[i_9489]));

var G__9490 = (i_9489 + (1));
i_9489 = G__9490;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9492 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9492) : cljs.core.keys.call(null,G__9492));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9493 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9493) : cljs.core.vals.call(null,G__9493));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9494 = cljs.core.seq(coll);
var chunk__9495 = null;
var count__9496 = (0);
var i__9497 = (0);
while(true){
if((i__9497 < count__9496)){
var vec__9498 = chunk__9495.cljs$core$IIndexed$_nth$arity$2(null,i__9497);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9498,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9498,(1),null);
var G__9499_9512 = v;
var G__9500_9513 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9499_9512,G__9500_9513) : f.call(null,G__9499_9512,G__9500_9513));

var G__9514 = seq__9494;
var G__9515 = chunk__9495;
var G__9516 = count__9496;
var G__9517 = (i__9497 + (1));
seq__9494 = G__9514;
chunk__9495 = G__9515;
count__9496 = G__9516;
i__9497 = G__9517;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9494);
if(temp__4126__auto__){
var seq__9494__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9494__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__9494__$1);
var G__9518 = cljs.core.chunk_rest(seq__9494__$1);
var G__9519 = c__4716__auto__;
var G__9520 = cljs.core.count(c__4716__auto__);
var G__9521 = (0);
seq__9494 = G__9518;
chunk__9495 = G__9519;
count__9496 = G__9520;
i__9497 = G__9521;
continue;
} else {
var vec__9501 = cljs.core.first(seq__9494__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9501,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9501,(1),null);
var G__9502_9522 = v;
var G__9503_9523 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9502_9522,G__9503_9523) : f.call(null,G__9502_9522,G__9503_9523));

var G__9524 = cljs.core.next(seq__9494__$1);
var G__9525 = null;
var G__9526 = (0);
var G__9527 = (0);
seq__9494 = G__9524;
chunk__9495 = G__9525;
count__9496 = G__9526;
i__9497 = G__9527;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9504 = init__$1;
var G__9505 = (self__.arr[i]);
var G__9506 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9504,G__9505,G__9506) : f.call(null,G__9504,G__9505,G__9506));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9507 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9507) : cljs.core.deref.call(null,G__9507));
} else {
var G__9528 = (i + (2));
var G__9529 = init__$2;
i = G__9528;
init__$1 = G__9529;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9508 = other;
if(G__9508){
var bit__4603__auto__ = (G__9508.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4603__auto__) || (G__9508.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9530 = (i + (2));
i = G__9530;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9510 = {};
return obj9510;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9531 = (s + (2));
var G__9532 = d;
s = G__9531;
d = G__9532;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9533 = (s + (2));
var G__9534 = (d + (2));
s = G__9533;
d = G__9534;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9511 = cljs.core.aclone(self__.arr);
(G__9511[(idx + (1))] = v);

return G__9511;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9535 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9536 = cljs.core.next(es);
ret = G__9535;
es = G__9536;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9537 = null;
var G__9537__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9537__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9537 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9537__2.call(this,self__,k);
case 3:
return G__9537__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9537.cljs$core$IFn$_invoke$arity$2 = G__9537__2;
G__9537.cljs$core$IFn$_invoke$arity$3 = G__9537__3;
return G__9537;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9491){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9491)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9538 = (i + (2));
var G__9539 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9538;
ret = G__9539;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9540_9548 = self__.arr;
G__9540_9548.pop();

G__9540_9548.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9541 = self__.len;
var G__9542 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9541,G__9542) : cljs.core.array__GT_transient_hash_map.call(null,G__9541,G__9542));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9543 = o;
if(G__9543){
var bit__4610__auto__ = (G__9543.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4610__auto__) || (G__9543.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9543.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9543);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9543);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9544 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9544) : cljs.core.key.call(null,G__9544));
})(),(function (){var G__9545 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9545) : cljs.core.val.call(null,G__9545));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9549 = cljs.core.next(es);
var G__9550 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9546 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9546) : cljs.core.key.call(null,G__9546));
})(),(function (){var G__9547 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9547) : cljs.core.val.call(null,G__9547));
})());
es = G__9549;
tcoll__$2 = G__9550;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9551 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9552 = (i + (2));
out = G__9551;
i = G__9552;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9555 = cljs.core.aclone(arr);
(G__9555[i] = a);

return G__9555;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9556 = cljs.core.aclone(arr);
(G__9556[i] = a);

(G__9556[j] = b);

return G__9556;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9561 = init__$1;
var G__9562 = k;
var G__9563 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9561,G__9562,G__9563) : f.call(null,G__9561,G__9562,G__9563));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9564 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9564) : cljs.core.deref.call(null,G__9564));
} else {
var G__9565 = (i + (2));
var G__9566 = init__$2;
i = G__9565;
init__$1 = G__9566;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9567 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9567) : cljs.core.create_inode_seq.call(null,G__9567));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9581 = (0);
var j_9582 = (0);
while(true){
if((i_9581 < (32))){
if((((self__.bitmap >>> i_9581) & (1)) === (0))){
var G__9583 = (i_9581 + (1));
var G__9584 = j_9582;
i_9581 = G__9583;
j_9582 = G__9584;
continue;
} else {
(nodes[i_9581] = ((!(((self__.arr[j_9582]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9582])),(self__.arr[j_9582]),(self__.arr[(j_9582 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9582 + (1))])));

var G__9585 = (i_9581 + (1));
var G__9586 = (j_9582 + (2));
i_9581 = G__9585;
j_9582 = G__9586;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9568 = edit__$1;
var G__9569 = (shift + (5));
var G__9570 = key_or_nil;
var G__9571 = val_or_node;
var G__9572 = hash;
var G__9573 = key;
var G__9574 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574) : cljs.core.create_node.call(null,G__9568,G__9569,G__9570,G__9571,G__9572,G__9573,G__9574));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9587 = (0);
var j_9588 = (0);
while(true){
if((i_9587 < (32))){
if((((self__.bitmap >>> i_9587) & (1)) === (0))){
var G__9589 = (i_9587 + (1));
var G__9590 = j_9588;
i_9587 = G__9589;
j_9588 = G__9590;
continue;
} else {
(nodes[i_9587] = ((!(((self__.arr[j_9588]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9588])),(self__.arr[j_9588]),(self__.arr[(j_9588 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9588 + (1))])));

var G__9591 = (i_9587 + (1));
var G__9592 = (j_9588 + (2));
i_9587 = G__9591;
j_9588 = G__9592;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9575 = (shift + (5));
var G__9576 = key_or_nil;
var G__9577 = val_or_node;
var G__9578 = hash;
var G__9579 = key;
var G__9580 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9575,G__9576,G__9577,G__9578,G__9579,G__9580) : cljs.core.create_node.call(null,G__9575,G__9576,G__9577,G__9578,G__9579,G__9580));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9593 = (i + (1));
var G__9594 = (j + (2));
var G__9595 = (bitmap | ((1) << i));
i = G__9593;
j = G__9594;
bitmap = G__9595;
continue;
} else {
var G__9596 = (i + (1));
var G__9597 = j;
var G__9598 = bitmap;
i = G__9596;
j = G__9597;
bitmap = G__9598;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9599 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9599) : cljs.core.create_array_node_seq.call(null,G__9599));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9600 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9600) : cljs.core.deref.call(null,G__9600));
} else {
var G__9601 = (i + (1));
var G__9602 = init__$2;
i = G__9601;
init__$1 = G__9602;
continue;
}
} else {
var G__9603 = (i + (1));
var G__9604 = init__$1;
i = G__9603;
init__$1 = G__9604;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9605 = (i + (2));
i = G__9605;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9606 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9606) : cljs.core.create_inode_seq.call(null,G__9606));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9607 = self__.nodes;
var G__9608 = (self__.i + (2));
var G__9609 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9607,G__9608,G__9609) : cljs.core.create_inode_seq.call(null,G__9607,G__9608,G__9609));
} else {
var G__9610 = self__.nodes;
var G__9611 = self__.i;
var G__9612 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9610,G__9611,G__9612) : cljs.core.create_inode_seq.call(null,G__9610,G__9611,G__9612));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9616 = (j + (2));
j = G__9616;
continue;
}
} else {
var G__9617 = (j + (2));
j = G__9617;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9618 = null;
var G__9619 = self__.nodes;
var G__9620 = self__.i;
var G__9621 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9618,G__9619,G__9620,G__9621) : cljs.core.create_array_node_seq.call(null,G__9618,G__9619,G__9620,G__9621));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9626 = (j + (1));
j = G__9626;
continue;
}
} else {
var G__9627 = (j + (1));
j = G__9627;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9629 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9629) : cljs.core.keys.call(null,G__9629));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9630 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9630) : cljs.core.vals.call(null,G__9630));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9631 = cljs.core.seq(coll);
var chunk__9632 = null;
var count__9633 = (0);
var i__9634 = (0);
while(true){
if((i__9634 < count__9633)){
var vec__9635 = chunk__9632.cljs$core$IIndexed$_nth$arity$2(null,i__9634);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9635,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9635,(1),null);
var G__9636_9647 = v;
var G__9637_9648 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9636_9647,G__9637_9648) : f.call(null,G__9636_9647,G__9637_9648));

var G__9649 = seq__9631;
var G__9650 = chunk__9632;
var G__9651 = count__9633;
var G__9652 = (i__9634 + (1));
seq__9631 = G__9649;
chunk__9632 = G__9650;
count__9633 = G__9651;
i__9634 = G__9652;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9631);
if(temp__4126__auto__){
var seq__9631__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9631__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__9631__$1);
var G__9653 = cljs.core.chunk_rest(seq__9631__$1);
var G__9654 = c__4716__auto__;
var G__9655 = cljs.core.count(c__4716__auto__);
var G__9656 = (0);
seq__9631 = G__9653;
chunk__9632 = G__9654;
count__9633 = G__9655;
i__9634 = G__9656;
continue;
} else {
var vec__9638 = cljs.core.first(seq__9631__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9638,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9638,(1),null);
var G__9639_9657 = v;
var G__9640_9658 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9639_9657,G__9640_9658) : f.call(null,G__9639_9657,G__9640_9658));

var G__9659 = cljs.core.next(seq__9631__$1);
var G__9660 = null;
var G__9661 = (0);
var G__9662 = (0);
seq__9631 = G__9659;
chunk__9632 = G__9660;
count__9633 = G__9661;
i__9634 = G__9662;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9641 = init;
var G__9642 = null;
var G__9643 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9641,G__9642,G__9643) : f.call(null,G__9641,G__9642,G__9643));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9644 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9644) : cljs.core.deref.call(null,G__9644));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj9646 = {};
return obj9646;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9663 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9664 = cljs.core.next(es);
ret = G__9663;
es = G__9664;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__9665 = null;
var G__9665__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9665__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9665 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9665__2.call(this,self__,k);
case 3:
return G__9665__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9665.cljs$core$IFn$_invoke$arity$2 = G__9665__2;
G__9665.cljs$core$IFn$_invoke$arity$3 = G__9665__3;
return G__9665;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9628){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9628)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9666 = (i + (2));
var G__9667 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9666;
ret = G__9667;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__9668 = (i + (1));
var G__9669 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__9668;
out = G__9669;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__9670 = o;
if(G__9670){
var bit__4610__auto__ = (G__9670.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4610__auto__) || (G__9670.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9670.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9670);
}
})()){
return tcoll.assoc_BANG_((function (){var G__9671 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9671) : cljs.core.key.call(null,G__9671));
})(),(function (){var G__9672 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9672) : cljs.core.val.call(null,G__9672));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9675 = cljs.core.next(es);
var G__9676 = tcoll__$1.assoc_BANG_((function (){var G__9673 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9673) : cljs.core.key.call(null,G__9673));
})(),(function (){var G__9674 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9674) : cljs.core.val.call(null,G__9674));
})());
es = G__9675;
tcoll__$1 = G__9676;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__9677 = ((ascending_QMARK_)?t.left:t.right);
var G__9678 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__9677;
stack__$1 = G__9678;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9691 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9691) : cljs.core.deref.call(null,G__9691));
} else {
var init__$2 = (function (){var G__9692 = init__$1;
var G__9693 = node.key;
var G__9694 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9692,G__9693,G__9694) : f.call(null,G__9692,G__9693,G__9694));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9695 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9695) : cljs.core.deref.call(null,G__9695));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__9696 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9696) : cljs.core.deref.call(null,G__9696));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__9698 = null;
var G__9698__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9698__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9698 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9698__2.call(this,self__,k);
case 3:
return G__9698__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9698.cljs$core$IFn$_invoke$arity$2 = G__9698__2;
G__9698.cljs$core$IFn$_invoke$arity$3 = G__9698__3;
return G__9698;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args9697){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9697)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__9700 = null;
var G__9700__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9700__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9700 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9700__2.call(this,self__,k);
case 3:
return G__9700__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9700.cljs$core$IFn$_invoke$arity$2 = G__9700__2;
G__9700.cljs$core$IFn$_invoke$arity$3 = G__9700__3;
return G__9700;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args9699){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9699)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__9713 = k;
var G__9714 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9713,G__9714) : comp.call(null,G__9713,G__9714));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__9733 = k;
var G__9734 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9733,G__9734) : comp.call(null,G__9733,G__9734));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9745 = k;
var G__9746 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9745,G__9746) : comp.call(null,G__9745,G__9746));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9748 = cljs.core.seq(coll);
var chunk__9749 = null;
var count__9750 = (0);
var i__9751 = (0);
while(true){
if((i__9751 < count__9750)){
var vec__9752 = chunk__9749.cljs$core$IIndexed$_nth$arity$2(null,i__9751);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9752,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9752,(1),null);
var G__9753_9765 = v;
var G__9754_9766 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9753_9765,G__9754_9766) : f.call(null,G__9753_9765,G__9754_9766));

var G__9767 = seq__9748;
var G__9768 = chunk__9749;
var G__9769 = count__9750;
var G__9770 = (i__9751 + (1));
seq__9748 = G__9767;
chunk__9749 = G__9768;
count__9750 = G__9769;
i__9751 = G__9770;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9748);
if(temp__4126__auto__){
var seq__9748__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9748__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__9748__$1);
var G__9771 = cljs.core.chunk_rest(seq__9748__$1);
var G__9772 = c__4716__auto__;
var G__9773 = cljs.core.count(c__4716__auto__);
var G__9774 = (0);
seq__9748 = G__9771;
chunk__9749 = G__9772;
count__9750 = G__9773;
i__9751 = G__9774;
continue;
} else {
var vec__9755 = cljs.core.first(seq__9748__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9755,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9755,(1),null);
var G__9756_9775 = v;
var G__9757_9776 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9756_9775,G__9757_9776) : f.call(null,G__9756_9775,G__9757_9776));

var G__9777 = cljs.core.next(seq__9748__$1);
var G__9778 = null;
var G__9779 = (0);
var G__9780 = (0);
seq__9748 = G__9777;
chunk__9749 = G__9778;
count__9750 = G__9779;
i__9751 = G__9780;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9758 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9758) : cljs.core.keys.call(null,G__9758));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9759 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9759) : cljs.core.vals.call(null,G__9759));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9760 = k;
var G__9761 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9760,G__9761) : self__.comp.call(null,G__9760,G__9761));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9781 = t.left;
t = G__9781;
continue;
} else {
var G__9782 = t.right;
t = G__9782;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9783 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9784 = cljs.core.next(es);
ret = G__9783;
es = G__9784;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9785 = null;
var G__9785__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9785__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9785 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9785__2.call(this,self__,k);
case 3:
return G__9785__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9785.cljs$core$IFn$_invoke$arity$2 = G__9785__2;
G__9785.cljs$core$IFn$_invoke$arity$3 = G__9785__3;
return G__9785;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9747){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9747)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9762 = k;
var G__9763 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9762,G__9763) : self__.comp.call(null,G__9762,G__9763));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9786 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9787 = t.left;
stack = G__9786;
t = G__9787;
continue;
} else {
var G__9788 = stack;
var G__9789 = t.right;
stack = G__9788;
t = G__9789;
continue;
}
} else {
if((c > (0))){
var G__9790 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9791 = t.right;
stack = G__9790;
t = G__9791;
continue;
} else {
var G__9792 = stack;
var G__9793 = t.left;
stack = G__9792;
t = G__9793;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9764 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9764) : cljs.core.key.call(null,G__9764));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9794 = cljs.core.nnext(in$);
var G__9795 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9794;
out = G__9795;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9796__i = 0, G__9796__a = new Array(arguments.length -  0);
while (G__9796__i < G__9796__a.length) {G__9796__a[G__9796__i] = arguments[G__9796__i + 0]; ++G__9796__i;}
  keyvals = new cljs.core.IndexedSeq(G__9796__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__9797){
var keyvals = cljs.core.seq(arglist__9797);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9798__i = 0, G__9798__a = new Array(arguments.length -  0);
while (G__9798__i < G__9798__a.length) {G__9798__a[G__9798__i] = arguments[G__9798__i + 0]; ++G__9798__i;}
  keyvals = new cljs.core.IndexedSeq(G__9798__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__9799){
var keyvals = cljs.core.seq(arglist__9799);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9803 = {};
return obj9803;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9804 = cljs.core.nnext(kvs);
kvs = G__9804;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9805__i = 0, G__9805__a = new Array(arguments.length -  0);
while (G__9805__i < G__9805__a.length) {G__9805__a[G__9805__i] = arguments[G__9805__i + 0]; ++G__9805__i;}
  keyvals = new cljs.core.IndexedSeq(G__9805__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__9806){
var keyvals = cljs.core.seq(arglist__9806);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9807 = cljs.core.nnext(in$);
var G__9808 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9807;
out = G__9808;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9809__i = 0, G__9809__a = new Array(arguments.length -  0);
while (G__9809__i < G__9809__a.length) {G__9809__a[G__9809__i] = arguments[G__9809__i + 0]; ++G__9809__i;}
  keyvals = new cljs.core.IndexedSeq(G__9809__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__9810){
var keyvals = cljs.core.seq(arglist__9810);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9811 = cljs.core.nnext(in$);
var G__9812 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9811;
out = G__9812;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9813__i = 0, G__9813__a = new Array(arguments.length -  1);
while (G__9813__i < G__9813__a.length) {G__9813__a[G__9813__i] = arguments[G__9813__i + 1]; ++G__9813__i;}
  keyvals = new cljs.core.IndexedSeq(G__9813__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__9814){
var comparator = cljs.core.first(arglist__9814);
var keyvals = cljs.core.rest(arglist__9814);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9815 = self__.mseq;
if(G__9815){
var bit__4610__auto__ = (G__9815.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__9815.cljs$core$INext$)){
return true;
} else {
if((!G__9815.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9815);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9815);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9816 = self__.mseq;
if(G__9816){
var bit__4610__auto__ = (G__9816.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__9816.cljs$core$INext$)){
return true;
} else {
if((!G__9816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9816);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9817 = self__.mseq;
if(G__9817){
var bit__4610__auto__ = (G__9817.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__9817.cljs$core$INext$)){
return true;
} else {
if((!G__9817.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9817);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9817);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9818 = self__.mseq;
if(G__9818){
var bit__4610__auto__ = (G__9818.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__9818.cljs$core$INext$)){
return true;
} else {
if((!G__9818.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9818);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9818);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9819_SHARP_,p2__9820_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3929__auto__ = p1__9819_SHARP_;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9820_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9821__i = 0, G__9821__a = new Array(arguments.length -  0);
while (G__9821__i < G__9821__a.length) {G__9821__a[G__9821__i] = arguments[G__9821__i + 0]; ++G__9821__i;}
  maps = new cljs.core.IndexedSeq(G__9821__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__9822){
var maps = cljs.core.seq(arglist__9822);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9825 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9826 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9825,G__9826) : f.call(null,G__9825,G__9826));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3929__auto__ = m1;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9827__i = 0, G__9827__a = new Array(arguments.length -  1);
while (G__9827__i < G__9827__a.length) {G__9827__a[G__9827__i] = arguments[G__9827__i + 1]; ++G__9827__i;}
  maps = new cljs.core.IndexedSeq(G__9827__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__9828){
var f = cljs.core.first(arglist__9828);
var maps = cljs.core.rest(arglist__9828);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9829 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9830 = cljs.core.next(keys);
ret = G__9829;
keys = G__9830;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9833 = cljs.core.seq(coll);
var chunk__9834 = null;
var count__9835 = (0);
var i__9836 = (0);
while(true){
if((i__9836 < count__9835)){
var vec__9837 = chunk__9834.cljs$core$IIndexed$_nth$arity$2(null,i__9836);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9837,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9837,(1),null);
var G__9838_9843 = v;
var G__9839_9844 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9838_9843,G__9839_9844) : f.call(null,G__9838_9843,G__9839_9844));

var G__9845 = seq__9833;
var G__9846 = chunk__9834;
var G__9847 = count__9835;
var G__9848 = (i__9836 + (1));
seq__9833 = G__9845;
chunk__9834 = G__9846;
count__9835 = G__9847;
i__9836 = G__9848;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9833);
if(temp__4126__auto__){
var seq__9833__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9833__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__9833__$1);
var G__9849 = cljs.core.chunk_rest(seq__9833__$1);
var G__9850 = c__4716__auto__;
var G__9851 = cljs.core.count(c__4716__auto__);
var G__9852 = (0);
seq__9833 = G__9849;
chunk__9834 = G__9850;
count__9835 = G__9851;
i__9836 = G__9852;
continue;
} else {
var vec__9840 = cljs.core.first(seq__9833__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9840,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9840,(1),null);
var G__9841_9853 = v;
var G__9842_9854 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9841_9853,G__9842_9854) : f.call(null,G__9841_9853,G__9842_9854));

var G__9855 = cljs.core.next(seq__9833__$1);
var G__9856 = null;
var G__9857 = (0);
var G__9858 = (0);
seq__9833 = G__9855;
chunk__9834 = G__9856;
count__9835 = G__9857;
i__9836 = G__9858;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9831_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9831_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9859 = null;
var G__9859__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9859__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9859 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9859__2.call(this,self__,k);
case 3:
return G__9859__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9859.cljs$core$IFn$_invoke$arity$2 = G__9859__2;
G__9859.cljs$core$IFn$_invoke$arity$3 = G__9859__3;
return G__9859;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9832){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9832)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9860 = (i + (1));
var G__9861 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9860;
out = G__9861;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9862 = (i + (1));
var G__9863 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9862;
out = G__9863;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__9865 = null;
var G__9865__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9865__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9865 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9865__2.call(this,self__,k);
case 3:
return G__9865__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9865.cljs$core$IFn$_invoke$arity$2 = G__9865__2;
G__9865.cljs$core$IFn$_invoke$arity$3 = G__9865__3;
return G__9865;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9864){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9864)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9868 = cljs.core.seq(coll);
var chunk__9869 = null;
var count__9870 = (0);
var i__9871 = (0);
while(true){
if((i__9871 < count__9870)){
var vec__9872 = chunk__9869.cljs$core$IIndexed$_nth$arity$2(null,i__9871);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9872,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9872,(1),null);
var G__9873_9878 = v;
var G__9874_9879 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9873_9878,G__9874_9879) : f.call(null,G__9873_9878,G__9874_9879));

var G__9880 = seq__9868;
var G__9881 = chunk__9869;
var G__9882 = count__9870;
var G__9883 = (i__9871 + (1));
seq__9868 = G__9880;
chunk__9869 = G__9881;
count__9870 = G__9882;
i__9871 = G__9883;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9868);
if(temp__4126__auto__){
var seq__9868__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9868__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__9868__$1);
var G__9884 = cljs.core.chunk_rest(seq__9868__$1);
var G__9885 = c__4716__auto__;
var G__9886 = cljs.core.count(c__4716__auto__);
var G__9887 = (0);
seq__9868 = G__9884;
chunk__9869 = G__9885;
count__9870 = G__9886;
i__9871 = G__9887;
continue;
} else {
var vec__9875 = cljs.core.first(seq__9868__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9875,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9875,(1),null);
var G__9876_9888 = v;
var G__9877_9889 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9876_9888,G__9877_9889) : f.call(null,G__9876_9888,G__9877_9889));

var G__9890 = cljs.core.next(seq__9868__$1);
var G__9891 = null;
var G__9892 = (0);
var G__9893 = (0);
seq__9868 = G__9890;
chunk__9869 = G__9891;
count__9870 = G__9892;
i__9871 = G__9893;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9866_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9866_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9894 = null;
var G__9894__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9894__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9894 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9894__2.call(this,self__,k);
case 3:
return G__9894__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9894.cljs$core$IFn$_invoke$arity$2 = G__9894__2;
G__9894.cljs$core$IFn$_invoke$arity$3 = G__9894__3;
return G__9894;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9867){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9867)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4810__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4810__auto__.length)){
var G__9895 = (i + (1));
var G__9896 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9895;
res = G__9896;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9897 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9898 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9897;
out = G__9898;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9899__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9899 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9900__i = 0, G__9900__a = new Array(arguments.length -  0);
while (G__9900__i < G__9900__a.length) {G__9900__a[G__9900__i] = arguments[G__9900__i + 0]; ++G__9900__i;}
  keys = new cljs.core.IndexedSeq(G__9900__a,0);
} 
return G__9899__delegate.call(this,keys);};
G__9899.cljs$lang$maxFixedArity = 0;
G__9899.cljs$lang$applyTo = (function (arglist__9901){
var keys = cljs.core.seq(arglist__9901);
return G__9899__delegate(keys);
});
G__9899.cljs$core$IFn$_invoke$arity$variadic = G__9899__delegate;
return G__9899;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9902 = null;
if (arguments.length > 0) {
var G__9903__i = 0, G__9903__a = new Array(arguments.length -  0);
while (G__9903__i < G__9903__a.length) {G__9903__a[G__9903__i] = arguments[G__9903__i + 0]; ++G__9903__i;}
G__9902 = new cljs.core.IndexedSeq(G__9903__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9902);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9904__i = 0, G__9904__a = new Array(arguments.length -  0);
while (G__9904__i < G__9904__a.length) {G__9904__a[G__9904__i] = arguments[G__9904__i + 0]; ++G__9904__i;}
  keys = new cljs.core.IndexedSeq(G__9904__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9905){
var keys = cljs.core.seq(arglist__9905);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9906__i = 0, G__9906__a = new Array(arguments.length -  1);
while (G__9906__i < G__9906__a.length) {G__9906__a[G__9906__i] = arguments[G__9906__i + 1]; ++G__9906__i;}
  keys = new cljs.core.IndexedSeq(G__9906__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9907){
var comparator = cljs.core.first(arglist__9907);
var keys = cljs.core.rest(arglist__9907);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9908_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9908_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__9908_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9909_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__9909_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__9909_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9930 = null;
var G__9930__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9930__1 = (function (result){
var G__9920 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9920) : rf.call(null,G__9920));
});
var G__9930__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9921 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9921) : cljs.core.deref.call(null,G__9921));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9922 = result;
var G__9923 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9922,G__9923) : rf.call(null,G__9922,G__9923));
}
});
G__9930 = function(result,input){
switch(arguments.length){
case 0:
return G__9930__0.call(this);
case 1:
return G__9930__1.call(this,result);
case 2:
return G__9930__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9930.cljs$core$IFn$_invoke$arity$0 = G__9930__0;
G__9930.cljs$core$IFn$_invoke$arity$1 = G__9930__1;
G__9930.cljs$core$IFn$_invoke$arity$2 = G__9930__2;
return G__9930;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9928,seen__$1){
while(true){
var vec__9929 = p__9928;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9929,(0),null);
var xs__$1 = vec__9929;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9931 = cljs.core.rest(s);
var G__9932 = seen__$1;
p__9928 = G__9931;
seen__$1 = G__9932;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9933 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9934 = cljs.core.next(s__$1);
ret = G__9933;
s__$1 = G__9934;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9936 = x;
if(G__9936){
var bit__4603__auto__ = (G__9936.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4603__auto__) || (G__9936.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9937 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9938 = cljs.core.next(ks);
var G__9939 = cljs.core.next(vs);
map = G__9937;
ks = G__9938;
vs = G__9939;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9950 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9950) : k.call(null,G__9950));
})() > (function (){var G__9951 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9951) : k.call(null,G__9951));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9952__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9940_SHARP_,p2__9941_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9940_SHARP_,p2__9941_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9952 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9953__i = 0, G__9953__a = new Array(arguments.length -  3);
while (G__9953__i < G__9953__a.length) {G__9953__a[G__9953__i] = arguments[G__9953__i + 3]; ++G__9953__i;}
  more = new cljs.core.IndexedSeq(G__9953__a,0);
} 
return G__9952__delegate.call(this,k,x,y,more);};
G__9952.cljs$lang$maxFixedArity = 3;
G__9952.cljs$lang$applyTo = (function (arglist__9954){
var k = cljs.core.first(arglist__9954);
arglist__9954 = cljs.core.next(arglist__9954);
var x = cljs.core.first(arglist__9954);
arglist__9954 = cljs.core.next(arglist__9954);
var y = cljs.core.first(arglist__9954);
var more = cljs.core.rest(arglist__9954);
return G__9952__delegate(k,x,y,more);
});
G__9952.cljs$core$IFn$_invoke$arity$variadic = G__9952__delegate;
return G__9952;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9955 = null;
if (arguments.length > 3) {
var G__9956__i = 0, G__9956__a = new Array(arguments.length -  3);
while (G__9956__i < G__9956__a.length) {G__9956__a[G__9956__i] = arguments[G__9956__i + 3]; ++G__9956__i;}
G__9955 = new cljs.core.IndexedSeq(G__9956__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9967 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9967) : k.call(null,G__9967));
})() < (function (){var G__9968 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9968) : k.call(null,G__9968));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9969__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9957_SHARP_,p2__9958_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9957_SHARP_,p2__9958_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9969 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9970__i = 0, G__9970__a = new Array(arguments.length -  3);
while (G__9970__i < G__9970__a.length) {G__9970__a[G__9970__i] = arguments[G__9970__i + 3]; ++G__9970__i;}
  more = new cljs.core.IndexedSeq(G__9970__a,0);
} 
return G__9969__delegate.call(this,k,x,y,more);};
G__9969.cljs$lang$maxFixedArity = 3;
G__9969.cljs$lang$applyTo = (function (arglist__9971){
var k = cljs.core.first(arglist__9971);
arglist__9971 = cljs.core.next(arglist__9971);
var x = cljs.core.first(arglist__9971);
arglist__9971 = cljs.core.next(arglist__9971);
var y = cljs.core.first(arglist__9971);
var more = cljs.core.rest(arglist__9971);
return G__9969__delegate(k,x,y,more);
});
G__9969.cljs$core$IFn$_invoke$arity$variadic = G__9969__delegate;
return G__9969;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9972 = null;
if (arguments.length > 3) {
var G__9973__i = 0, G__9973__a = new Array(arguments.length -  3);
while (G__9973__i < G__9973__a.length) {G__9973__a[G__9973__i] = arguments[G__9973__i + 3]; ++G__9973__i;}
G__9972 = new cljs.core.IndexedSeq(G__9973__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9990 = null;
var G__9990__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9990__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9985 = result;
var G__9986 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9985,G__9986) : rf.call(null,G__9985,G__9986));
})());
})());
var G__9987 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9987) : rf.call(null,G__9987));
});
var G__9990__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9988 = result;
var G__9989 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9988,G__9989) : rf.call(null,G__9988,G__9989));
} else {
return result;
}
});
G__9990 = function(result,input){
switch(arguments.length){
case 0:
return G__9990__0.call(this);
case 1:
return G__9990__1.call(this,result);
case 2:
return G__9990__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9990.cljs$core$IFn$_invoke$arity$0 = G__9990__0;
G__9990.cljs$core$IFn$_invoke$arity$1 = G__9990__1;
G__9990.cljs$core$IFn$_invoke$arity$2 = G__9990__2;
return G__9990;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10003 = null;
var G__10003__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10003__1 = (function (result){
var G__9998 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9998) : rf.call(null,G__9998));
});
var G__10003__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9999 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9999) : pred.call(null,G__9999));
})())){
var G__10000 = result;
var G__10001 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10000,G__10001) : rf.call(null,G__10000,G__10001));
} else {
return cljs.core.reduced(result);
}
});
G__10003 = function(result,input){
switch(arguments.length){
case 0:
return G__10003__0.call(this);
case 1:
return G__10003__1.call(this,result);
case 2:
return G__10003__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10003.cljs$core$IFn$_invoke$arity$0 = G__10003__0;
G__10003.cljs$core$IFn$_invoke$arity$1 = G__10003__1;
G__10003.cljs$core$IFn$_invoke$arity$2 = G__10003__2;
return G__10003;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10002 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10002) : pred.call(null,G__10002));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10008 = (function (){var G__10010 = cljs.core._entry_key(sc,e);
var G__10011 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10010,G__10011) : comp.call(null,G__10010,G__10011));
})();
var G__10009 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10008,G__10009) : test.call(null,G__10008,G__10009));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10015 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10015,(0),null);
var s = vec__10015;
if(cljs.core.truth_((function (){var G__10016 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10016) : include.call(null,G__10016));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10017 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10017,(0),null);
var s = vec__10017;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10021 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10021,(0),null);
var s = vec__10021;
if(cljs.core.truth_((function (){var G__10022 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10022) : include.call(null,G__10022));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10023 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10023,(0),null);
var s = vec__10023;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10024 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10024) : Math.ceil.call(null,G__10024));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10025 = ret;
var G__10026 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10025,G__10026) : f.call(null,G__10025,G__10026));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10027 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10027) : cljs.core.deref.call(null,G__10027));
} else {
var G__10028 = (i + self__.step);
var G__10029 = ret__$1;
i = G__10028;
ret = G__10029;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10047 = null;
var G__10047__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10047__1 = (function (result){
var G__10044 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10044) : rf.call(null,G__10044));
});
var G__10047__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10045 = result;
var G__10046 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10045,G__10046) : rf.call(null,G__10045,G__10046));
} else {
return result;
}
});
G__10047 = function(result,input){
switch(arguments.length){
case 0:
return G__10047__0.call(this);
case 1:
return G__10047__1.call(this,result);
case 2:
return G__10047__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10047.cljs$core$IFn$_invoke$arity$0 = G__10047__0;
G__10047.cljs$core$IFn$_invoke$arity$1 = G__10047__1;
G__10047.cljs$core$IFn$_invoke$arity$2 = G__10047__2;
return G__10047;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10069 = null;
var G__10069__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10069__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10060 = result;
var G__10061 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10060,G__10061) : rf.call(null,G__10060,G__10061));
})());
})());
var G__10062 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10062) : rf.call(null,G__10062));
});
var G__10069__2 = (function (result,input){
var pval = (function (){var G__10063 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10063) : cljs.core.deref.call(null,G__10063));
})();
var val = (function (){var G__10064 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10064) : f.call(null,G__10064));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10065 = result;
var G__10066 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10065,G__10066) : rf.call(null,G__10065,G__10066));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10069 = function(result,input){
switch(arguments.length){
case 0:
return G__10069__0.call(this);
case 1:
return G__10069__1.call(this,result);
case 2:
return G__10069__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10069.cljs$core$IFn$_invoke$arity$0 = G__10069__0;
G__10069.cljs$core$IFn$_invoke$arity$1 = G__10069__1;
G__10069.cljs$core$IFn$_invoke$arity$2 = G__10069__2;
return G__10069;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10067 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10067) : f.call(null,G__10067));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10048_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10068 = p1__10048_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10068) : f.call(null,G__10068));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10078 = init;
var G__10079 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10078,G__10079) : f.call(null,G__10078,G__10079));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10174 = null;
var G__10174__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10174__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10132 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10132) : f.call(null,G__10132));
})()],null));
});
var G__10174__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10133 = x;
var G__10134 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10133,G__10134) : f.call(null,G__10133,G__10134));
})()],null));
});
var G__10174__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10135 = x;
var G__10136 = y;
var G__10137 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10135,G__10136,G__10137) : f.call(null,G__10135,G__10136,G__10137));
})()],null));
});
var G__10174__4 = (function() { 
var G__10175__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10175 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10176__i = 0, G__10176__a = new Array(arguments.length -  3);
while (G__10176__i < G__10176__a.length) {G__10176__a[G__10176__i] = arguments[G__10176__i + 3]; ++G__10176__i;}
  args = new cljs.core.IndexedSeq(G__10176__a,0);
} 
return G__10175__delegate.call(this,x,y,z,args);};
G__10175.cljs$lang$maxFixedArity = 3;
G__10175.cljs$lang$applyTo = (function (arglist__10177){
var x = cljs.core.first(arglist__10177);
arglist__10177 = cljs.core.next(arglist__10177);
var y = cljs.core.first(arglist__10177);
arglist__10177 = cljs.core.next(arglist__10177);
var z = cljs.core.first(arglist__10177);
var args = cljs.core.rest(arglist__10177);
return G__10175__delegate(x,y,z,args);
});
G__10175.cljs$core$IFn$_invoke$arity$variadic = G__10175__delegate;
return G__10175;
})()
;
G__10174 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10174__0.call(this);
case 1:
return G__10174__1.call(this,x);
case 2:
return G__10174__2.call(this,x,y);
case 3:
return G__10174__3.call(this,x,y,z);
default:
var G__10178 = null;
if (arguments.length > 3) {
var G__10179__i = 0, G__10179__a = new Array(arguments.length -  3);
while (G__10179__i < G__10179__a.length) {G__10179__a[G__10179__i] = arguments[G__10179__i + 3]; ++G__10179__i;}
G__10178 = new cljs.core.IndexedSeq(G__10179__a,0);
}
return G__10174__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10174.cljs$lang$maxFixedArity = 3;
G__10174.cljs$lang$applyTo = G__10174__4.cljs$lang$applyTo;
G__10174.cljs$core$IFn$_invoke$arity$0 = G__10174__0;
G__10174.cljs$core$IFn$_invoke$arity$1 = G__10174__1;
G__10174.cljs$core$IFn$_invoke$arity$2 = G__10174__2;
G__10174.cljs$core$IFn$_invoke$arity$3 = G__10174__3;
G__10174.cljs$core$IFn$_invoke$arity$variadic = G__10174__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10174;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10180 = null;
var G__10180__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10180__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10138 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10138) : f.call(null,G__10138));
})(),(function (){var G__10139 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10139) : g.call(null,G__10139));
})()],null));
});
var G__10180__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10140 = x;
var G__10141 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10140,G__10141) : f.call(null,G__10140,G__10141));
})(),(function (){var G__10142 = x;
var G__10143 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10142,G__10143) : g.call(null,G__10142,G__10143));
})()],null));
});
var G__10180__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10144 = x;
var G__10145 = y;
var G__10146 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10144,G__10145,G__10146) : f.call(null,G__10144,G__10145,G__10146));
})(),(function (){var G__10147 = x;
var G__10148 = y;
var G__10149 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10147,G__10148,G__10149) : g.call(null,G__10147,G__10148,G__10149));
})()],null));
});
var G__10180__4 = (function() { 
var G__10181__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10181 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10182__i = 0, G__10182__a = new Array(arguments.length -  3);
while (G__10182__i < G__10182__a.length) {G__10182__a[G__10182__i] = arguments[G__10182__i + 3]; ++G__10182__i;}
  args = new cljs.core.IndexedSeq(G__10182__a,0);
} 
return G__10181__delegate.call(this,x,y,z,args);};
G__10181.cljs$lang$maxFixedArity = 3;
G__10181.cljs$lang$applyTo = (function (arglist__10183){
var x = cljs.core.first(arglist__10183);
arglist__10183 = cljs.core.next(arglist__10183);
var y = cljs.core.first(arglist__10183);
arglist__10183 = cljs.core.next(arglist__10183);
var z = cljs.core.first(arglist__10183);
var args = cljs.core.rest(arglist__10183);
return G__10181__delegate(x,y,z,args);
});
G__10181.cljs$core$IFn$_invoke$arity$variadic = G__10181__delegate;
return G__10181;
})()
;
G__10180 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10180__0.call(this);
case 1:
return G__10180__1.call(this,x);
case 2:
return G__10180__2.call(this,x,y);
case 3:
return G__10180__3.call(this,x,y,z);
default:
var G__10184 = null;
if (arguments.length > 3) {
var G__10185__i = 0, G__10185__a = new Array(arguments.length -  3);
while (G__10185__i < G__10185__a.length) {G__10185__a[G__10185__i] = arguments[G__10185__i + 3]; ++G__10185__i;}
G__10184 = new cljs.core.IndexedSeq(G__10185__a,0);
}
return G__10180__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10180.cljs$lang$maxFixedArity = 3;
G__10180.cljs$lang$applyTo = G__10180__4.cljs$lang$applyTo;
G__10180.cljs$core$IFn$_invoke$arity$0 = G__10180__0;
G__10180.cljs$core$IFn$_invoke$arity$1 = G__10180__1;
G__10180.cljs$core$IFn$_invoke$arity$2 = G__10180__2;
G__10180.cljs$core$IFn$_invoke$arity$3 = G__10180__3;
G__10180.cljs$core$IFn$_invoke$arity$variadic = G__10180__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10180;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10186 = null;
var G__10186__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10186__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10150 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10150) : f.call(null,G__10150));
})(),(function (){var G__10151 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10151) : g.call(null,G__10151));
})(),(function (){var G__10152 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10152) : h.call(null,G__10152));
})()],null));
});
var G__10186__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10153 = x;
var G__10154 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10153,G__10154) : f.call(null,G__10153,G__10154));
})(),(function (){var G__10155 = x;
var G__10156 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10155,G__10156) : g.call(null,G__10155,G__10156));
})(),(function (){var G__10157 = x;
var G__10158 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10157,G__10158) : h.call(null,G__10157,G__10158));
})()],null));
});
var G__10186__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10159 = x;
var G__10160 = y;
var G__10161 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10159,G__10160,G__10161) : f.call(null,G__10159,G__10160,G__10161));
})(),(function (){var G__10162 = x;
var G__10163 = y;
var G__10164 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10162,G__10163,G__10164) : g.call(null,G__10162,G__10163,G__10164));
})(),(function (){var G__10165 = x;
var G__10166 = y;
var G__10167 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10165,G__10166,G__10167) : h.call(null,G__10165,G__10166,G__10167));
})()],null));
});
var G__10186__4 = (function() { 
var G__10187__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10187 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10188__i = 0, G__10188__a = new Array(arguments.length -  3);
while (G__10188__i < G__10188__a.length) {G__10188__a[G__10188__i] = arguments[G__10188__i + 3]; ++G__10188__i;}
  args = new cljs.core.IndexedSeq(G__10188__a,0);
} 
return G__10187__delegate.call(this,x,y,z,args);};
G__10187.cljs$lang$maxFixedArity = 3;
G__10187.cljs$lang$applyTo = (function (arglist__10189){
var x = cljs.core.first(arglist__10189);
arglist__10189 = cljs.core.next(arglist__10189);
var y = cljs.core.first(arglist__10189);
arglist__10189 = cljs.core.next(arglist__10189);
var z = cljs.core.first(arglist__10189);
var args = cljs.core.rest(arglist__10189);
return G__10187__delegate(x,y,z,args);
});
G__10187.cljs$core$IFn$_invoke$arity$variadic = G__10187__delegate;
return G__10187;
})()
;
G__10186 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10186__0.call(this);
case 1:
return G__10186__1.call(this,x);
case 2:
return G__10186__2.call(this,x,y);
case 3:
return G__10186__3.call(this,x,y,z);
default:
var G__10190 = null;
if (arguments.length > 3) {
var G__10191__i = 0, G__10191__a = new Array(arguments.length -  3);
while (G__10191__i < G__10191__a.length) {G__10191__a[G__10191__i] = arguments[G__10191__i + 3]; ++G__10191__i;}
G__10190 = new cljs.core.IndexedSeq(G__10191__a,0);
}
return G__10186__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10186.cljs$lang$maxFixedArity = 3;
G__10186.cljs$lang$applyTo = G__10186__4.cljs$lang$applyTo;
G__10186.cljs$core$IFn$_invoke$arity$0 = G__10186__0;
G__10186.cljs$core$IFn$_invoke$arity$1 = G__10186__1;
G__10186.cljs$core$IFn$_invoke$arity$2 = G__10186__2;
G__10186.cljs$core$IFn$_invoke$arity$3 = G__10186__3;
G__10186.cljs$core$IFn$_invoke$arity$variadic = G__10186__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10186;
})()
});
var juxt__4 = (function() { 
var G__10192__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10193 = null;
var G__10193__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10080_SHARP_,p2__10081_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10080_SHARP_,(function (){return (p2__10081_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10081_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10081_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10193__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10082_SHARP_,p2__10083_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10082_SHARP_,(function (){var G__10168 = x;
return (p2__10083_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10083_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10168) : p2__10083_SHARP_.call(null,G__10168));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10193__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10084_SHARP_,p2__10085_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10084_SHARP_,(function (){var G__10169 = x;
var G__10170 = y;
return (p2__10085_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10085_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10169,G__10170) : p2__10085_SHARP_.call(null,G__10169,G__10170));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10193__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10086_SHARP_,p2__10087_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10086_SHARP_,(function (){var G__10171 = x;
var G__10172 = y;
var G__10173 = z;
return (p2__10087_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10087_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10171,G__10172,G__10173) : p2__10087_SHARP_.call(null,G__10171,G__10172,G__10173));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10193__4 = (function() { 
var G__10194__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10088_SHARP_,p2__10089_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10088_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10089_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10194 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10195__i = 0, G__10195__a = new Array(arguments.length -  3);
while (G__10195__i < G__10195__a.length) {G__10195__a[G__10195__i] = arguments[G__10195__i + 3]; ++G__10195__i;}
  args = new cljs.core.IndexedSeq(G__10195__a,0);
} 
return G__10194__delegate.call(this,x,y,z,args);};
G__10194.cljs$lang$maxFixedArity = 3;
G__10194.cljs$lang$applyTo = (function (arglist__10196){
var x = cljs.core.first(arglist__10196);
arglist__10196 = cljs.core.next(arglist__10196);
var y = cljs.core.first(arglist__10196);
arglist__10196 = cljs.core.next(arglist__10196);
var z = cljs.core.first(arglist__10196);
var args = cljs.core.rest(arglist__10196);
return G__10194__delegate(x,y,z,args);
});
G__10194.cljs$core$IFn$_invoke$arity$variadic = G__10194__delegate;
return G__10194;
})()
;
G__10193 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10193__0.call(this);
case 1:
return G__10193__1.call(this,x);
case 2:
return G__10193__2.call(this,x,y);
case 3:
return G__10193__3.call(this,x,y,z);
default:
var G__10197 = null;
if (arguments.length > 3) {
var G__10198__i = 0, G__10198__a = new Array(arguments.length -  3);
while (G__10198__i < G__10198__a.length) {G__10198__a[G__10198__i] = arguments[G__10198__i + 3]; ++G__10198__i;}
G__10197 = new cljs.core.IndexedSeq(G__10198__a,0);
}
return G__10193__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10193.cljs$lang$maxFixedArity = 3;
G__10193.cljs$lang$applyTo = G__10193__4.cljs$lang$applyTo;
G__10193.cljs$core$IFn$_invoke$arity$0 = G__10193__0;
G__10193.cljs$core$IFn$_invoke$arity$1 = G__10193__1;
G__10193.cljs$core$IFn$_invoke$arity$2 = G__10193__2;
G__10193.cljs$core$IFn$_invoke$arity$3 = G__10193__3;
G__10193.cljs$core$IFn$_invoke$arity$variadic = G__10193__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10193;
})()
;})(fs__$1))
};
var G__10192 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10199__i = 0, G__10199__a = new Array(arguments.length -  3);
while (G__10199__i < G__10199__a.length) {G__10199__a[G__10199__i] = arguments[G__10199__i + 3]; ++G__10199__i;}
  fs = new cljs.core.IndexedSeq(G__10199__a,0);
} 
return G__10192__delegate.call(this,f,g,h,fs);};
G__10192.cljs$lang$maxFixedArity = 3;
G__10192.cljs$lang$applyTo = (function (arglist__10200){
var f = cljs.core.first(arglist__10200);
arglist__10200 = cljs.core.next(arglist__10200);
var g = cljs.core.first(arglist__10200);
arglist__10200 = cljs.core.next(arglist__10200);
var h = cljs.core.first(arglist__10200);
var fs = cljs.core.rest(arglist__10200);
return G__10192__delegate(f,g,h,fs);
});
G__10192.cljs$core$IFn$_invoke$arity$variadic = G__10192__delegate;
return G__10192;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10201 = null;
if (arguments.length > 3) {
var G__10202__i = 0, G__10202__a = new Array(arguments.length -  3);
while (G__10202__i < G__10202__a.length) {G__10202__a[G__10202__i] = arguments[G__10202__i + 3]; ++G__10202__i;}
G__10201 = new cljs.core.IndexedSeq(G__10202__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10203 = cljs.core.next(coll);
coll = G__10203;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10204 = (n - (1));
var G__10205 = cljs.core.next(coll);
n = G__10204;
coll = G__10205;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10209 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10209,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10209,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10209,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10217 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__10218_10224 = cljs.core.first(coll);
var G__10219_10225 = writer;
var G__10220_10226 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10218_10224,G__10219_10225,G__10220_10226) : print_one.call(null,G__10218_10224,G__10219_10225,G__10220_10226));
} else {
}

var coll_10227__$1 = cljs.core.next(coll);
var n_10228 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10227__$1) && (((n_10228 == null)) || (!((n_10228 === (0)))))){
cljs.core._write(writer,sep);

var G__10221_10229 = cljs.core.first(coll_10227__$1);
var G__10222_10230 = writer;
var G__10223_10231 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10221_10229,G__10222_10230,G__10223_10231) : print_one.call(null,G__10221_10229,G__10222_10230,G__10223_10231));

var G__10232 = cljs.core.next(coll_10227__$1);
var G__10233 = (n_10228 - (1));
coll_10227__$1 = G__10232;
n_10228 = G__10233;
continue;
} else {
if((cljs.core.seq(coll_10227__$1)) && ((n_10228 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10217;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10238 = cljs.core.seq(ss);
var chunk__10239 = null;
var count__10240 = (0);
var i__10241 = (0);
while(true){
if((i__10241 < count__10240)){
var s = chunk__10239.cljs$core$IIndexed$_nth$arity$2(null,i__10241);
cljs.core._write(writer,s);

var G__10242 = seq__10238;
var G__10243 = chunk__10239;
var G__10244 = count__10240;
var G__10245 = (i__10241 + (1));
seq__10238 = G__10242;
chunk__10239 = G__10243;
count__10240 = G__10244;
i__10241 = G__10245;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10238);
if(temp__4126__auto__){
var seq__10238__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10238__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__10238__$1);
var G__10246 = cljs.core.chunk_rest(seq__10238__$1);
var G__10247 = c__4716__auto__;
var G__10248 = cljs.core.count(c__4716__auto__);
var G__10249 = (0);
seq__10238 = G__10246;
chunk__10239 = G__10247;
count__10240 = G__10248;
i__10241 = G__10249;
continue;
} else {
var s = cljs.core.first(seq__10238__$1);
cljs.core._write(writer,s);

var G__10250 = cljs.core.next(seq__10238__$1);
var G__10251 = null;
var G__10252 = (0);
var G__10253 = (0);
seq__10238 = G__10250;
chunk__10239 = G__10251;
count__10240 = G__10252;
i__10241 = G__10253;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10254__i = 0, G__10254__a = new Array(arguments.length -  1);
while (G__10254__i < G__10254__a.length) {G__10254__a[G__10254__i] = arguments[G__10254__i + 1]; ++G__10254__i;}
  ss = new cljs.core.IndexedSeq(G__10254__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10255){
var writer = cljs.core.first(arglist__10255);
var ss = cljs.core.rest(arglist__10255);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10257 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10257;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10260 = "[\\\\\"\b\f\n\r\t]";
var G__10261 = "g";
return RegExp(G__10260,G__10261);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__10275 = obj;
if(G__10275){
var bit__4610__auto__ = (G__10275.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4610__auto__) || (G__10275.cljs$core$IMeta$)){
return true;
} else {
if((!G__10275.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10275);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10275);
}
})();
if(and__3917__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10276 = obj;
if(G__10276){
var bit__4603__auto__ = (G__10276.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4603__auto__) || (G__10276.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10277 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10278 = pr_writer;
var G__10279 = writer;
var G__10280 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10277,G__10278,G__10279,G__10280) : cljs.core.print_map.call(null,G__10277,G__10278,G__10279,G__10280));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10281 = obj;
return goog.isString(G__10281);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10283 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10283;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10282 = obj;
if(G__10282){
var bit__4610__auto__ = (G__10282.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4610__auto__) || (G__10282.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10282.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10282);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10282);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10288 = cljs.core.seq(cljs.core.next(objs));
var chunk__10289 = null;
var count__10290 = (0);
var i__10291 = (0);
while(true){
if((i__10291 < count__10290)){
var obj = chunk__10289.cljs$core$IIndexed$_nth$arity$2(null,i__10291);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10292 = seq__10288;
var G__10293 = chunk__10289;
var G__10294 = count__10290;
var G__10295 = (i__10291 + (1));
seq__10288 = G__10292;
chunk__10289 = G__10293;
count__10290 = G__10294;
i__10291 = G__10295;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10288);
if(temp__4126__auto__){
var seq__10288__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10288__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__10288__$1);
var G__10296 = cljs.core.chunk_rest(seq__10288__$1);
var G__10297 = c__4716__auto__;
var G__10298 = cljs.core.count(c__4716__auto__);
var G__10299 = (0);
seq__10288 = G__10296;
chunk__10289 = G__10297;
count__10290 = G__10298;
i__10291 = G__10299;
continue;
} else {
var obj = cljs.core.first(seq__10288__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10300 = cljs.core.next(seq__10288__$1);
var G__10301 = null;
var G__10302 = (0);
var G__10303 = (0);
seq__10288 = G__10300;
chunk__10289 = G__10301;
count__10290 = G__10302;
i__10291 = G__10303;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10304__i = 0, G__10304__a = new Array(arguments.length -  0);
while (G__10304__i < G__10304__a.length) {G__10304__a[G__10304__i] = arguments[G__10304__i + 0]; ++G__10304__i;}
  objs = new cljs.core.IndexedSeq(G__10304__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10305){
var objs = cljs.core.seq(arglist__10305);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10306__i = 0, G__10306__a = new Array(arguments.length -  0);
while (G__10306__i < G__10306__a.length) {G__10306__a[G__10306__i] = arguments[G__10306__i + 0]; ++G__10306__i;}
  objs = new cljs.core.IndexedSeq(G__10306__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10307){
var objs = cljs.core.seq(arglist__10307);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10308__i = 0, G__10308__a = new Array(arguments.length -  0);
while (G__10308__i < G__10308__a.length) {G__10308__a[G__10308__i] = arguments[G__10308__i + 0]; ++G__10308__i;}
  objs = new cljs.core.IndexedSeq(G__10308__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10309){
var objs = cljs.core.seq(arglist__10309);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10310__i = 0, G__10310__a = new Array(arguments.length -  0);
while (G__10310__i < G__10310__a.length) {G__10310__a[G__10310__i] = arguments[G__10310__i + 0]; ++G__10310__i;}
  objs = new cljs.core.IndexedSeq(G__10310__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10311){
var objs = cljs.core.seq(arglist__10311);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10312__i = 0, G__10312__a = new Array(arguments.length -  0);
while (G__10312__i < G__10312__a.length) {G__10312__a[G__10312__i] = arguments[G__10312__i + 0]; ++G__10312__i;}
  objs = new cljs.core.IndexedSeq(G__10312__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10313){
var objs = cljs.core.seq(arglist__10313);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10314__i = 0, G__10314__a = new Array(arguments.length -  0);
while (G__10314__i < G__10314__a.length) {G__10314__a[G__10314__i] = arguments[G__10314__i + 0]; ++G__10314__i;}
  objs = new cljs.core.IndexedSeq(G__10314__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10315){
var objs = cljs.core.seq(arglist__10315);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10316__i = 0, G__10316__a = new Array(arguments.length -  0);
while (G__10316__i < G__10316__a.length) {G__10316__a[G__10316__i] = arguments[G__10316__i + 0]; ++G__10316__i;}
  objs = new cljs.core.IndexedSeq(G__10316__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10317){
var objs = cljs.core.seq(arglist__10317);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10318__i = 0, G__10318__a = new Array(arguments.length -  0);
while (G__10318__i < G__10318__a.length) {G__10318__a[G__10318__i] = arguments[G__10318__i + 0]; ++G__10318__i;}
  objs = new cljs.core.IndexedSeq(G__10318__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10319){
var objs = cljs.core.seq(arglist__10319);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10326_10332 = cljs.core.key(e);
var G__10327_10333 = w;
var G__10328_10334 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10326_10332,G__10327_10333,G__10328_10334) : print_one.call(null,G__10326_10332,G__10327_10333,G__10328_10334));

cljs.core._write(w," ");

var G__10329 = cljs.core.val(e);
var G__10330 = w;
var G__10331 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10329,G__10330,G__10331) : print_one.call(null,G__10329,G__10330,G__10331));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10335__i = 0, G__10335__a = new Array(arguments.length -  2);
while (G__10335__i < G__10335__a.length) {G__10335__a[G__10335__i] = arguments[G__10335__i + 2]; ++G__10335__i;}
  args = new cljs.core.IndexedSeq(G__10335__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10336){
var iref = cljs.core.first(arglist__10336);
arglist__10336 = cljs.core.next(arglist__10336);
var f = cljs.core.first(arglist__10336);
var args = cljs.core.rest(arglist__10336);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10339 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10339) : cljs.core.atom.call(null,G__10339));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10341 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10341) : cljs.core.deref.call(null,G__10341));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10342_SHARP_,p2__10343_SHARP_){
var ret = (function (){var G__10346 = p1__10342_SHARP_;
var G__10347 = p2__10343_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10346,G__10347) : rf.call(null,G__10346,G__10347));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10350 = null;
var G__10350__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10350__1 = (function (result){
var G__10349 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10349) : rf.call(null,G__10349));
});
var G__10350__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10350 = function(result,input){
switch(arguments.length){
case 0:
return G__10350__0.call(this);
case 1:
return G__10350__1.call(this,result);
case 2:
return G__10350__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10350.cljs$core$IFn$_invoke$arity$0 = G__10350__0;
G__10350.cljs$core$IFn$_invoke$arity$1 = G__10350__1;
G__10350.cljs$core$IFn$_invoke$arity$2 = G__10350__2;
return G__10350;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10359 = null;
var G__10359__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10359__1 = (function (result){
var G__10355 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10355) : rf.call(null,G__10355));
});
var G__10359__2 = (function (result,input){
var prior = (function (){var G__10356 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10356) : cljs.core.deref.call(null,G__10356));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10357 = result;
var G__10358 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10357,G__10358) : rf.call(null,G__10357,G__10358));
}
});
G__10359 = function(result,input){
switch(arguments.length){
case 0:
return G__10359__0.call(this);
case 1:
return G__10359__1.call(this,result);
case 2:
return G__10359__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10359.cljs$core$IFn$_invoke$arity$0 = G__10359__0;
G__10359.cljs$core$IFn$_invoke$arity$1 = G__10359__1;
G__10359.cljs$core$IFn$_invoke$arity$2 = G__10359__2;
return G__10359;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10361_SHARP_,p2__10360_SHARP_){
var G__10363 = p2__10360_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10363) : proc.call(null,G__10363));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10365 = {};
return obj10365;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._clj__GT_js[(function (){var G__10369 = x__4573__auto__;
return goog.typeOf(G__10369);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._key__GT_js[(function (){var G__10373 = x__4573__auto__;
return goog.typeOf(G__10373);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10376 = k;
if(G__10376){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__10376.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10376.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10376);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10376);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10377 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10377) : cljs.core.clj__GT_js.call(null,G__10377));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10393 = x;
if(G__10393){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__10393.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10393.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10393);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10393);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10395 = {};
return obj10395;
})();
var seq__10396_10406 = cljs.core.seq(x);
var chunk__10397_10407 = null;
var count__10398_10408 = (0);
var i__10399_10409 = (0);
while(true){
if((i__10399_10409 < count__10398_10408)){
var vec__10400_10410 = chunk__10397_10407.cljs$core$IIndexed$_nth$arity$2(null,i__10399_10409);
var k_10411 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10400_10410,(0),null);
var v_10412 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10400_10410,(1),null);
(m[cljs.core.key__GT_js(k_10411)] = clj__GT_js(v_10412));

var G__10413 = seq__10396_10406;
var G__10414 = chunk__10397_10407;
var G__10415 = count__10398_10408;
var G__10416 = (i__10399_10409 + (1));
seq__10396_10406 = G__10413;
chunk__10397_10407 = G__10414;
count__10398_10408 = G__10415;
i__10399_10409 = G__10416;
continue;
} else {
var temp__4126__auto___10417 = cljs.core.seq(seq__10396_10406);
if(temp__4126__auto___10417){
var seq__10396_10418__$1 = temp__4126__auto___10417;
if(cljs.core.chunked_seq_QMARK_(seq__10396_10418__$1)){
var c__4716__auto___10419 = cljs.core.chunk_first(seq__10396_10418__$1);
var G__10420 = cljs.core.chunk_rest(seq__10396_10418__$1);
var G__10421 = c__4716__auto___10419;
var G__10422 = cljs.core.count(c__4716__auto___10419);
var G__10423 = (0);
seq__10396_10406 = G__10420;
chunk__10397_10407 = G__10421;
count__10398_10408 = G__10422;
i__10399_10409 = G__10423;
continue;
} else {
var vec__10401_10424 = cljs.core.first(seq__10396_10418__$1);
var k_10425 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10401_10424,(0),null);
var v_10426 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10401_10424,(1),null);
(m[cljs.core.key__GT_js(k_10425)] = clj__GT_js(v_10426));

var G__10427 = cljs.core.next(seq__10396_10418__$1);
var G__10428 = null;
var G__10429 = (0);
var G__10430 = (0);
seq__10396_10406 = G__10427;
chunk__10397_10407 = G__10428;
count__10398_10408 = G__10429;
i__10399_10409 = G__10430;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10402_10431 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10403_10432 = null;
var count__10404_10433 = (0);
var i__10405_10434 = (0);
while(true){
if((i__10405_10434 < count__10404_10433)){
var x_10435__$1 = chunk__10403_10432.cljs$core$IIndexed$_nth$arity$2(null,i__10405_10434);
arr.push(x_10435__$1);

var G__10436 = seq__10402_10431;
var G__10437 = chunk__10403_10432;
var G__10438 = count__10404_10433;
var G__10439 = (i__10405_10434 + (1));
seq__10402_10431 = G__10436;
chunk__10403_10432 = G__10437;
count__10404_10433 = G__10438;
i__10405_10434 = G__10439;
continue;
} else {
var temp__4126__auto___10440 = cljs.core.seq(seq__10402_10431);
if(temp__4126__auto___10440){
var seq__10402_10441__$1 = temp__4126__auto___10440;
if(cljs.core.chunked_seq_QMARK_(seq__10402_10441__$1)){
var c__4716__auto___10442 = cljs.core.chunk_first(seq__10402_10441__$1);
var G__10443 = cljs.core.chunk_rest(seq__10402_10441__$1);
var G__10444 = c__4716__auto___10442;
var G__10445 = cljs.core.count(c__4716__auto___10442);
var G__10446 = (0);
seq__10402_10431 = G__10443;
chunk__10403_10432 = G__10444;
count__10404_10433 = G__10445;
i__10405_10434 = G__10446;
continue;
} else {
var x_10447__$1 = cljs.core.first(seq__10402_10441__$1);
arr.push(x_10447__$1);

var G__10448 = cljs.core.next(seq__10402_10441__$1);
var G__10449 = null;
var G__10450 = (0);
var G__10451 = (0);
seq__10402_10431 = G__10448;
chunk__10403_10432 = G__10449;
count__10404_10433 = G__10450;
i__10405_10434 = G__10451;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10453 = {};
return obj10453;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._js__GT_clj[(function (){var G__10457 = x__4573__auto__;
return goog.typeOf(G__10457);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10514__delegate = function (x,opts){
var map__10487 = opts;
var map__10487__$1 = ((cljs.core.seq_QMARK_(map__10487))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10487):map__10487);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10487__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10487,map__10487__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10503 = x__$1;
if(G__10503){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__10503.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10503.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10503);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4685__auto__ = ((function (map__10487,map__10487__$1,keywordize_keys,keyfn){
return (function iter__10504(s__10505){
return (new cljs.core.LazySeq(null,((function (map__10487,map__10487__$1,keywordize_keys,keyfn){
return (function (){
var s__10505__$1 = s__10505;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10505__$1);
if(temp__4126__auto__){
var s__10505__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10505__$2)){
var c__4683__auto__ = cljs.core.chunk_first(s__10505__$2);
var size__4684__auto__ = cljs.core.count(c__4683__auto__);
var b__10507 = cljs.core.chunk_buffer(size__4684__auto__);
if((function (){var i__10506 = (0);
while(true){
if((i__10506 < size__4684__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4683__auto__,i__10506);
cljs.core.chunk_append(b__10507,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10512 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10512) : keyfn.call(null,G__10512));
})(),thisfn((x__$1[k]))], null));

var G__10515 = (i__10506 + (1));
i__10506 = G__10515;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10507),iter__10504(cljs.core.chunk_rest(s__10505__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10507),null);
}
} else {
var k = cljs.core.first(s__10505__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10513 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10513) : keyfn.call(null,G__10513));
})(),thisfn((x__$1[k]))], null),iter__10504(cljs.core.rest(s__10505__$2)));
}
} else {
return null;
}
break;
}
});})(map__10487,map__10487__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10487,map__10487__$1,keywordize_keys,keyfn))
;
return iter__4685__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10487,map__10487__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10514 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10516__i = 0, G__10516__a = new Array(arguments.length -  1);
while (G__10516__i < G__10516__a.length) {G__10516__a[G__10516__i] = arguments[G__10516__i + 1]; ++G__10516__i;}
  opts = new cljs.core.IndexedSeq(G__10516__a,0);
} 
return G__10514__delegate.call(this,x,opts);};
G__10514.cljs$lang$maxFixedArity = 1;
G__10514.cljs$lang$applyTo = (function (arglist__10517){
var x = cljs.core.first(arglist__10517);
var opts = cljs.core.rest(arglist__10517);
return G__10514__delegate(x,opts);
});
G__10514.cljs$core$IFn$_invoke$arity$variadic = G__10514__delegate;
return G__10514;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10518 = null;
if (arguments.length > 1) {
var G__10519__i = 0, G__10519__a = new Array(arguments.length -  1);
while (G__10519__i < G__10519__a.length) {G__10519__a[G__10519__i] = arguments[G__10519__i + 1]; ++G__10519__i;}
G__10518 = new cljs.core.IndexedSeq(G__10519__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10522 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10522) : cljs.core.atom.call(null,G__10522));
})();
return ((function (mem){
return (function() { 
var G__10524__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10523 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10523) : cljs.core.deref.call(null,G__10523));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10524 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10525__i = 0, G__10525__a = new Array(arguments.length -  0);
while (G__10525__i < G__10525__a.length) {G__10525__a[G__10525__i] = arguments[G__10525__i + 0]; ++G__10525__i;}
  args = new cljs.core.IndexedSeq(G__10525__a,0);
} 
return G__10524__delegate.call(this,args);};
G__10524.cljs$lang$maxFixedArity = 0;
G__10524.cljs$lang$applyTo = (function (arglist__10526){
var args = cljs.core.seq(arglist__10526);
return G__10524__delegate(args);
});
G__10524.cljs$core$IFn$_invoke$arity$variadic = G__10524__delegate;
return G__10524;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10528 = ret;
f = G__10528;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10529__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10529 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10530__i = 0, G__10530__a = new Array(arguments.length -  1);
while (G__10530__i < G__10530__a.length) {G__10530__a[G__10530__i] = arguments[G__10530__i + 1]; ++G__10530__i;}
  args = new cljs.core.IndexedSeq(G__10530__a,0);
} 
return G__10529__delegate.call(this,f,args);};
G__10529.cljs$lang$maxFixedArity = 1;
G__10529.cljs$lang$applyTo = (function (arglist__10531){
var f = cljs.core.first(arglist__10531);
var args = cljs.core.rest(arglist__10531);
return G__10529__delegate(f,args);
});
G__10529.cljs$core$IFn$_invoke$arity$variadic = G__10529__delegate;
return G__10529;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10532 = null;
if (arguments.length > 1) {
var G__10533__i = 0, G__10533__a = new Array(arguments.length -  1);
while (G__10533__i < G__10533__a.length) {G__10533__a[G__10533__i] = arguments[G__10533__i + 1]; ++G__10533__i;}
G__10532 = new cljs.core.IndexedSeq(G__10533__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10536 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10536) : Math.floor.call(null,G__10536));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10538 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10538) : f.call(null,G__10538));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10540 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10540) : cljs.core.atom.call(null,G__10540));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10541__i = 0, G__10541__a = new Array(arguments.length -  1);
while (G__10541__i < G__10541__a.length) {G__10541__a[G__10541__i] = arguments[G__10541__i + 1]; ++G__10541__i;}
  args = new cljs.core.IndexedSeq(G__10541__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10542){
var f = cljs.core.first(arglist__10542);
var args = cljs.core.rest(arglist__10542);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10607 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10607) : cljs.core.deref.call(null,G__10607));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3929__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
var and__3917__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3917__auto__){
var and__3917__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3917__auto____$1){
var and__3917__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3917__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10632 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10630 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10630) : child.call(null,G__10630));
})(),(function (){var G__10631 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10631) : parent.call(null,G__10631));
})());
var G__10633 = (i + (1));
ret = G__10632;
i = G__10633;
continue;
}
break;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10637 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10637) : cljs.core.deref.call(null,G__10637));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10641 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10641) : cljs.core.deref.call(null,G__10641));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__10645 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10645) : cljs.core.deref.call(null,G__10645));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__10654 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10654) : targets.call(null,G__10654));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__10655 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10655) : sources.call(null,G__10655));
})()));
});})(tp,td,ta))
;
var or__3929__auto__ = ((cljs.core.contains_QMARK_((function (){var G__10659 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10659) : tp.call(null,G__10659));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__10660 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10660) : ta.call(null,G__10660));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__10661 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10661) : ta.call(null,G__10661));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__10668 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10668) : parentMap.call(null,G__10668));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__10669 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10669) : parentMap.call(null,G__10669));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__10662_SHARP_){
return cljs.core.cons(cljs.core.first(p1__10662_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10662_SHARP_),cljs.core.second(p1__10662_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__10670 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10670) : parentMap.call(null,G__10670));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__10663_SHARP_,p2__10664_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__10663_SHARP_,p2__10664_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__10673 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10673) : cljs.core.deref.call(null,G__10673));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__10674 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10674) : cljs.core.deref.call(null,G__10674));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__10690 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10690) : cljs.core.deref.call(null,G__10690));
})().call(null,x);
var or__3929__auto__ = (cljs.core.truth_((function (){var and__3917__auto__ = xprefs;
if(cljs.core.truth_(and__3917__auto__)){
var G__10692 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10692) : xprefs.call(null,G__10692));
} else {
return and__3917__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__10693 = cljs.core.rest(ps);
ps = G__10693;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__10694 = cljs.core.rest(ps);
ps = G__10694;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3929__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__10708){
var vec__10709 = p__10708;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10709,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10709,(1),null);
var e = vec__10709;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10710 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10710) : cljs.core.deref.call(null,G__10710));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3929__auto__ = (be == null);
if(or__3929__auto__){
return or__3929__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__10711 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10711) : cljs.core.deref.call(null,G__10711));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10712 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10712) : cljs.core.deref.call(null,G__10712));
})(),(function (){var G__10713 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10713) : cljs.core.deref.call(null,G__10713));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj10715 = {};
return obj10715;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._reset[(function (){var G__10719 = x__4573__auto__;
return goog.typeOf(G__10719);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reset["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._add_method[(function (){var G__10723 = x__4573__auto__;
return goog.typeOf(G__10723);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._add_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._remove_method[(function (){var G__10727 = x__4573__auto__;
return goog.typeOf(G__10727);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._prefer_method[(function (){var G__10731 = x__4573__auto__;
return goog.typeOf(G__10731);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._get_method[(function (){var G__10735 = x__4573__auto__;
return goog.typeOf(G__10735);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._get_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._methods[(function (){var G__10739 = x__4573__auto__;
return goog.typeOf(G__10739);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._methods["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._prefers[(function (){var G__10743 = x__4573__auto__;
return goog.typeOf(G__10743);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._prefers["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10745 = this$__$1;
return goog.getUid(G__10745);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10746 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10746) : cljs.core.deref.call(null,G__10746));
})(),(function (){var G__10747 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10747) : cljs.core.deref.call(null,G__10747));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__10748 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10748) : cljs.core.deref.call(null,G__10748));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__10749 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10749) : cljs.core.deref.call(null,G__10749));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10750 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10750) : cljs.core.deref.call(null,G__10750));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10751 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10751) : cljs.core.deref.call(null,G__10751));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11592 = null;
var G__11592__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11592__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10752 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10752) : self__.dispatch_fn.call(null,G__10752));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10753 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10753) : target_fn.call(null,G__10753));
});
var G__11592__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10754 = a;
var G__10755 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10754,G__10755) : self__.dispatch_fn.call(null,G__10754,G__10755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10756 = a;
var G__10757 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10756,G__10757) : target_fn.call(null,G__10756,G__10757));
});
var G__11592__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10758 = a;
var G__10759 = b;
var G__10760 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10758,G__10759,G__10760) : self__.dispatch_fn.call(null,G__10758,G__10759,G__10760));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10761 = a;
var G__10762 = b;
var G__10763 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10761,G__10762,G__10763) : target_fn.call(null,G__10761,G__10762,G__10763));
});
var G__11592__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10764 = a;
var G__10765 = b;
var G__10766 = c;
var G__10767 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10764,G__10765,G__10766,G__10767) : self__.dispatch_fn.call(null,G__10764,G__10765,G__10766,G__10767));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10768 = a;
var G__10769 = b;
var G__10770 = c;
var G__10771 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10768,G__10769,G__10770,G__10771) : target_fn.call(null,G__10768,G__10769,G__10770,G__10771));
});
var G__11592__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10772 = a;
var G__10773 = b;
var G__10774 = c;
var G__10775 = d;
var G__10776 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10772,G__10773,G__10774,G__10775,G__10776) : self__.dispatch_fn.call(null,G__10772,G__10773,G__10774,G__10775,G__10776));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10777 = a;
var G__10778 = b;
var G__10779 = c;
var G__10780 = d;
var G__10781 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10777,G__10778,G__10779,G__10780,G__10781) : target_fn.call(null,G__10777,G__10778,G__10779,G__10780,G__10781));
});
var G__11592__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10782 = a;
var G__10783 = b;
var G__10784 = c;
var G__10785 = d;
var G__10786 = e;
var G__10787 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10782,G__10783,G__10784,G__10785,G__10786,G__10787) : self__.dispatch_fn.call(null,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10788 = a;
var G__10789 = b;
var G__10790 = c;
var G__10791 = d;
var G__10792 = e;
var G__10793 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10788,G__10789,G__10790,G__10791,G__10792,G__10793) : target_fn.call(null,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793));
});
var G__11592__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10794 = a;
var G__10795 = b;
var G__10796 = c;
var G__10797 = d;
var G__10798 = e;
var G__10799 = f;
var G__10800 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800) : self__.dispatch_fn.call(null,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10801 = a;
var G__10802 = b;
var G__10803 = c;
var G__10804 = d;
var G__10805 = e;
var G__10806 = f;
var G__10807 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807) : target_fn.call(null,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807));
});
var G__11592__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10808 = a;
var G__10809 = b;
var G__10810 = c;
var G__10811 = d;
var G__10812 = e;
var G__10813 = f;
var G__10814 = g;
var G__10815 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815) : self__.dispatch_fn.call(null,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10816 = a;
var G__10817 = b;
var G__10818 = c;
var G__10819 = d;
var G__10820 = e;
var G__10821 = f;
var G__10822 = g;
var G__10823 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823) : target_fn.call(null,G__10816,G__10817,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823));
});
var G__11592__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10824 = a;
var G__10825 = b;
var G__10826 = c;
var G__10827 = d;
var G__10828 = e;
var G__10829 = f;
var G__10830 = g;
var G__10831 = h;
var G__10832 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832) : self__.dispatch_fn.call(null,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10833 = a;
var G__10834 = b;
var G__10835 = c;
var G__10836 = d;
var G__10837 = e;
var G__10838 = f;
var G__10839 = g;
var G__10840 = h;
var G__10841 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841) : target_fn.call(null,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839,G__10840,G__10841));
});
var G__11592__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10842 = a;
var G__10843 = b;
var G__10844 = c;
var G__10845 = d;
var G__10846 = e;
var G__10847 = f;
var G__10848 = g;
var G__10849 = h;
var G__10850 = i;
var G__10851 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851) : self__.dispatch_fn.call(null,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10852 = a;
var G__10853 = b;
var G__10854 = c;
var G__10855 = d;
var G__10856 = e;
var G__10857 = f;
var G__10858 = g;
var G__10859 = h;
var G__10860 = i;
var G__10861 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861) : target_fn.call(null,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861));
});
var G__11592__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10862 = a;
var G__10863 = b;
var G__10864 = c;
var G__10865 = d;
var G__10866 = e;
var G__10867 = f;
var G__10868 = g;
var G__10869 = h;
var G__10870 = i;
var G__10871 = j;
var G__10872 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872) : self__.dispatch_fn.call(null,G__10862,G__10863,G__10864,G__10865,G__10866,G__10867,G__10868,G__10869,G__10870,G__10871,G__10872));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10873 = a;
var G__10874 = b;
var G__10875 = c;
var G__10876 = d;
var G__10877 = e;
var G__10878 = f;
var G__10879 = g;
var G__10880 = h;
var G__10881 = i;
var G__10882 = j;
var G__10883 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883) : target_fn.call(null,G__10873,G__10874,G__10875,G__10876,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882,G__10883));
});
var G__11592__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10884 = a;
var G__10885 = b;
var G__10886 = c;
var G__10887 = d;
var G__10888 = e;
var G__10889 = f;
var G__10890 = g;
var G__10891 = h;
var G__10892 = i;
var G__10893 = j;
var G__10894 = k;
var G__10895 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895) : self__.dispatch_fn.call(null,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10896 = a;
var G__10897 = b;
var G__10898 = c;
var G__10899 = d;
var G__10900 = e;
var G__10901 = f;
var G__10902 = g;
var G__10903 = h;
var G__10904 = i;
var G__10905 = j;
var G__10906 = k;
var G__10907 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907) : target_fn.call(null,G__10896,G__10897,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906,G__10907));
});
var G__11592__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10908 = a;
var G__10909 = b;
var G__10910 = c;
var G__10911 = d;
var G__10912 = e;
var G__10913 = f;
var G__10914 = g;
var G__10915 = h;
var G__10916 = i;
var G__10917 = j;
var G__10918 = k;
var G__10919 = l;
var G__10920 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920) : self__.dispatch_fn.call(null,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916,G__10917,G__10918,G__10919,G__10920));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10921 = a;
var G__10922 = b;
var G__10923 = c;
var G__10924 = d;
var G__10925 = e;
var G__10926 = f;
var G__10927 = g;
var G__10928 = h;
var G__10929 = i;
var G__10930 = j;
var G__10931 = k;
var G__10932 = l;
var G__10933 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933) : target_fn.call(null,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933));
});
var G__11592__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10934 = a;
var G__10935 = b;
var G__10936 = c;
var G__10937 = d;
var G__10938 = e;
var G__10939 = f;
var G__10940 = g;
var G__10941 = h;
var G__10942 = i;
var G__10943 = j;
var G__10944 = k;
var G__10945 = l;
var G__10946 = m;
var G__10947 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947) : self__.dispatch_fn.call(null,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10948 = a;
var G__10949 = b;
var G__10950 = c;
var G__10951 = d;
var G__10952 = e;
var G__10953 = f;
var G__10954 = g;
var G__10955 = h;
var G__10956 = i;
var G__10957 = j;
var G__10958 = k;
var G__10959 = l;
var G__10960 = m;
var G__10961 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961) : target_fn.call(null,G__10948,G__10949,G__10950,G__10951,G__10952,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961));
});
var G__11592__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10962 = a;
var G__10963 = b;
var G__10964 = c;
var G__10965 = d;
var G__10966 = e;
var G__10967 = f;
var G__10968 = g;
var G__10969 = h;
var G__10970 = i;
var G__10971 = j;
var G__10972 = k;
var G__10973 = l;
var G__10974 = m;
var G__10975 = n;
var G__10976 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976) : self__.dispatch_fn.call(null,G__10962,G__10963,G__10964,G__10965,G__10966,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10977 = a;
var G__10978 = b;
var G__10979 = c;
var G__10980 = d;
var G__10981 = e;
var G__10982 = f;
var G__10983 = g;
var G__10984 = h;
var G__10985 = i;
var G__10986 = j;
var G__10987 = k;
var G__10988 = l;
var G__10989 = m;
var G__10990 = n;
var G__10991 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991) : target_fn.call(null,G__10977,G__10978,G__10979,G__10980,G__10981,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991));
});
var G__11592__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10992 = a;
var G__10993 = b;
var G__10994 = c;
var G__10995 = d;
var G__10996 = e;
var G__10997 = f;
var G__10998 = g;
var G__10999 = h;
var G__11000 = i;
var G__11001 = j;
var G__11002 = k;
var G__11003 = l;
var G__11004 = m;
var G__11005 = n;
var G__11006 = o;
var G__11007 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007) : self__.dispatch_fn.call(null,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11008 = a;
var G__11009 = b;
var G__11010 = c;
var G__11011 = d;
var G__11012 = e;
var G__11013 = f;
var G__11014 = g;
var G__11015 = h;
var G__11016 = i;
var G__11017 = j;
var G__11018 = k;
var G__11019 = l;
var G__11020 = m;
var G__11021 = n;
var G__11022 = o;
var G__11023 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023) : target_fn.call(null,G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023));
});
var G__11592__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11024 = a;
var G__11025 = b;
var G__11026 = c;
var G__11027 = d;
var G__11028 = e;
var G__11029 = f;
var G__11030 = g;
var G__11031 = h;
var G__11032 = i;
var G__11033 = j;
var G__11034 = k;
var G__11035 = l;
var G__11036 = m;
var G__11037 = n;
var G__11038 = o;
var G__11039 = p;
var G__11040 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11024,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040) : self__.dispatch_fn.call(null,G__11024,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11041 = a;
var G__11042 = b;
var G__11043 = c;
var G__11044 = d;
var G__11045 = e;
var G__11046 = f;
var G__11047 = g;
var G__11048 = h;
var G__11049 = i;
var G__11050 = j;
var G__11051 = k;
var G__11052 = l;
var G__11053 = m;
var G__11054 = n;
var G__11055 = o;
var G__11056 = p;
var G__11057 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057) : target_fn.call(null,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057));
});
var G__11592__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11058 = a;
var G__11059 = b;
var G__11060 = c;
var G__11061 = d;
var G__11062 = e;
var G__11063 = f;
var G__11064 = g;
var G__11065 = h;
var G__11066 = i;
var G__11067 = j;
var G__11068 = k;
var G__11069 = l;
var G__11070 = m;
var G__11071 = n;
var G__11072 = o;
var G__11073 = p;
var G__11074 = q;
var G__11075 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074,G__11075) : self__.dispatch_fn.call(null,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071,G__11072,G__11073,G__11074,G__11075));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11076 = a;
var G__11077 = b;
var G__11078 = c;
var G__11079 = d;
var G__11080 = e;
var G__11081 = f;
var G__11082 = g;
var G__11083 = h;
var G__11084 = i;
var G__11085 = j;
var G__11086 = k;
var G__11087 = l;
var G__11088 = m;
var G__11089 = n;
var G__11090 = o;
var G__11091 = p;
var G__11092 = q;
var G__11093 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093) : target_fn.call(null,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093));
});
var G__11592__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11094 = a;
var G__11095 = b;
var G__11096 = c;
var G__11097 = d;
var G__11098 = e;
var G__11099 = f;
var G__11100 = g;
var G__11101 = h;
var G__11102 = i;
var G__11103 = j;
var G__11104 = k;
var G__11105 = l;
var G__11106 = m;
var G__11107 = n;
var G__11108 = o;
var G__11109 = p;
var G__11110 = q;
var G__11111 = r;
var G__11112 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112) : self__.dispatch_fn.call(null,G__11094,G__11095,G__11096,G__11097,G__11098,G__11099,G__11100,G__11101,G__11102,G__11103,G__11104,G__11105,G__11106,G__11107,G__11108,G__11109,G__11110,G__11111,G__11112));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11113 = a;
var G__11114 = b;
var G__11115 = c;
var G__11116 = d;
var G__11117 = e;
var G__11118 = f;
var G__11119 = g;
var G__11120 = h;
var G__11121 = i;
var G__11122 = j;
var G__11123 = k;
var G__11124 = l;
var G__11125 = m;
var G__11126 = n;
var G__11127 = o;
var G__11128 = p;
var G__11129 = q;
var G__11130 = r;
var G__11131 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127,G__11128,G__11129,G__11130,G__11131) : target_fn.call(null,G__11113,G__11114,G__11115,G__11116,G__11117,G__11118,G__11119,G__11120,G__11121,G__11122,G__11123,G__11124,G__11125,G__11126,G__11127,G__11128,G__11129,G__11130,G__11131));
});
var G__11592__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11132 = a;
var G__11133 = b;
var G__11134 = c;
var G__11135 = d;
var G__11136 = e;
var G__11137 = f;
var G__11138 = g;
var G__11139 = h;
var G__11140 = i;
var G__11141 = j;
var G__11142 = k;
var G__11143 = l;
var G__11144 = m;
var G__11145 = n;
var G__11146 = o;
var G__11147 = p;
var G__11148 = q;
var G__11149 = r;
var G__11150 = s;
var G__11151 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151) : self__.dispatch_fn.call(null,G__11132,G__11133,G__11134,G__11135,G__11136,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148,G__11149,G__11150,G__11151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11152 = a;
var G__11153 = b;
var G__11154 = c;
var G__11155 = d;
var G__11156 = e;
var G__11157 = f;
var G__11158 = g;
var G__11159 = h;
var G__11160 = i;
var G__11161 = j;
var G__11162 = k;
var G__11163 = l;
var G__11164 = m;
var G__11165 = n;
var G__11166 = o;
var G__11167 = p;
var G__11168 = q;
var G__11169 = r;
var G__11170 = s;
var G__11171 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171) : target_fn.call(null,G__11152,G__11153,G__11154,G__11155,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170,G__11171));
});
var G__11592__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11592 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11592__1.call(this,self__);
case 2:
return G__11592__2.call(this,self__,a);
case 3:
return G__11592__3.call(this,self__,a,b);
case 4:
return G__11592__4.call(this,self__,a,b,c);
case 5:
return G__11592__5.call(this,self__,a,b,c,d);
case 6:
return G__11592__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11592__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11592__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11592__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11592__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11592__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11592__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11592__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11592__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11592__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11592__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11592__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11592__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11592__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11592__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11592__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11592__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11592.cljs$core$IFn$_invoke$arity$1 = G__11592__1;
G__11592.cljs$core$IFn$_invoke$arity$2 = G__11592__2;
G__11592.cljs$core$IFn$_invoke$arity$3 = G__11592__3;
G__11592.cljs$core$IFn$_invoke$arity$4 = G__11592__4;
G__11592.cljs$core$IFn$_invoke$arity$5 = G__11592__5;
G__11592.cljs$core$IFn$_invoke$arity$6 = G__11592__6;
G__11592.cljs$core$IFn$_invoke$arity$7 = G__11592__7;
G__11592.cljs$core$IFn$_invoke$arity$8 = G__11592__8;
G__11592.cljs$core$IFn$_invoke$arity$9 = G__11592__9;
G__11592.cljs$core$IFn$_invoke$arity$10 = G__11592__10;
G__11592.cljs$core$IFn$_invoke$arity$11 = G__11592__11;
G__11592.cljs$core$IFn$_invoke$arity$12 = G__11592__12;
G__11592.cljs$core$IFn$_invoke$arity$13 = G__11592__13;
G__11592.cljs$core$IFn$_invoke$arity$14 = G__11592__14;
G__11592.cljs$core$IFn$_invoke$arity$15 = G__11592__15;
G__11592.cljs$core$IFn$_invoke$arity$16 = G__11592__16;
G__11592.cljs$core$IFn$_invoke$arity$17 = G__11592__17;
G__11592.cljs$core$IFn$_invoke$arity$18 = G__11592__18;
G__11592.cljs$core$IFn$_invoke$arity$19 = G__11592__19;
G__11592.cljs$core$IFn$_invoke$arity$20 = G__11592__20;
G__11592.cljs$core$IFn$_invoke$arity$21 = G__11592__21;
G__11592.cljs$core$IFn$_invoke$arity$22 = G__11592__22;
return G__11592;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10744){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10744)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11172 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11172) : self__.dispatch_fn.call(null,G__11172));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11173 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11173) : target_fn.call(null,G__11173));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11174 = a;
var G__11175 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11174,G__11175) : self__.dispatch_fn.call(null,G__11174,G__11175));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11176 = a;
var G__11177 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11176,G__11177) : target_fn.call(null,G__11176,G__11177));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11178 = a;
var G__11179 = b;
var G__11180 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11178,G__11179,G__11180) : self__.dispatch_fn.call(null,G__11178,G__11179,G__11180));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11181 = a;
var G__11182 = b;
var G__11183 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11181,G__11182,G__11183) : target_fn.call(null,G__11181,G__11182,G__11183));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11184 = a;
var G__11185 = b;
var G__11186 = c;
var G__11187 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11184,G__11185,G__11186,G__11187) : self__.dispatch_fn.call(null,G__11184,G__11185,G__11186,G__11187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11188 = a;
var G__11189 = b;
var G__11190 = c;
var G__11191 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11188,G__11189,G__11190,G__11191) : target_fn.call(null,G__11188,G__11189,G__11190,G__11191));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11192 = a;
var G__11193 = b;
var G__11194 = c;
var G__11195 = d;
var G__11196 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11192,G__11193,G__11194,G__11195,G__11196) : self__.dispatch_fn.call(null,G__11192,G__11193,G__11194,G__11195,G__11196));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11197 = a;
var G__11198 = b;
var G__11199 = c;
var G__11200 = d;
var G__11201 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11197,G__11198,G__11199,G__11200,G__11201) : target_fn.call(null,G__11197,G__11198,G__11199,G__11200,G__11201));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11202 = a;
var G__11203 = b;
var G__11204 = c;
var G__11205 = d;
var G__11206 = e;
var G__11207 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11202,G__11203,G__11204,G__11205,G__11206,G__11207) : self__.dispatch_fn.call(null,G__11202,G__11203,G__11204,G__11205,G__11206,G__11207));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11208 = a;
var G__11209 = b;
var G__11210 = c;
var G__11211 = d;
var G__11212 = e;
var G__11213 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11208,G__11209,G__11210,G__11211,G__11212,G__11213) : target_fn.call(null,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11214 = a;
var G__11215 = b;
var G__11216 = c;
var G__11217 = d;
var G__11218 = e;
var G__11219 = f;
var G__11220 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11214,G__11215,G__11216,G__11217,G__11218,G__11219,G__11220) : self__.dispatch_fn.call(null,G__11214,G__11215,G__11216,G__11217,G__11218,G__11219,G__11220));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11221 = a;
var G__11222 = b;
var G__11223 = c;
var G__11224 = d;
var G__11225 = e;
var G__11226 = f;
var G__11227 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227) : target_fn.call(null,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11228 = a;
var G__11229 = b;
var G__11230 = c;
var G__11231 = d;
var G__11232 = e;
var G__11233 = f;
var G__11234 = g;
var G__11235 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235) : self__.dispatch_fn.call(null,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11236 = a;
var G__11237 = b;
var G__11238 = c;
var G__11239 = d;
var G__11240 = e;
var G__11241 = f;
var G__11242 = g;
var G__11243 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242,G__11243) : target_fn.call(null,G__11236,G__11237,G__11238,G__11239,G__11240,G__11241,G__11242,G__11243));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11244 = a;
var G__11245 = b;
var G__11246 = c;
var G__11247 = d;
var G__11248 = e;
var G__11249 = f;
var G__11250 = g;
var G__11251 = h;
var G__11252 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252) : self__.dispatch_fn.call(null,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250,G__11251,G__11252));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11253 = a;
var G__11254 = b;
var G__11255 = c;
var G__11256 = d;
var G__11257 = e;
var G__11258 = f;
var G__11259 = g;
var G__11260 = h;
var G__11261 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261) : target_fn.call(null,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11262 = a;
var G__11263 = b;
var G__11264 = c;
var G__11265 = d;
var G__11266 = e;
var G__11267 = f;
var G__11268 = g;
var G__11269 = h;
var G__11270 = i;
var G__11271 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271) : self__.dispatch_fn.call(null,G__11262,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11272 = a;
var G__11273 = b;
var G__11274 = c;
var G__11275 = d;
var G__11276 = e;
var G__11277 = f;
var G__11278 = g;
var G__11279 = h;
var G__11280 = i;
var G__11281 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281) : target_fn.call(null,G__11272,G__11273,G__11274,G__11275,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11282 = a;
var G__11283 = b;
var G__11284 = c;
var G__11285 = d;
var G__11286 = e;
var G__11287 = f;
var G__11288 = g;
var G__11289 = h;
var G__11290 = i;
var G__11291 = j;
var G__11292 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292) : self__.dispatch_fn.call(null,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288,G__11289,G__11290,G__11291,G__11292));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11293 = a;
var G__11294 = b;
var G__11295 = c;
var G__11296 = d;
var G__11297 = e;
var G__11298 = f;
var G__11299 = g;
var G__11300 = h;
var G__11301 = i;
var G__11302 = j;
var G__11303 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303) : target_fn.call(null,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302,G__11303));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11304 = a;
var G__11305 = b;
var G__11306 = c;
var G__11307 = d;
var G__11308 = e;
var G__11309 = f;
var G__11310 = g;
var G__11311 = h;
var G__11312 = i;
var G__11313 = j;
var G__11314 = k;
var G__11315 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315) : self__.dispatch_fn.call(null,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11316 = a;
var G__11317 = b;
var G__11318 = c;
var G__11319 = d;
var G__11320 = e;
var G__11321 = f;
var G__11322 = g;
var G__11323 = h;
var G__11324 = i;
var G__11325 = j;
var G__11326 = k;
var G__11327 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327) : target_fn.call(null,G__11316,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11328 = a;
var G__11329 = b;
var G__11330 = c;
var G__11331 = d;
var G__11332 = e;
var G__11333 = f;
var G__11334 = g;
var G__11335 = h;
var G__11336 = i;
var G__11337 = j;
var G__11338 = k;
var G__11339 = l;
var G__11340 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340) : self__.dispatch_fn.call(null,G__11328,G__11329,G__11330,G__11331,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11341 = a;
var G__11342 = b;
var G__11343 = c;
var G__11344 = d;
var G__11345 = e;
var G__11346 = f;
var G__11347 = g;
var G__11348 = h;
var G__11349 = i;
var G__11350 = j;
var G__11351 = k;
var G__11352 = l;
var G__11353 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353) : target_fn.call(null,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11354 = a;
var G__11355 = b;
var G__11356 = c;
var G__11357 = d;
var G__11358 = e;
var G__11359 = f;
var G__11360 = g;
var G__11361 = h;
var G__11362 = i;
var G__11363 = j;
var G__11364 = k;
var G__11365 = l;
var G__11366 = m;
var G__11367 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367) : self__.dispatch_fn.call(null,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365,G__11366,G__11367));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11368 = a;
var G__11369 = b;
var G__11370 = c;
var G__11371 = d;
var G__11372 = e;
var G__11373 = f;
var G__11374 = g;
var G__11375 = h;
var G__11376 = i;
var G__11377 = j;
var G__11378 = k;
var G__11379 = l;
var G__11380 = m;
var G__11381 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381) : target_fn.call(null,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380,G__11381));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11382 = a;
var G__11383 = b;
var G__11384 = c;
var G__11385 = d;
var G__11386 = e;
var G__11387 = f;
var G__11388 = g;
var G__11389 = h;
var G__11390 = i;
var G__11391 = j;
var G__11392 = k;
var G__11393 = l;
var G__11394 = m;
var G__11395 = n;
var G__11396 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396) : self__.dispatch_fn.call(null,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11397 = a;
var G__11398 = b;
var G__11399 = c;
var G__11400 = d;
var G__11401 = e;
var G__11402 = f;
var G__11403 = g;
var G__11404 = h;
var G__11405 = i;
var G__11406 = j;
var G__11407 = k;
var G__11408 = l;
var G__11409 = m;
var G__11410 = n;
var G__11411 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411) : target_fn.call(null,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11412 = a;
var G__11413 = b;
var G__11414 = c;
var G__11415 = d;
var G__11416 = e;
var G__11417 = f;
var G__11418 = g;
var G__11419 = h;
var G__11420 = i;
var G__11421 = j;
var G__11422 = k;
var G__11423 = l;
var G__11424 = m;
var G__11425 = n;
var G__11426 = o;
var G__11427 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427) : self__.dispatch_fn.call(null,G__11412,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11428 = a;
var G__11429 = b;
var G__11430 = c;
var G__11431 = d;
var G__11432 = e;
var G__11433 = f;
var G__11434 = g;
var G__11435 = h;
var G__11436 = i;
var G__11437 = j;
var G__11438 = k;
var G__11439 = l;
var G__11440 = m;
var G__11441 = n;
var G__11442 = o;
var G__11443 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443) : target_fn.call(null,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11444 = a;
var G__11445 = b;
var G__11446 = c;
var G__11447 = d;
var G__11448 = e;
var G__11449 = f;
var G__11450 = g;
var G__11451 = h;
var G__11452 = i;
var G__11453 = j;
var G__11454 = k;
var G__11455 = l;
var G__11456 = m;
var G__11457 = n;
var G__11458 = o;
var G__11459 = p;
var G__11460 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460) : self__.dispatch_fn.call(null,G__11444,G__11445,G__11446,G__11447,G__11448,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11461 = a;
var G__11462 = b;
var G__11463 = c;
var G__11464 = d;
var G__11465 = e;
var G__11466 = f;
var G__11467 = g;
var G__11468 = h;
var G__11469 = i;
var G__11470 = j;
var G__11471 = k;
var G__11472 = l;
var G__11473 = m;
var G__11474 = n;
var G__11475 = o;
var G__11476 = p;
var G__11477 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477) : target_fn.call(null,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11478 = a;
var G__11479 = b;
var G__11480 = c;
var G__11481 = d;
var G__11482 = e;
var G__11483 = f;
var G__11484 = g;
var G__11485 = h;
var G__11486 = i;
var G__11487 = j;
var G__11488 = k;
var G__11489 = l;
var G__11490 = m;
var G__11491 = n;
var G__11492 = o;
var G__11493 = p;
var G__11494 = q;
var G__11495 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495) : self__.dispatch_fn.call(null,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11496 = a;
var G__11497 = b;
var G__11498 = c;
var G__11499 = d;
var G__11500 = e;
var G__11501 = f;
var G__11502 = g;
var G__11503 = h;
var G__11504 = i;
var G__11505 = j;
var G__11506 = k;
var G__11507 = l;
var G__11508 = m;
var G__11509 = n;
var G__11510 = o;
var G__11511 = p;
var G__11512 = q;
var G__11513 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513) : target_fn.call(null,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11514 = a;
var G__11515 = b;
var G__11516 = c;
var G__11517 = d;
var G__11518 = e;
var G__11519 = f;
var G__11520 = g;
var G__11521 = h;
var G__11522 = i;
var G__11523 = j;
var G__11524 = k;
var G__11525 = l;
var G__11526 = m;
var G__11527 = n;
var G__11528 = o;
var G__11529 = p;
var G__11530 = q;
var G__11531 = r;
var G__11532 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532) : self__.dispatch_fn.call(null,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11533 = a;
var G__11534 = b;
var G__11535 = c;
var G__11536 = d;
var G__11537 = e;
var G__11538 = f;
var G__11539 = g;
var G__11540 = h;
var G__11541 = i;
var G__11542 = j;
var G__11543 = k;
var G__11544 = l;
var G__11545 = m;
var G__11546 = n;
var G__11547 = o;
var G__11548 = p;
var G__11549 = q;
var G__11550 = r;
var G__11551 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551) : target_fn.call(null,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11552 = a;
var G__11553 = b;
var G__11554 = c;
var G__11555 = d;
var G__11556 = e;
var G__11557 = f;
var G__11558 = g;
var G__11559 = h;
var G__11560 = i;
var G__11561 = j;
var G__11562 = k;
var G__11563 = l;
var G__11564 = m;
var G__11565 = n;
var G__11566 = o;
var G__11567 = p;
var G__11568 = q;
var G__11569 = r;
var G__11570 = s;
var G__11571 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571) : self__.dispatch_fn.call(null,G__11552,G__11553,G__11554,G__11555,G__11556,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11572 = a;
var G__11573 = b;
var G__11574 = c;
var G__11575 = d;
var G__11576 = e;
var G__11577 = f;
var G__11578 = g;
var G__11579 = h;
var G__11580 = i;
var G__11581 = j;
var G__11582 = k;
var G__11583 = l;
var G__11584 = m;
var G__11585 = n;
var G__11586 = o;
var G__11587 = p;
var G__11588 = q;
var G__11589 = r;
var G__11590 = s;
var G__11591 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591) : target_fn.call(null,G__11572,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590,G__11591));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11593 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11593);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__11598 = msg;
return Error(G__11598);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11603 = x;
var G__11604 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11603,G__11604) : pred.call(null,G__11603,G__11604));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11605 = y;
var G__11606 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11605,G__11606) : pred.call(null,G__11605,G__11606));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
