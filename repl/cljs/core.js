// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11613__delegate = function (args){
return console.log.apply(console,(function (){var G__11612 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11612) : cljs.core.into_array.call(null,G__11612));
})());
};
var G__11613 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11614__i = 0, G__11614__a = new Array(arguments.length -  0);
while (G__11614__i < G__11614__a.length) {G__11614__a[G__11614__i] = arguments[G__11614__i + 0]; ++G__11614__i;}
  args = new cljs.core.IndexedSeq(G__11614__a,0);
} 
return G__11613__delegate.call(this,args);};
G__11613.cljs$lang$maxFixedArity = 0;
G__11613.cljs$lang$applyTo = (function (arglist__11615){
var args = cljs.core.seq(arglist__11615);
return G__11613__delegate(args);
});
G__11613.cljs$core$IFn$_invoke$arity$variadic = G__11613__delegate;
return G__11613;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11617 = x;
return goog.isString(G__11617);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11619 = x__$1;
return goog.typeOf(G__11619);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3917__auto__ = ty;
if(cljs.core.truth_(and__3917__auto__)){
return ty.cljs$lang$type;
} else {
return and__3917__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11621 = obj;
return goog.typeOf(G__11621);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11623 = Symbol;
return goog.typeOf(G__11623);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4816__auto___11625 = len;
var i_11626 = (0);
while(true){
if((i_11626 < n__4816__auto___11625)){
(new_arr[i_11626] = (arr[i_11626]));

var G__11627 = (i_11626 + (1));
i_11626 = G__11627;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11628 = (i + (1));
i = G__11628;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11637__delegate = function (array,i,idxs){
var G__11634 = aget;
var G__11635 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11636 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11634,G__11635,G__11636) : cljs.core.apply.call(null,G__11634,G__11635,G__11636));
};
var G__11637 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11638__i = 0, G__11638__a = new Array(arguments.length -  2);
while (G__11638__i < G__11638__a.length) {G__11638__a[G__11638__i] = arguments[G__11638__i + 2]; ++G__11638__i;}
  idxs = new cljs.core.IndexedSeq(G__11638__a,0);
} 
return G__11637__delegate.call(this,array,i,idxs);};
G__11637.cljs$lang$maxFixedArity = 2;
G__11637.cljs$lang$applyTo = (function (arglist__11639){
var array = cljs.core.first(arglist__11639);
arglist__11639 = cljs.core.next(arglist__11639);
var i = cljs.core.first(arglist__11639);
var idxs = cljs.core.rest(arglist__11639);
return G__11637__delegate(array,i,idxs);
});
G__11637.cljs$core$IFn$_invoke$arity$variadic = G__11637__delegate;
return G__11637;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11640 = null;
if (arguments.length > 2) {
var G__11641__i = 0, G__11641__a = new Array(arguments.length -  2);
while (G__11641__i < G__11641__a.length) {G__11641__a[G__11641__i] = arguments[G__11641__i + 2]; ++G__11641__i;}
G__11640 = new cljs.core.IndexedSeq(G__11641__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11640);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11650__delegate = function (array,idx,idx2,idxv){
var G__11646 = aset;
var G__11647 = (array[idx]);
var G__11648 = idx2;
var G__11649 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11646,G__11647,G__11648,G__11649) : cljs.core.apply.call(null,G__11646,G__11647,G__11648,G__11649));
};
var G__11650 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11651__i = 0, G__11651__a = new Array(arguments.length -  3);
while (G__11651__i < G__11651__a.length) {G__11651__a[G__11651__i] = arguments[G__11651__i + 3]; ++G__11651__i;}
  idxv = new cljs.core.IndexedSeq(G__11651__a,0);
} 
return G__11650__delegate.call(this,array,idx,idx2,idxv);};
G__11650.cljs$lang$maxFixedArity = 3;
G__11650.cljs$lang$applyTo = (function (arglist__11652){
var array = cljs.core.first(arglist__11652);
arglist__11652 = cljs.core.next(arglist__11652);
var idx = cljs.core.first(arglist__11652);
arglist__11652 = cljs.core.next(arglist__11652);
var idx2 = cljs.core.first(arglist__11652);
var idxv = cljs.core.rest(arglist__11652);
return G__11650__delegate(array,idx,idx2,idxv);
});
G__11650.cljs$core$IFn$_invoke$arity$variadic = G__11650__delegate;
return G__11650;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11653 = null;
if (arguments.length > 3) {
var G__11654__i = 0, G__11654__a = new Array(arguments.length -  3);
while (G__11654__i < G__11654__a.length) {G__11654__a[G__11654__i] = arguments[G__11654__i + 3]; ++G__11654__i;}
G__11653 = new cljs.core.IndexedSeq(G__11654__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11660 = (function (a,x){
a.push(x);

return a;
});
var G__11661 = [];
var G__11662 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11660,G__11661,G__11662) : cljs.core.reduce.call(null,G__11660,G__11661,G__11662));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11663__i = 0, G__11663__a = new Array(arguments.length -  2);
while (G__11663__i < G__11663__a.length) {G__11663__a[G__11663__i] = arguments[G__11663__i + 2]; ++G__11663__i;}
  args = new cljs.core.IndexedSeq(G__11663__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11664){
var obj = cljs.core.first(arglist__11664);
arglist__11664 = cljs.core.next(arglist__11664);
var s = cljs.core.first(arglist__11664);
var args = cljs.core.rest(arglist__11664);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11666 = {};
return obj11666;
})();


cljs.core.IFn = (function (){var obj11668 = {};
return obj11668;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11714 = x__4573__auto__;
return goog.typeOf(G__11714);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11716 = x__4573__auto__;
return goog.typeOf(G__11716);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11718 = x__4573__auto__;
return goog.typeOf(G__11718);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11720 = x__4573__auto__;
return goog.typeOf(G__11720);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11722 = x__4573__auto__;
return goog.typeOf(G__11722);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11724 = x__4573__auto__;
return goog.typeOf(G__11724);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11726 = x__4573__auto__;
return goog.typeOf(G__11726);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11728 = x__4573__auto__;
return goog.typeOf(G__11728);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11730 = x__4573__auto__;
return goog.typeOf(G__11730);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11732 = x__4573__auto__;
return goog.typeOf(G__11732);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11734 = x__4573__auto__;
return goog.typeOf(G__11734);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11736 = x__4573__auto__;
return goog.typeOf(G__11736);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11738 = x__4573__auto__;
return goog.typeOf(G__11738);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11740 = x__4573__auto__;
return goog.typeOf(G__11740);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11742 = x__4573__auto__;
return goog.typeOf(G__11742);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11744 = x__4573__auto__;
return goog.typeOf(G__11744);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11746 = x__4573__auto__;
return goog.typeOf(G__11746);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11748 = x__4573__auto__;
return goog.typeOf(G__11748);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11750 = x__4573__auto__;
return goog.typeOf(G__11750);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11752 = x__4573__auto__;
return goog.typeOf(G__11752);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11754 = x__4573__auto__;
return goog.typeOf(G__11754);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._invoke[(function (){var G__11756 = x__4573__auto__;
return goog.typeOf(G__11756);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._invoke["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11758 = {};
return obj11758;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3917__auto__ = value;
if(and__3917__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3917__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4573__auto__ = (((value == null))?null:value);
return (function (){var or__3929__auto__ = (cljs.core._clone[(function (){var G__11762 = x__4573__auto__;
return goog.typeOf(G__11762);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._clone["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11764 = {};
return obj11764;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._count[(function (){var G__11768 = x__4573__auto__;
return goog.typeOf(G__11768);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._count["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11770 = {};
return obj11770;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._empty[(function (){var G__11774 = x__4573__auto__;
return goog.typeOf(G__11774);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._empty["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11776 = {};
return obj11776;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._conj[(function (){var G__11780 = x__4573__auto__;
return goog.typeOf(G__11780);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._conj["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11782 = {};
return obj11782;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._nth[(function (){var G__11788 = x__4573__auto__;
return goog.typeOf(G__11788);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._nth["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._nth[(function (){var G__11790 = x__4573__auto__;
return goog.typeOf(G__11790);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._nth["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11792 = {};
return obj11792;
})();


cljs.core.ISeq = (function (){var obj11794 = {};
return obj11794;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._first[(function (){var G__11798 = x__4573__auto__;
return goog.typeOf(G__11798);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._rest[(function (){var G__11802 = x__4573__auto__;
return goog.typeOf(G__11802);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._rest["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11804 = {};
return obj11804;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._next[(function (){var G__11808 = x__4573__auto__;
return goog.typeOf(G__11808);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._next["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11810 = {};
return obj11810;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._lookup[(function (){var G__11816 = x__4573__auto__;
return goog.typeOf(G__11816);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._lookup["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._lookup[(function (){var G__11818 = x__4573__auto__;
return goog.typeOf(G__11818);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._lookup["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11820 = {};
return obj11820;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11824 = x__4573__auto__;
return goog.typeOf(G__11824);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._assoc[(function (){var G__11828 = x__4573__auto__;
return goog.typeOf(G__11828);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11830 = {};
return obj11830;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._dissoc[(function (){var G__11834 = x__4573__auto__;
return goog.typeOf(G__11834);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11836 = {};
return obj11836;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._key[(function (){var G__11840 = x__4573__auto__;
return goog.typeOf(G__11840);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._key["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._val[(function (){var G__11844 = x__4573__auto__;
return goog.typeOf(G__11844);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._val["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11846 = {};
return obj11846;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._disjoin[(function (){var G__11850 = x__4573__auto__;
return goog.typeOf(G__11850);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11852 = {};
return obj11852;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._peek[(function (){var G__11856 = x__4573__auto__;
return goog.typeOf(G__11856);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._peek["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._pop[(function (){var G__11860 = x__4573__auto__;
return goog.typeOf(G__11860);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pop["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11862 = {};
return obj11862;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_n[(function (){var G__11866 = x__4573__auto__;
return goog.typeOf(G__11866);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11868 = {};
return obj11868;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._deref[(function (){var G__11872 = x__4573__auto__;
return goog.typeOf(G__11872);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._deref["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11874 = {};
return obj11874;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11878 = x__4573__auto__;
return goog.typeOf(G__11878);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11880 = {};
return obj11880;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._meta[(function (){var G__11884 = x__4573__auto__;
return goog.typeOf(G__11884);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._meta["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11886 = {};
return obj11886;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._with_meta[(function (){var G__11890 = x__4573__auto__;
return goog.typeOf(G__11890);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11892 = {};
return obj11892;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._reduce[(function (){var G__11898 = x__4573__auto__;
return goog.typeOf(G__11898);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._reduce[(function (){var G__11900 = x__4573__auto__;
return goog.typeOf(G__11900);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11902 = {};
return obj11902;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._kv_reduce[(function (){var G__11906 = x__4573__auto__;
return goog.typeOf(G__11906);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11908 = {};
return obj11908;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._equiv[(function (){var G__11912 = x__4573__auto__;
return goog.typeOf(G__11912);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._equiv["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11914 = {};
return obj11914;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._hash[(function (){var G__11918 = x__4573__auto__;
return goog.typeOf(G__11918);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._hash["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11920 = {};
return obj11920;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._seq[(function (){var G__11924 = x__4573__auto__;
return goog.typeOf(G__11924);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._seq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11926 = {};
return obj11926;
})();


cljs.core.IList = (function (){var obj11928 = {};
return obj11928;
})();


cljs.core.IRecord = (function (){var obj11930 = {};
return obj11930;
})();


cljs.core.IReversible = (function (){var obj11932 = {};
return obj11932;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._rseq[(function (){var G__11936 = x__4573__auto__;
return goog.typeOf(G__11936);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._rseq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11938 = {};
return obj11938;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._sorted_seq[(function (){var G__11942 = x__4573__auto__;
return goog.typeOf(G__11942);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11946 = x__4573__auto__;
return goog.typeOf(G__11946);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._entry_key[(function (){var G__11950 = x__4573__auto__;
return goog.typeOf(G__11950);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._comparator[(function (){var G__11954 = x__4573__auto__;
return goog.typeOf(G__11954);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._comparator["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11956 = {};
return obj11956;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3917__auto__ = writer;
if(and__3917__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3917__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4573__auto__ = (((writer == null))?null:writer);
return (function (){var or__3929__auto__ = (cljs.core._write[(function (){var G__11960 = x__4573__auto__;
return goog.typeOf(G__11960);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._write["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3917__auto__ = writer;
if(and__3917__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3917__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4573__auto__ = (((writer == null))?null:writer);
return (function (){var or__3929__auto__ = (cljs.core._flush[(function (){var G__11964 = x__4573__auto__;
return goog.typeOf(G__11964);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._flush["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11966 = {};
return obj11966;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._pr_writer[(function (){var G__11970 = x__4573__auto__;
return goog.typeOf(G__11970);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11972 = {};
return obj11972;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3917__auto__ = d;
if(and__3917__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4573__auto__ = (((d == null))?null:d);
return (function (){var or__3929__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11976 = x__4573__auto__;
return goog.typeOf(G__11976);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11978 = {};
return obj11978;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._notify_watches[(function (){var G__11982 = x__4573__auto__;
return goog.typeOf(G__11982);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._add_watch[(function (){var G__11986 = x__4573__auto__;
return goog.typeOf(G__11986);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3917__auto__ = this$;
if(and__3917__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3917__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4573__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3929__auto__ = (cljs.core._remove_watch[(function (){var G__11990 = x__4573__auto__;
return goog.typeOf(G__11990);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11992 = {};
return obj11992;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._as_transient[(function (){var G__11996 = x__4573__auto__;
return goog.typeOf(G__11996);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11998 = {};
return obj11998;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._conj_BANG_[(function (){var G__12002 = x__4573__auto__;
return goog.typeOf(G__12002);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._persistent_BANG_[(function (){var G__12006 = x__4573__auto__;
return goog.typeOf(G__12006);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj12008 = {};
return obj12008;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_BANG_[(function (){var G__12012 = x__4573__auto__;
return goog.typeOf(G__12012);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj12014 = {};
return obj12014;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__12018 = x__4573__auto__;
return goog.typeOf(G__12018);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj12020 = {};
return obj12020;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__12024 = x__4573__auto__;
return goog.typeOf(G__12024);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._pop_BANG_[(function (){var G__12028 = x__4573__auto__;
return goog.typeOf(G__12028);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj12030 = {};
return obj12030;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3917__auto__ = tcoll;
if(and__3917__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4573__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3929__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__12034 = x__4573__auto__;
return goog.typeOf(G__12034);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj12036 = {};
return obj12036;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._compare[(function (){var G__12040 = x__4573__auto__;
return goog.typeOf(G__12040);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._compare["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj12042 = {};
return obj12042;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._drop_first[(function (){var G__12046 = x__4573__auto__;
return goog.typeOf(G__12046);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj12048 = {};
return obj12048;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_first[(function (){var G__12052 = x__4573__auto__;
return goog.typeOf(G__12052);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_rest[(function (){var G__12056 = x__4573__auto__;
return goog.typeOf(G__12056);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj12058 = {};
return obj12058;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._chunked_next[(function (){var G__12062 = x__4573__auto__;
return goog.typeOf(G__12062);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj12064 = {};
return obj12064;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._name[(function (){var G__12068 = x__4573__auto__;
return goog.typeOf(G__12068);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._name["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._namespace[(function (){var G__12072 = x__4573__auto__;
return goog.typeOf(G__12072);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._namespace["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj12074 = {};
return obj12074;
})();


cljs.core.IReset = (function (){var obj12076 = {};
return obj12076;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._reset_BANG_[(function (){var G__12080 = x__4573__auto__;
return goog.typeOf(G__12080);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj12082 = {};
return obj12082;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__12092 = x__4573__auto__;
return goog.typeOf(G__12092);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__12094 = x__4573__auto__;
return goog.typeOf(G__12094);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__12096 = x__4573__auto__;
return goog.typeOf(G__12096);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._swap_BANG_[(function (){var G__12098 = x__4573__auto__;
return goog.typeOf(G__12098);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj12100 = {};
return obj12100;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3917__auto__ = o;
if(and__3917__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3917__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4573__auto__ = (((o == null))?null:o);
return (function (){var or__3929__auto__ = (cljs.core._vreset_BANG_[(function (){var G__12104 = x__4573__auto__;
return goog.typeOf(G__12104);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj12106 = {};
return obj12106;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3917__auto__ = coll;
if(and__3917__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3917__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4573__auto__ = (((coll == null))?null:coll);
return (function (){var or__3929__auto__ = (cljs.core._iterator[(function (){var G__12110 = x__4573__auto__;
return goog.typeOf(G__12110);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._iterator["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__12113 = (4294967295);
var G__12114 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12113,G__12114) : Math.imul.call(null,G__12113,G__12114));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__12117 = a;
var G__12118 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12117,G__12118) : Math.imul.call(null,G__12117,G__12118));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__12119 = (i + (2));
var G__12120 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__12119;
h1 = G__12120;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj12122 = {};
return obj12122;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__12123 = (i + (1));
var G__12124 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__12123;
hash = G__12124;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj12128 = {};
return obj12128;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__12131 = o;
if(G__12131){
var bit__4603__auto__ = (G__12131.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4603__auto__) || (G__12131.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__12132 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12132) : Math.floor.call(null,G__12132));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.not(a.ns);
if(and__3917__auto__){
return b.ns;
} else {
return and__3917__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12139 = a.ns;
var G__12140 = b.ns;
return goog.array.defaultCompare(G__12139,G__12140);
})();
if(((0) === nsc)){
var G__12141 = a.name;
var G__12142 = b.name;
return goog.array.defaultCompare(G__12141,G__12142);
} else {
return nsc;
}
}
} else {
var G__12143 = a.name;
var G__12144 = b.name;
return goog.array.defaultCompare(G__12143,G__12144);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4350__auto__ = self__._hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__12146 = null;
var G__12146__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__12146__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__12146 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12146__2.call(this,self__,coll);
case 3:
return G__12146__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12146.cljs$core$IFn$_invoke$arity$2 = G__12146__2;
G__12146.cljs$core$IFn$_invoke$arity$3 = G__12146__3;
return G__12146;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args12145){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12145)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__12194 = null;
var G__12194__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__12194__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__12194__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__12194__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__12194__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__12194__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__12194__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__12194__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__12194__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__12194__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__12194__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__12194__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__12194__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__12194__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__12194__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__12194__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__12194__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__12194__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__12194__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__12194__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__12194__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__12194__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12150 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12151 = a;
var G__12152 = b;
var G__12153 = c;
var G__12154 = d;
var G__12155 = e;
var G__12156 = f;
var G__12157 = g;
var G__12158 = h;
var G__12159 = i;
var G__12160 = j;
var G__12161 = k;
var G__12162 = l;
var G__12163 = m;
var G__12164 = n;
var G__12165 = o;
var G__12166 = p;
var G__12167 = q;
var G__12168 = r;
var G__12169 = s;
var G__12170 = t;
var G__12171 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171) : cljs.core.apply.call(null,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171));
});
G__12194 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12194__1.call(this,self__);
case 2:
return G__12194__2.call(this,self__,a);
case 3:
return G__12194__3.call(this,self__,a,b);
case 4:
return G__12194__4.call(this,self__,a,b,c);
case 5:
return G__12194__5.call(this,self__,a,b,c,d);
case 6:
return G__12194__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12194__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12194__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12194__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12194__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12194__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12194__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12194__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12194__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12194__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12194__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12194__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12194__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12194__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12194__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12194__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12194__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12194.cljs$core$IFn$_invoke$arity$1 = G__12194__1;
G__12194.cljs$core$IFn$_invoke$arity$2 = G__12194__2;
G__12194.cljs$core$IFn$_invoke$arity$3 = G__12194__3;
G__12194.cljs$core$IFn$_invoke$arity$4 = G__12194__4;
G__12194.cljs$core$IFn$_invoke$arity$5 = G__12194__5;
G__12194.cljs$core$IFn$_invoke$arity$6 = G__12194__6;
G__12194.cljs$core$IFn$_invoke$arity$7 = G__12194__7;
G__12194.cljs$core$IFn$_invoke$arity$8 = G__12194__8;
G__12194.cljs$core$IFn$_invoke$arity$9 = G__12194__9;
G__12194.cljs$core$IFn$_invoke$arity$10 = G__12194__10;
G__12194.cljs$core$IFn$_invoke$arity$11 = G__12194__11;
G__12194.cljs$core$IFn$_invoke$arity$12 = G__12194__12;
G__12194.cljs$core$IFn$_invoke$arity$13 = G__12194__13;
G__12194.cljs$core$IFn$_invoke$arity$14 = G__12194__14;
G__12194.cljs$core$IFn$_invoke$arity$15 = G__12194__15;
G__12194.cljs$core$IFn$_invoke$arity$16 = G__12194__16;
G__12194.cljs$core$IFn$_invoke$arity$17 = G__12194__17;
G__12194.cljs$core$IFn$_invoke$arity$18 = G__12194__18;
G__12194.cljs$core$IFn$_invoke$arity$19 = G__12194__19;
G__12194.cljs$core$IFn$_invoke$arity$20 = G__12194__20;
G__12194.cljs$core$IFn$_invoke$arity$21 = G__12194__21;
G__12194.cljs$core$IFn$_invoke$arity$22 = G__12194__22;
return G__12194;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args12149){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12149)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12172 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12173 = a;
var G__12174 = b;
var G__12175 = c;
var G__12176 = d;
var G__12177 = e;
var G__12178 = f;
var G__12179 = g;
var G__12180 = h;
var G__12181 = i;
var G__12182 = j;
var G__12183 = k;
var G__12184 = l;
var G__12185 = m;
var G__12186 = n;
var G__12187 = o;
var G__12188 = p;
var G__12189 = q;
var G__12190 = r;
var G__12191 = s;
var G__12192 = t;
var G__12193 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193) : cljs.core.apply.call(null,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191,G__12192,G__12193));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__12196 = x;
if(G__12196){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__12196.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__12196.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12196);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__12198 = value;
if(G__12198){
var bit__4610__auto__ = (G__12198.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4610__auto__) || (G__12198.cljs$core$ICloneable$)){
return true;
} else {
if((!G__12198.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12198);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12198);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12200 = coll;
if(G__12200){
var bit__4603__auto__ = (G__12200.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4603__auto__) || (G__12200.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12202 = coll;
if(G__12202){
var bit__4603__auto__ = (G__12202.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__12202.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__12204 = coll;
if(G__12204){
var bit__4603__auto__ = (G__12204.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__12204.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12206 = coll;
if(G__12206){
var bit__4603__auto__ = (G__12206.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4603__auto__) || (G__12206.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__12211__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12212 = y;
var G__12213 = cljs.core.first(more);
var G__12214 = cljs.core.next(more);
x = G__12212;
y = G__12213;
more = G__12214;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12211 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12215__i = 0, G__12215__a = new Array(arguments.length -  2);
while (G__12215__i < G__12215__a.length) {G__12215__a[G__12215__i] = arguments[G__12215__i + 2]; ++G__12215__i;}
  more = new cljs.core.IndexedSeq(G__12215__a,0);
} 
return G__12211__delegate.call(this,x,y,more);};
G__12211.cljs$lang$maxFixedArity = 2;
G__12211.cljs$lang$applyTo = (function (arglist__12216){
var x = cljs.core.first(arglist__12216);
arglist__12216 = cljs.core.next(arglist__12216);
var y = cljs.core.first(arglist__12216);
var more = cljs.core.rest(arglist__12216);
return G__12211__delegate(x,y,more);
});
G__12211.cljs$core$IFn$_invoke$arity$variadic = G__12211__delegate;
return G__12211;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__12217 = null;
if (arguments.length > 2) {
var G__12218__i = 0, G__12218__a = new Array(arguments.length -  2);
while (G__12218__i < G__12218__a.length) {G__12218__a[G__12218__i] = arguments[G__12218__i + 2]; ++G__12218__i;}
G__12217 = new cljs.core.IndexedSeq(G__12218__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__12219 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12219) : cljs.core.es6_iterator_seq.call(null,G__12219));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12220 = (n + (1));
var G__12221 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12222 = cljs.core.next(coll__$1);
n = G__12220;
hash_code = G__12221;
coll__$1 = G__12222;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12223 = (n + (1));
var G__12224 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12225 = cljs.core.next(coll__$1);
n = G__12223;
hash_code = G__12224;
coll__$1 = G__12225;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__12226 = o;
return goog.getUid(G__12226);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__12228 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12228) : cljs.core.deref.call(null,G__12228));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12235 = val;
var G__12236 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12235,G__12236) : f.call(null,G__12235,G__12236));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12241 = nval;
var G__12242 = (n + (1));
val = G__12241;
n = G__12242;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12237 = val__$1;
var G__12238 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12237,G__12238) : f.call(null,G__12237,G__12238));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12243 = nval;
var G__12244 = (n + (1));
val__$1 = G__12243;
n = G__12244;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12239 = val__$1;
var G__12240 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12239,G__12240) : f.call(null,G__12239,G__12240));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12245 = nval;
var G__12246 = (n + (1));
val__$1 = G__12245;
n = G__12246;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__12253 = val;
var G__12254 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12253,G__12254) : f.call(null,G__12253,G__12254));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12259 = nval;
var G__12260 = (n + (1));
val = G__12259;
n = G__12260;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__12255 = val__$1;
var G__12256 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12255,G__12256) : f.call(null,G__12255,G__12256));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12261 = nval;
var G__12262 = (n + (1));
val__$1 = G__12261;
n = G__12262;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__12257 = val__$1;
var G__12258 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12257,G__12258) : f.call(null,G__12257,G__12258));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12263 = nval;
var G__12264 = (n + (1));
val__$1 = G__12263;
n = G__12264;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__12266 = x;
if(G__12266){
var bit__4610__auto__ = (G__12266.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4610__auto__) || (G__12266.cljs$core$ICounted$)){
return true;
} else {
if((!G__12266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12266);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__12268 = x;
if(G__12268){
var bit__4610__auto__ = (G__12268.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4610__auto__) || (G__12268.cljs$core$IIndexed$)){
return true;
} else {
if((!G__12268.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12268);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12268);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12269 = coll__$1;
var G__12270 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12269,G__12270) : cljs.core.equiv_sequential.call(null,G__12269,G__12270));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12271 = o;
var G__12272 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12271,G__12272) : cljs.core.cons.call(null,G__12271,G__12272));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12275 = coll__$1;
var G__12276 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12275,G__12276) : cljs.core.equiv_sequential.call(null,G__12275,G__12276));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__12277 = cljs.core.List.EMPTY;
var G__12278 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12277,G__12278) : cljs.core.with_meta.call(null,G__12277,G__12278));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__12279 = f;
var G__12280 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12279,G__12280) : cljs.core.seq_reduce.call(null,G__12279,G__12280));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__12281 = f;
var G__12282 = start;
var G__12283 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12281,G__12282,G__12283) : cljs.core.seq_reduce.call(null,G__12281,G__12282,G__12283));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12284 = o;
var G__12285 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12284,G__12285) : cljs.core.cons.call(null,G__12284,G__12285));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__12286 = sn;
s = G__12286;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__12291__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__12292 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__12293 = cljs.core.first(xs);
var G__12294 = cljs.core.next(xs);
coll = G__12292;
x = G__12293;
xs = G__12294;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__12291 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__12295__i = 0, G__12295__a = new Array(arguments.length -  2);
while (G__12295__i < G__12295__a.length) {G__12295__a[G__12295__i] = arguments[G__12295__i + 2]; ++G__12295__i;}
  xs = new cljs.core.IndexedSeq(G__12295__a,0);
} 
return G__12291__delegate.call(this,coll,x,xs);};
G__12291.cljs$lang$maxFixedArity = 2;
G__12291.cljs$lang$applyTo = (function (arglist__12296){
var coll = cljs.core.first(arglist__12296);
arglist__12296 = cljs.core.next(arglist__12296);
var x = cljs.core.first(arglist__12296);
var xs = cljs.core.rest(arglist__12296);
return G__12291__delegate(coll,x,xs);
});
G__12291.cljs$core$IFn$_invoke$arity$variadic = G__12291__delegate;
return G__12291;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__12297 = null;
if (arguments.length > 2) {
var G__12298__i = 0, G__12298__a = new Array(arguments.length -  2);
while (G__12298__i < G__12298__a.length) {G__12298__a[G__12298__i] = arguments[G__12298__i + 2]; ++G__12298__i;}
G__12297 = new cljs.core.IndexedSeq(G__12298__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__12297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__12299 = cljs.core.next(s);
var G__12300 = (acc + (1));
s = G__12299;
acc = G__12300;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__12302 = coll;
if(G__12302){
var bit__4603__auto__ = (G__12302.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4603__auto__) || (G__12302.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__12303 = cljs.core.next(coll);
var G__12304 = (n - (1));
coll = G__12303;
n = G__12304;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__12305 = cljs.core.next(coll);
var G__12306 = (n - (1));
var G__12307 = not_found;
coll = G__12305;
n = G__12306;
not_found = G__12307;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__12312 = coll;
if(G__12312){
var bit__4603__auto__ = (G__12312.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4603__auto__) || (G__12312.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12313 = coll;
if(G__12313){
var bit__4610__auto__ = (G__12313.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__12313.cljs$core$ISeq$)){
return true;
} else {
if((!G__12313.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12313);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12313);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__12314 = coll;
if(G__12314){
var bit__4603__auto__ = (G__12314.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4603__auto__) || (G__12314.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12315 = coll;
if(G__12315){
var bit__4610__auto__ = (G__12315.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__12315.cljs$core$ISeq$)){
return true;
} else {
if((!G__12315.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12315);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12315);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__12316 = (n__$1 - (1));
var G__12317 = cljs.core.rest(xs);
n__$1 = G__12316;
xs = G__12317;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__12320 = o;
if(G__12320){
var bit__4603__auto__ = (G__12320.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4603__auto__) || (G__12320.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__12321 = o;
if(G__12321){
var bit__4603__auto__ = (G__12321.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4603__auto__) || (G__12321.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__12325__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__12326 = ret;
var G__12327 = cljs.core.first(kvs);
var G__12328 = cljs.core.second(kvs);
var G__12329 = cljs.core.nnext(kvs);
coll = G__12326;
k = G__12327;
v = G__12328;
kvs = G__12329;
continue;
} else {
return ret;
}
break;
}
};
var G__12325 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12330__i = 0, G__12330__a = new Array(arguments.length -  3);
while (G__12330__i < G__12330__a.length) {G__12330__a[G__12330__i] = arguments[G__12330__i + 3]; ++G__12330__i;}
  kvs = new cljs.core.IndexedSeq(G__12330__a,0);
} 
return G__12325__delegate.call(this,coll,k,v,kvs);};
G__12325.cljs$lang$maxFixedArity = 3;
G__12325.cljs$lang$applyTo = (function (arglist__12331){
var coll = cljs.core.first(arglist__12331);
arglist__12331 = cljs.core.next(arglist__12331);
var k = cljs.core.first(arglist__12331);
arglist__12331 = cljs.core.next(arglist__12331);
var v = cljs.core.first(arglist__12331);
var kvs = cljs.core.rest(arglist__12331);
return G__12325__delegate(coll,k,v,kvs);
});
G__12325.cljs$core$IFn$_invoke$arity$variadic = G__12325__delegate;
return G__12325;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__12332 = null;
if (arguments.length > 3) {
var G__12333__i = 0, G__12333__a = new Array(arguments.length -  3);
while (G__12333__i < G__12333__a.length) {G__12333__a[G__12333__i] = arguments[G__12333__i + 3]; ++G__12333__i;}
G__12332 = new cljs.core.IndexedSeq(G__12333__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__12332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__12336__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12337 = ret;
var G__12338 = cljs.core.first(ks);
var G__12339 = cljs.core.next(ks);
coll = G__12337;
k = G__12338;
ks = G__12339;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12336 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12340__i = 0, G__12340__a = new Array(arguments.length -  2);
while (G__12340__i < G__12340__a.length) {G__12340__a[G__12340__i] = arguments[G__12340__i + 2]; ++G__12340__i;}
  ks = new cljs.core.IndexedSeq(G__12340__a,0);
} 
return G__12336__delegate.call(this,coll,k,ks);};
G__12336.cljs$lang$maxFixedArity = 2;
G__12336.cljs$lang$applyTo = (function (arglist__12341){
var coll = cljs.core.first(arglist__12341);
arglist__12341 = cljs.core.next(arglist__12341);
var k = cljs.core.first(arglist__12341);
var ks = cljs.core.rest(arglist__12341);
return G__12336__delegate(coll,k,ks);
});
G__12336.cljs$core$IFn$_invoke$arity$variadic = G__12336__delegate;
return G__12336;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__12342 = null;
if (arguments.length > 2) {
var G__12343__i = 0, G__12343__a = new Array(arguments.length -  2);
while (G__12343__i < G__12343__a.length) {G__12343__a[G__12343__i] = arguments[G__12343__i + 2]; ++G__12343__i;}
G__12342 = new cljs.core.IndexedSeq(G__12343__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3929__auto__ = (function (){var G__12348 = f;
return goog.isFunction(G__12348);
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__12349 = f;
if(G__12349){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto____$1 = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
return G__12349.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__12349.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12349);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12349);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12815 = null;
var G__12815__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12815__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12351 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12351) : self__.afn.call(null,G__12351));
});
var G__12815__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12352 = a;
var G__12353 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12352,G__12353) : self__.afn.call(null,G__12352,G__12353));
});
var G__12815__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12354 = a;
var G__12355 = b;
var G__12356 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12354,G__12355,G__12356) : self__.afn.call(null,G__12354,G__12355,G__12356));
});
var G__12815__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12357 = a;
var G__12358 = b;
var G__12359 = c;
var G__12360 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12357,G__12358,G__12359,G__12360) : self__.afn.call(null,G__12357,G__12358,G__12359,G__12360));
});
var G__12815__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12361 = a;
var G__12362 = b;
var G__12363 = c;
var G__12364 = d;
var G__12365 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12361,G__12362,G__12363,G__12364,G__12365) : self__.afn.call(null,G__12361,G__12362,G__12363,G__12364,G__12365));
});
var G__12815__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12366 = a;
var G__12367 = b;
var G__12368 = c;
var G__12369 = d;
var G__12370 = e;
var G__12371 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12366,G__12367,G__12368,G__12369,G__12370,G__12371) : self__.afn.call(null,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371));
});
var G__12815__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12372 = a;
var G__12373 = b;
var G__12374 = c;
var G__12375 = d;
var G__12376 = e;
var G__12377 = f;
var G__12378 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378) : self__.afn.call(null,G__12372,G__12373,G__12374,G__12375,G__12376,G__12377,G__12378));
});
var G__12815__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12379 = a;
var G__12380 = b;
var G__12381 = c;
var G__12382 = d;
var G__12383 = e;
var G__12384 = f;
var G__12385 = g;
var G__12386 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386) : self__.afn.call(null,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384,G__12385,G__12386));
});
var G__12815__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12387 = a;
var G__12388 = b;
var G__12389 = c;
var G__12390 = d;
var G__12391 = e;
var G__12392 = f;
var G__12393 = g;
var G__12394 = h;
var G__12395 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395) : self__.afn.call(null,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395));
});
var G__12815__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12396 = a;
var G__12397 = b;
var G__12398 = c;
var G__12399 = d;
var G__12400 = e;
var G__12401 = f;
var G__12402 = g;
var G__12403 = h;
var G__12404 = i;
var G__12405 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405) : self__.afn.call(null,G__12396,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405));
});
var G__12815__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12406 = a;
var G__12407 = b;
var G__12408 = c;
var G__12409 = d;
var G__12410 = e;
var G__12411 = f;
var G__12412 = g;
var G__12413 = h;
var G__12414 = i;
var G__12415 = j;
var G__12416 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416) : self__.afn.call(null,G__12406,G__12407,G__12408,G__12409,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416));
});
var G__12815__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12417 = a;
var G__12418 = b;
var G__12419 = c;
var G__12420 = d;
var G__12421 = e;
var G__12422 = f;
var G__12423 = g;
var G__12424 = h;
var G__12425 = i;
var G__12426 = j;
var G__12427 = k;
var G__12428 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428) : self__.afn.call(null,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423,G__12424,G__12425,G__12426,G__12427,G__12428));
});
var G__12815__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12429 = a;
var G__12430 = b;
var G__12431 = c;
var G__12432 = d;
var G__12433 = e;
var G__12434 = f;
var G__12435 = g;
var G__12436 = h;
var G__12437 = i;
var G__12438 = j;
var G__12439 = k;
var G__12440 = l;
var G__12441 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437,G__12438,G__12439,G__12440,G__12441) : self__.afn.call(null,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437,G__12438,G__12439,G__12440,G__12441));
});
var G__12815__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12442 = a;
var G__12443 = b;
var G__12444 = c;
var G__12445 = d;
var G__12446 = e;
var G__12447 = f;
var G__12448 = g;
var G__12449 = h;
var G__12450 = i;
var G__12451 = j;
var G__12452 = k;
var G__12453 = l;
var G__12454 = m;
var G__12455 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455) : self__.afn.call(null,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454,G__12455));
});
var G__12815__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12456 = a;
var G__12457 = b;
var G__12458 = c;
var G__12459 = d;
var G__12460 = e;
var G__12461 = f;
var G__12462 = g;
var G__12463 = h;
var G__12464 = i;
var G__12465 = j;
var G__12466 = k;
var G__12467 = l;
var G__12468 = m;
var G__12469 = n;
var G__12470 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470) : self__.afn.call(null,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470));
});
var G__12815__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12471 = a;
var G__12472 = b;
var G__12473 = c;
var G__12474 = d;
var G__12475 = e;
var G__12476 = f;
var G__12477 = g;
var G__12478 = h;
var G__12479 = i;
var G__12480 = j;
var G__12481 = k;
var G__12482 = l;
var G__12483 = m;
var G__12484 = n;
var G__12485 = o;
var G__12486 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486) : self__.afn.call(null,G__12471,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486));
});
var G__12815__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12487 = a;
var G__12488 = b;
var G__12489 = c;
var G__12490 = d;
var G__12491 = e;
var G__12492 = f;
var G__12493 = g;
var G__12494 = h;
var G__12495 = i;
var G__12496 = j;
var G__12497 = k;
var G__12498 = l;
var G__12499 = m;
var G__12500 = n;
var G__12501 = o;
var G__12502 = p;
var G__12503 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503) : self__.afn.call(null,G__12487,G__12488,G__12489,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503));
});
var G__12815__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12504 = a;
var G__12505 = b;
var G__12506 = c;
var G__12507 = d;
var G__12508 = e;
var G__12509 = f;
var G__12510 = g;
var G__12511 = h;
var G__12512 = i;
var G__12513 = j;
var G__12514 = k;
var G__12515 = l;
var G__12516 = m;
var G__12517 = n;
var G__12518 = o;
var G__12519 = p;
var G__12520 = q;
var G__12521 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12504,G__12505,G__12506,G__12507,G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521) : self__.afn.call(null,G__12504,G__12505,G__12506,G__12507,G__12508,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521));
});
var G__12815__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12522 = a;
var G__12523 = b;
var G__12524 = c;
var G__12525 = d;
var G__12526 = e;
var G__12527 = f;
var G__12528 = g;
var G__12529 = h;
var G__12530 = i;
var G__12531 = j;
var G__12532 = k;
var G__12533 = l;
var G__12534 = m;
var G__12535 = n;
var G__12536 = o;
var G__12537 = p;
var G__12538 = q;
var G__12539 = r;
var G__12540 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540) : self__.afn.call(null,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540));
});
var G__12815__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12541 = a;
var G__12542 = b;
var G__12543 = c;
var G__12544 = d;
var G__12545 = e;
var G__12546 = f;
var G__12547 = g;
var G__12548 = h;
var G__12549 = i;
var G__12550 = j;
var G__12551 = k;
var G__12552 = l;
var G__12553 = m;
var G__12554 = n;
var G__12555 = o;
var G__12556 = p;
var G__12557 = q;
var G__12558 = r;
var G__12559 = s;
var G__12560 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560) : self__.afn.call(null,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550,G__12551,G__12552,G__12553,G__12554,G__12555,G__12556,G__12557,G__12558,G__12559,G__12560));
});
var G__12815__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12561 = self__.afn;
var G__12562 = a;
var G__12563 = b;
var G__12564 = c;
var G__12565 = d;
var G__12566 = e;
var G__12567 = f;
var G__12568 = g;
var G__12569 = h;
var G__12570 = i;
var G__12571 = j;
var G__12572 = k;
var G__12573 = l;
var G__12574 = m;
var G__12575 = n;
var G__12576 = o;
var G__12577 = p;
var G__12578 = q;
var G__12579 = r;
var G__12580 = s;
var G__12581 = t;
var G__12582 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582) : cljs.core.apply.call(null,G__12561,G__12562,G__12563,G__12564,G__12565,G__12566,G__12567,G__12568,G__12569,G__12570,G__12571,G__12572,G__12573,G__12574,G__12575,G__12576,G__12577,G__12578,G__12579,G__12580,G__12581,G__12582));
});
G__12815 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12815__1.call(this,self__);
case 2:
return G__12815__2.call(this,self__,a);
case 3:
return G__12815__3.call(this,self__,a,b);
case 4:
return G__12815__4.call(this,self__,a,b,c);
case 5:
return G__12815__5.call(this,self__,a,b,c,d);
case 6:
return G__12815__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12815__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12815__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12815__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12815__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12815__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12815__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12815__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12815__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12815__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12815__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12815__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12815__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12815__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12815__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12815__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12815__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12815.cljs$core$IFn$_invoke$arity$1 = G__12815__1;
G__12815.cljs$core$IFn$_invoke$arity$2 = G__12815__2;
G__12815.cljs$core$IFn$_invoke$arity$3 = G__12815__3;
G__12815.cljs$core$IFn$_invoke$arity$4 = G__12815__4;
G__12815.cljs$core$IFn$_invoke$arity$5 = G__12815__5;
G__12815.cljs$core$IFn$_invoke$arity$6 = G__12815__6;
G__12815.cljs$core$IFn$_invoke$arity$7 = G__12815__7;
G__12815.cljs$core$IFn$_invoke$arity$8 = G__12815__8;
G__12815.cljs$core$IFn$_invoke$arity$9 = G__12815__9;
G__12815.cljs$core$IFn$_invoke$arity$10 = G__12815__10;
G__12815.cljs$core$IFn$_invoke$arity$11 = G__12815__11;
G__12815.cljs$core$IFn$_invoke$arity$12 = G__12815__12;
G__12815.cljs$core$IFn$_invoke$arity$13 = G__12815__13;
G__12815.cljs$core$IFn$_invoke$arity$14 = G__12815__14;
G__12815.cljs$core$IFn$_invoke$arity$15 = G__12815__15;
G__12815.cljs$core$IFn$_invoke$arity$16 = G__12815__16;
G__12815.cljs$core$IFn$_invoke$arity$17 = G__12815__17;
G__12815.cljs$core$IFn$_invoke$arity$18 = G__12815__18;
G__12815.cljs$core$IFn$_invoke$arity$19 = G__12815__19;
G__12815.cljs$core$IFn$_invoke$arity$20 = G__12815__20;
G__12815.cljs$core$IFn$_invoke$arity$21 = G__12815__21;
G__12815.cljs$core$IFn$_invoke$arity$22 = G__12815__22;
return G__12815;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args12350){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12350)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12583 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12583) : self__.afn.call(null,G__12583));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12584 = a;
var G__12585 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12584,G__12585) : self__.afn.call(null,G__12584,G__12585));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12586 = a;
var G__12587 = b;
var G__12588 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12586,G__12587,G__12588) : self__.afn.call(null,G__12586,G__12587,G__12588));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12589 = a;
var G__12590 = b;
var G__12591 = c;
var G__12592 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12589,G__12590,G__12591,G__12592) : self__.afn.call(null,G__12589,G__12590,G__12591,G__12592));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12593 = a;
var G__12594 = b;
var G__12595 = c;
var G__12596 = d;
var G__12597 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12593,G__12594,G__12595,G__12596,G__12597) : self__.afn.call(null,G__12593,G__12594,G__12595,G__12596,G__12597));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12598 = a;
var G__12599 = b;
var G__12600 = c;
var G__12601 = d;
var G__12602 = e;
var G__12603 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12598,G__12599,G__12600,G__12601,G__12602,G__12603) : self__.afn.call(null,G__12598,G__12599,G__12600,G__12601,G__12602,G__12603));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12604 = a;
var G__12605 = b;
var G__12606 = c;
var G__12607 = d;
var G__12608 = e;
var G__12609 = f;
var G__12610 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610) : self__.afn.call(null,G__12604,G__12605,G__12606,G__12607,G__12608,G__12609,G__12610));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12611 = a;
var G__12612 = b;
var G__12613 = c;
var G__12614 = d;
var G__12615 = e;
var G__12616 = f;
var G__12617 = g;
var G__12618 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618) : self__.afn.call(null,G__12611,G__12612,G__12613,G__12614,G__12615,G__12616,G__12617,G__12618));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12619 = a;
var G__12620 = b;
var G__12621 = c;
var G__12622 = d;
var G__12623 = e;
var G__12624 = f;
var G__12625 = g;
var G__12626 = h;
var G__12627 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627) : self__.afn.call(null,G__12619,G__12620,G__12621,G__12622,G__12623,G__12624,G__12625,G__12626,G__12627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12628 = a;
var G__12629 = b;
var G__12630 = c;
var G__12631 = d;
var G__12632 = e;
var G__12633 = f;
var G__12634 = g;
var G__12635 = h;
var G__12636 = i;
var G__12637 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637) : self__.afn.call(null,G__12628,G__12629,G__12630,G__12631,G__12632,G__12633,G__12634,G__12635,G__12636,G__12637));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12638 = a;
var G__12639 = b;
var G__12640 = c;
var G__12641 = d;
var G__12642 = e;
var G__12643 = f;
var G__12644 = g;
var G__12645 = h;
var G__12646 = i;
var G__12647 = j;
var G__12648 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648) : self__.afn.call(null,G__12638,G__12639,G__12640,G__12641,G__12642,G__12643,G__12644,G__12645,G__12646,G__12647,G__12648));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12649 = a;
var G__12650 = b;
var G__12651 = c;
var G__12652 = d;
var G__12653 = e;
var G__12654 = f;
var G__12655 = g;
var G__12656 = h;
var G__12657 = i;
var G__12658 = j;
var G__12659 = k;
var G__12660 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660) : self__.afn.call(null,G__12649,G__12650,G__12651,G__12652,G__12653,G__12654,G__12655,G__12656,G__12657,G__12658,G__12659,G__12660));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12661 = a;
var G__12662 = b;
var G__12663 = c;
var G__12664 = d;
var G__12665 = e;
var G__12666 = f;
var G__12667 = g;
var G__12668 = h;
var G__12669 = i;
var G__12670 = j;
var G__12671 = k;
var G__12672 = l;
var G__12673 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673) : self__.afn.call(null,G__12661,G__12662,G__12663,G__12664,G__12665,G__12666,G__12667,G__12668,G__12669,G__12670,G__12671,G__12672,G__12673));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12674 = a;
var G__12675 = b;
var G__12676 = c;
var G__12677 = d;
var G__12678 = e;
var G__12679 = f;
var G__12680 = g;
var G__12681 = h;
var G__12682 = i;
var G__12683 = j;
var G__12684 = k;
var G__12685 = l;
var G__12686 = m;
var G__12687 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687) : self__.afn.call(null,G__12674,G__12675,G__12676,G__12677,G__12678,G__12679,G__12680,G__12681,G__12682,G__12683,G__12684,G__12685,G__12686,G__12687));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12688 = a;
var G__12689 = b;
var G__12690 = c;
var G__12691 = d;
var G__12692 = e;
var G__12693 = f;
var G__12694 = g;
var G__12695 = h;
var G__12696 = i;
var G__12697 = j;
var G__12698 = k;
var G__12699 = l;
var G__12700 = m;
var G__12701 = n;
var G__12702 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702) : self__.afn.call(null,G__12688,G__12689,G__12690,G__12691,G__12692,G__12693,G__12694,G__12695,G__12696,G__12697,G__12698,G__12699,G__12700,G__12701,G__12702));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12703 = a;
var G__12704 = b;
var G__12705 = c;
var G__12706 = d;
var G__12707 = e;
var G__12708 = f;
var G__12709 = g;
var G__12710 = h;
var G__12711 = i;
var G__12712 = j;
var G__12713 = k;
var G__12714 = l;
var G__12715 = m;
var G__12716 = n;
var G__12717 = o;
var G__12718 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718) : self__.afn.call(null,G__12703,G__12704,G__12705,G__12706,G__12707,G__12708,G__12709,G__12710,G__12711,G__12712,G__12713,G__12714,G__12715,G__12716,G__12717,G__12718));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12719 = a;
var G__12720 = b;
var G__12721 = c;
var G__12722 = d;
var G__12723 = e;
var G__12724 = f;
var G__12725 = g;
var G__12726 = h;
var G__12727 = i;
var G__12728 = j;
var G__12729 = k;
var G__12730 = l;
var G__12731 = m;
var G__12732 = n;
var G__12733 = o;
var G__12734 = p;
var G__12735 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735) : self__.afn.call(null,G__12719,G__12720,G__12721,G__12722,G__12723,G__12724,G__12725,G__12726,G__12727,G__12728,G__12729,G__12730,G__12731,G__12732,G__12733,G__12734,G__12735));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12736 = a;
var G__12737 = b;
var G__12738 = c;
var G__12739 = d;
var G__12740 = e;
var G__12741 = f;
var G__12742 = g;
var G__12743 = h;
var G__12744 = i;
var G__12745 = j;
var G__12746 = k;
var G__12747 = l;
var G__12748 = m;
var G__12749 = n;
var G__12750 = o;
var G__12751 = p;
var G__12752 = q;
var G__12753 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12736,G__12737,G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753) : self__.afn.call(null,G__12736,G__12737,G__12738,G__12739,G__12740,G__12741,G__12742,G__12743,G__12744,G__12745,G__12746,G__12747,G__12748,G__12749,G__12750,G__12751,G__12752,G__12753));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12754 = a;
var G__12755 = b;
var G__12756 = c;
var G__12757 = d;
var G__12758 = e;
var G__12759 = f;
var G__12760 = g;
var G__12761 = h;
var G__12762 = i;
var G__12763 = j;
var G__12764 = k;
var G__12765 = l;
var G__12766 = m;
var G__12767 = n;
var G__12768 = o;
var G__12769 = p;
var G__12770 = q;
var G__12771 = r;
var G__12772 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772) : self__.afn.call(null,G__12754,G__12755,G__12756,G__12757,G__12758,G__12759,G__12760,G__12761,G__12762,G__12763,G__12764,G__12765,G__12766,G__12767,G__12768,G__12769,G__12770,G__12771,G__12772));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12773 = a;
var G__12774 = b;
var G__12775 = c;
var G__12776 = d;
var G__12777 = e;
var G__12778 = f;
var G__12779 = g;
var G__12780 = h;
var G__12781 = i;
var G__12782 = j;
var G__12783 = k;
var G__12784 = l;
var G__12785 = m;
var G__12786 = n;
var G__12787 = o;
var G__12788 = p;
var G__12789 = q;
var G__12790 = r;
var G__12791 = s;
var G__12792 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792) : self__.afn.call(null,G__12773,G__12774,G__12775,G__12776,G__12777,G__12778,G__12779,G__12780,G__12781,G__12782,G__12783,G__12784,G__12785,G__12786,G__12787,G__12788,G__12789,G__12790,G__12791,G__12792));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12793 = self__.afn;
var G__12794 = a;
var G__12795 = b;
var G__12796 = c;
var G__12797 = d;
var G__12798 = e;
var G__12799 = f;
var G__12800 = g;
var G__12801 = h;
var G__12802 = i;
var G__12803 = j;
var G__12804 = k;
var G__12805 = l;
var G__12806 = m;
var G__12807 = n;
var G__12808 = o;
var G__12809 = p;
var G__12810 = q;
var G__12811 = r;
var G__12812 = s;
var G__12813 = t;
var G__12814 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814) : cljs.core.apply.call(null,G__12793,G__12794,G__12795,G__12796,G__12797,G__12798,G__12799,G__12800,G__12801,G__12802,G__12803,G__12804,G__12805,G__12806,G__12807,G__12808,G__12809,G__12810,G__12811,G__12812,G__12813,G__12814));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12819 = o;
if(G__12819){
var bit__4610__auto__ = (G__12819.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4610__auto__) || (G__12819.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12819.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12819);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12819);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3917__auto__ = !((o == null));
if(and__3917__auto__){
var G__12823 = o;
if(G__12823){
var bit__4610__auto__ = (G__12823.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4610__auto__) || (G__12823.cljs$core$IMeta$)){
return true;
} else {
if((!G__12823.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12823);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12823);
}
} else {
return and__3917__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12826__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12827 = ret;
var G__12828 = cljs.core.first(ks);
var G__12829 = cljs.core.next(ks);
coll = G__12827;
k = G__12828;
ks = G__12829;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12826 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12830__i = 0, G__12830__a = new Array(arguments.length -  2);
while (G__12830__i < G__12830__a.length) {G__12830__a[G__12830__i] = arguments[G__12830__i + 2]; ++G__12830__i;}
  ks = new cljs.core.IndexedSeq(G__12830__a,0);
} 
return G__12826__delegate.call(this,coll,k,ks);};
G__12826.cljs$lang$maxFixedArity = 2;
G__12826.cljs$lang$applyTo = (function (arglist__12831){
var coll = cljs.core.first(arglist__12831);
arglist__12831 = cljs.core.next(arglist__12831);
var k = cljs.core.first(arglist__12831);
var ks = cljs.core.rest(arglist__12831);
return G__12826__delegate(coll,k,ks);
});
G__12826.cljs$core$IFn$_invoke$arity$variadic = G__12826__delegate;
return G__12826;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12832 = null;
if (arguments.length > 2) {
var G__12833__i = 0, G__12833__a = new Array(arguments.length -  2);
while (G__12833__i < G__12833__a.length) {G__12833__a[G__12833__i] = arguments[G__12833__i + 2]; ++G__12833__i;}
G__12832 = new cljs.core.IndexedSeq(G__12833__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12835 = x;
if(G__12835){
var bit__4610__auto__ = (G__12835.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4610__auto__) || (G__12835.cljs$core$ICollection$)){
return true;
} else {
if((!G__12835.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12835);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12835);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12837 = x;
if(G__12837){
var bit__4610__auto__ = (G__12837.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4610__auto__) || (G__12837.cljs$core$ISet$)){
return true;
} else {
if((!G__12837.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12837);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12837);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12839 = x;
if(G__12839){
var bit__4610__auto__ = (G__12839.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4610__auto__) || (G__12839.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12839.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12839);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12841 = x;
if(G__12841){
var bit__4610__auto__ = (G__12841.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4610__auto__) || (G__12841.cljs$core$ISequential$)){
return true;
} else {
if((!G__12841.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12841);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12841);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12843 = x;
if(G__12843){
var bit__4610__auto__ = (G__12843.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4610__auto__) || (G__12843.cljs$core$ISorted$)){
return true;
} else {
if((!G__12843.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12843);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12843);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12845 = x;
if(G__12845){
var bit__4610__auto__ = (G__12845.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4610__auto__) || (G__12845.cljs$core$IReduce$)){
return true;
} else {
if((!G__12845.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12845);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12845);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12847 = x;
if(G__12847){
var bit__4610__auto__ = (G__12847.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4610__auto__) || (G__12847.cljs$core$IMap$)){
return true;
} else {
if((!G__12847.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12847);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12847);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12849 = x;
if(G__12849){
var bit__4610__auto__ = (G__12849.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4610__auto__) || (G__12849.cljs$core$IVector$)){
return true;
} else {
if((!G__12849.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12849);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12851 = x;
if(G__12851){
var bit__4603__auto__ = (G__12851.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4603__auto__) || (G__12851.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12857 = {};
return obj12857;
});
var js_obj__1 = (function() { 
var G__12860__delegate = function (keyvals){
var G__12858 = goog.object.create;
var G__12859 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12858,G__12859) : cljs.core.apply.call(null,G__12858,G__12859));
};
var G__12860 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12861__i = 0, G__12861__a = new Array(arguments.length -  0);
while (G__12861__i < G__12861__a.length) {G__12861__a[G__12861__i] = arguments[G__12861__i + 0]; ++G__12861__i;}
  keyvals = new cljs.core.IndexedSeq(G__12861__a,0);
} 
return G__12860__delegate.call(this,keyvals);};
G__12860.cljs$lang$maxFixedArity = 0;
G__12860.cljs$lang$applyTo = (function (arglist__12862){
var keyvals = cljs.core.seq(arglist__12862);
return G__12860__delegate(keyvals);
});
G__12860.cljs$core$IFn$_invoke$arity$variadic = G__12860__delegate;
return G__12860;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12863 = null;
if (arguments.length > 0) {
var G__12864__i = 0, G__12864__a = new Array(arguments.length -  0);
while (G__12864__i < G__12864__a.length) {G__12864__a[G__12864__i] = arguments[G__12864__i + 0]; ++G__12864__i;}
G__12863 = new cljs.core.IndexedSeq(G__12864__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12863);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12867_12869 = obj;
var G__12868_12870 = ((function (G__12867_12869,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12867_12869,keys))
;
goog.object.forEach(G__12867_12869,G__12868_12870);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12871 = (i__$1 + (1));
var G__12872 = (j__$1 + (1));
var G__12873 = (len__$1 - (1));
i__$1 = G__12871;
j__$1 = G__12872;
len__$1 = G__12873;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12874 = (i__$1 - (1));
var G__12875 = (j__$1 - (1));
var G__12876 = (len__$1 - (1));
i__$1 = G__12874;
j__$1 = G__12875;
len__$1 = G__12876;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12878 = {};
return obj12878;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12880 = s;
if(G__12880){
var bit__4610__auto__ = (G__12880.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4610__auto__) || (G__12880.cljs$core$ISeq$)){
return true;
} else {
if((!G__12880.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12880);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12880);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12882 = s;
if(G__12882){
var bit__4610__auto__ = (G__12882.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4610__auto__) || (G__12882.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12882.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12882);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12882);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3929__auto__ = cljs.core.fn_QMARK_(f);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var G__12886 = f;
if(G__12886){
var bit__4610__auto__ = (G__12886.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4610__auto__) || (G__12886.cljs$core$IFn$)){
return true;
} else {
if((!G__12886.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12886);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12886);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12899 = n;
return isNaN(G__12899);
})())) && (!((n === Infinity))) && (((function (){var G__12900 = n;
return parseFloat(G__12900);
})() === (function (){var G__12901 = n;
var G__12902 = (10);
return parseInt(G__12901,G__12902);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12903__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12905 = etc;
s = G__12904;
xs = G__12905;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12903 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12906__i = 0, G__12906__a = new Array(arguments.length -  2);
while (G__12906__i < G__12906__a.length) {G__12906__a[G__12906__i] = arguments[G__12906__i + 2]; ++G__12906__i;}
  more = new cljs.core.IndexedSeq(G__12906__a,0);
} 
return G__12903__delegate.call(this,x,y,more);};
G__12903.cljs$lang$maxFixedArity = 2;
G__12903.cljs$lang$applyTo = (function (arglist__12907){
var x = cljs.core.first(arglist__12907);
arglist__12907 = cljs.core.next(arglist__12907);
var y = cljs.core.first(arglist__12907);
var more = cljs.core.rest(arglist__12907);
return G__12903__delegate(x,y,more);
});
G__12903.cljs$core$IFn$_invoke$arity$variadic = G__12903__delegate;
return G__12903;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12908 = null;
if (arguments.length > 2) {
var G__12909__i = 0, G__12909__a = new Array(arguments.length -  2);
while (G__12909__i < G__12909__a.length) {G__12909__a[G__12909__i] = arguments[G__12909__i + 2]; ++G__12909__i;}
G__12908 = new cljs.core.IndexedSeq(G__12909__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12913 = x;
if(G__12913){
var bit__4603__auto__ = (G__12913.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4603__auto__) || (G__12913.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12914 = x;
var G__12915 = y;
return goog.array.defaultCompare(G__12914,G__12915);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12920 = xs;
var G__12921 = ys;
var G__12922 = len;
var G__12923 = (n + (1));
xs = G__12920;
ys = G__12921;
len = G__12922;
n = G__12923;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12928 = x;
var G__12929 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12928,G__12929) : f.call(null,G__12928,G__12929));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12930 = y;
var G__12931 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12930,G__12931) : f.call(null,G__12930,G__12931));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12937 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12937) : cljs.core.to_array.call(null,G__12937));
})();
var G__12938_12940 = a;
var G__12939_12941 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12938_12940,G__12939_12941);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12947 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12947) : keyfn.call(null,G__12947));
})(),(function (){var G__12948 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12948) : keyfn.call(null,G__12948));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12954 = f;
var G__12955 = cljs.core.first(s);
var G__12956 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12954,G__12955,G__12956) : cljs.core.reduce.call(null,G__12954,G__12955,G__12956));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12957 = val__$1;
var G__12958 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12957,G__12958) : f.call(null,G__12957,G__12958));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12959 = nval;
var G__12960 = cljs.core.next(coll__$1);
val__$1 = G__12959;
coll__$1 = G__12960;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12964 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12964) : cljs.core.to_array.call(null,G__12964));
})();
var G__12965_12967 = a;
goog.array.shuffle(G__12965_12967);

var G__12966 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12966) : cljs.core.vec.call(null,G__12966));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12970 = coll;
if(G__12970){
var bit__4603__auto__ = (G__12970.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4603__auto__) || (G__12970.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12971 = coll;
if(G__12971){
var bit__4603__auto__ = (G__12971.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4603__auto__) || (G__12971.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12980 = null;
var G__12980__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12980__1 = (function (x){
var G__12977 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12977) : cf.call(null,G__12977));
});
var G__12980__2 = (function (x,y){
var G__12978 = x;
var G__12979 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12978,G__12979) : f.call(null,G__12978,G__12979));
});
G__12980 = function(x,y){
switch(arguments.length){
case 0:
return G__12980__0.call(this);
case 1:
return G__12980__1.call(this,x);
case 2:
return G__12980__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12980.cljs$core$IFn$_invoke$arity$0 = G__12980__0;
G__12980.cljs$core$IFn$_invoke$arity$1 = G__12980__1;
G__12980.cljs$core$IFn$_invoke$arity$2 = G__12980__2;
return G__12980;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12987 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12987) : xform.call(null,G__12987));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12988 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12988) : f__$1.call(null,G__12988));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12989__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12989 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12990__i = 0, G__12990__a = new Array(arguments.length -  2);
while (G__12990__i < G__12990__a.length) {G__12990__a[G__12990__i] = arguments[G__12990__i + 2]; ++G__12990__i;}
  more = new cljs.core.IndexedSeq(G__12990__a,0);
} 
return G__12989__delegate.call(this,x,y,more);};
G__12989.cljs$lang$maxFixedArity = 2;
G__12989.cljs$lang$applyTo = (function (arglist__12991){
var x = cljs.core.first(arglist__12991);
arglist__12991 = cljs.core.next(arglist__12991);
var y = cljs.core.first(arglist__12991);
var more = cljs.core.rest(arglist__12991);
return G__12989__delegate(x,y,more);
});
G__12989.cljs$core$IFn$_invoke$arity$variadic = G__12989__delegate;
return G__12989;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12992 = null;
if (arguments.length > 2) {
var G__12993__i = 0, G__12993__a = new Array(arguments.length -  2);
while (G__12993__i < G__12993__a.length) {G__12993__a[G__12993__i] = arguments[G__12993__i + 2]; ++G__12993__i;}
G__12992 = new cljs.core.IndexedSeq(G__12993__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12994__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12994 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12995__i = 0, G__12995__a = new Array(arguments.length -  2);
while (G__12995__i < G__12995__a.length) {G__12995__a[G__12995__i] = arguments[G__12995__i + 2]; ++G__12995__i;}
  more = new cljs.core.IndexedSeq(G__12995__a,0);
} 
return G__12994__delegate.call(this,x,y,more);};
G__12994.cljs$lang$maxFixedArity = 2;
G__12994.cljs$lang$applyTo = (function (arglist__12996){
var x = cljs.core.first(arglist__12996);
arglist__12996 = cljs.core.next(arglist__12996);
var y = cljs.core.first(arglist__12996);
var more = cljs.core.rest(arglist__12996);
return G__12994__delegate(x,y,more);
});
G__12994.cljs$core$IFn$_invoke$arity$variadic = G__12994__delegate;
return G__12994;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12997 = null;
if (arguments.length > 2) {
var G__12998__i = 0, G__12998__a = new Array(arguments.length -  2);
while (G__12998__i < G__12998__a.length) {G__12998__a[G__12998__i] = arguments[G__12998__i + 2]; ++G__12998__i;}
G__12997 = new cljs.core.IndexedSeq(G__12998__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12999__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12999 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13000__i = 0, G__13000__a = new Array(arguments.length -  2);
while (G__13000__i < G__13000__a.length) {G__13000__a[G__13000__i] = arguments[G__13000__i + 2]; ++G__13000__i;}
  more = new cljs.core.IndexedSeq(G__13000__a,0);
} 
return G__12999__delegate.call(this,x,y,more);};
G__12999.cljs$lang$maxFixedArity = 2;
G__12999.cljs$lang$applyTo = (function (arglist__13001){
var x = cljs.core.first(arglist__13001);
arglist__13001 = cljs.core.next(arglist__13001);
var y = cljs.core.first(arglist__13001);
var more = cljs.core.rest(arglist__13001);
return G__12999__delegate(x,y,more);
});
G__12999.cljs$core$IFn$_invoke$arity$variadic = G__12999__delegate;
return G__12999;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__13002 = null;
if (arguments.length > 2) {
var G__13003__i = 0, G__13003__a = new Array(arguments.length -  2);
while (G__13003__i < G__13003__a.length) {G__13003__a[G__13003__i] = arguments[G__13003__i + 2]; ++G__13003__i;}
G__13002 = new cljs.core.IndexedSeq(G__13003__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__13008__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13008 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13009__i = 0, G__13009__a = new Array(arguments.length -  2);
while (G__13009__i < G__13009__a.length) {G__13009__a[G__13009__i] = arguments[G__13009__i + 2]; ++G__13009__i;}
  more = new cljs.core.IndexedSeq(G__13009__a,0);
} 
return G__13008__delegate.call(this,x,y,more);};
G__13008.cljs$lang$maxFixedArity = 2;
G__13008.cljs$lang$applyTo = (function (arglist__13010){
var x = cljs.core.first(arglist__13010);
arglist__13010 = cljs.core.next(arglist__13010);
var y = cljs.core.first(arglist__13010);
var more = cljs.core.rest(arglist__13010);
return G__13008__delegate(x,y,more);
});
G__13008.cljs$core$IFn$_invoke$arity$variadic = G__13008__delegate;
return G__13008;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__13011 = null;
if (arguments.length > 2) {
var G__13012__i = 0, G__13012__a = new Array(arguments.length -  2);
while (G__13012__i < G__13012__a.length) {G__13012__a[G__13012__i] = arguments[G__13012__i + 2]; ++G__13012__i;}
G__13011 = new cljs.core.IndexedSeq(G__13012__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__13013__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__13014 = y;
var G__13015 = cljs.core.first(more);
var G__13016 = cljs.core.next(more);
x = G__13014;
y = G__13015;
more = G__13016;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13013 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13017__i = 0, G__13017__a = new Array(arguments.length -  2);
while (G__13017__i < G__13017__a.length) {G__13017__a[G__13017__i] = arguments[G__13017__i + 2]; ++G__13017__i;}
  more = new cljs.core.IndexedSeq(G__13017__a,0);
} 
return G__13013__delegate.call(this,x,y,more);};
G__13013.cljs$lang$maxFixedArity = 2;
G__13013.cljs$lang$applyTo = (function (arglist__13018){
var x = cljs.core.first(arglist__13018);
arglist__13018 = cljs.core.next(arglist__13018);
var y = cljs.core.first(arglist__13018);
var more = cljs.core.rest(arglist__13018);
return G__13013__delegate(x,y,more);
});
G__13013.cljs$core$IFn$_invoke$arity$variadic = G__13013__delegate;
return G__13013;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__13019 = null;
if (arguments.length > 2) {
var G__13020__i = 0, G__13020__a = new Array(arguments.length -  2);
while (G__13020__i < G__13020__a.length) {G__13020__a[G__13020__i] = arguments[G__13020__i + 2]; ++G__13020__i;}
G__13019 = new cljs.core.IndexedSeq(G__13020__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__13021__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__13022 = y;
var G__13023 = cljs.core.first(more);
var G__13024 = cljs.core.next(more);
x = G__13022;
y = G__13023;
more = G__13024;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13021 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13025__i = 0, G__13025__a = new Array(arguments.length -  2);
while (G__13025__i < G__13025__a.length) {G__13025__a[G__13025__i] = arguments[G__13025__i + 2]; ++G__13025__i;}
  more = new cljs.core.IndexedSeq(G__13025__a,0);
} 
return G__13021__delegate.call(this,x,y,more);};
G__13021.cljs$lang$maxFixedArity = 2;
G__13021.cljs$lang$applyTo = (function (arglist__13026){
var x = cljs.core.first(arglist__13026);
arglist__13026 = cljs.core.next(arglist__13026);
var y = cljs.core.first(arglist__13026);
var more = cljs.core.rest(arglist__13026);
return G__13021__delegate(x,y,more);
});
G__13021.cljs$core$IFn$_invoke$arity$variadic = G__13021__delegate;
return G__13021;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__13027 = null;
if (arguments.length > 2) {
var G__13028__i = 0, G__13028__a = new Array(arguments.length -  2);
while (G__13028__i < G__13028__a.length) {G__13028__a[G__13028__i] = arguments[G__13028__i + 2]; ++G__13028__i;}
G__13027 = new cljs.core.IndexedSeq(G__13028__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13027);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__13029__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__13030 = y;
var G__13031 = cljs.core.first(more);
var G__13032 = cljs.core.next(more);
x = G__13030;
y = G__13031;
more = G__13032;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13029 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13033__i = 0, G__13033__a = new Array(arguments.length -  2);
while (G__13033__i < G__13033__a.length) {G__13033__a[G__13033__i] = arguments[G__13033__i + 2]; ++G__13033__i;}
  more = new cljs.core.IndexedSeq(G__13033__a,0);
} 
return G__13029__delegate.call(this,x,y,more);};
G__13029.cljs$lang$maxFixedArity = 2;
G__13029.cljs$lang$applyTo = (function (arglist__13034){
var x = cljs.core.first(arglist__13034);
arglist__13034 = cljs.core.next(arglist__13034);
var y = cljs.core.first(arglist__13034);
var more = cljs.core.rest(arglist__13034);
return G__13029__delegate(x,y,more);
});
G__13029.cljs$core$IFn$_invoke$arity$variadic = G__13029__delegate;
return G__13029;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__13035 = null;
if (arguments.length > 2) {
var G__13036__i = 0, G__13036__a = new Array(arguments.length -  2);
while (G__13036__i < G__13036__a.length) {G__13036__a[G__13036__i] = arguments[G__13036__i + 2]; ++G__13036__i;}
G__13035 = new cljs.core.IndexedSeq(G__13036__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13035);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__13037__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__13038 = y;
var G__13039 = cljs.core.first(more);
var G__13040 = cljs.core.next(more);
x = G__13038;
y = G__13039;
more = G__13040;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13037 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13041__i = 0, G__13041__a = new Array(arguments.length -  2);
while (G__13041__i < G__13041__a.length) {G__13041__a[G__13041__i] = arguments[G__13041__i + 2]; ++G__13041__i;}
  more = new cljs.core.IndexedSeq(G__13041__a,0);
} 
return G__13037__delegate.call(this,x,y,more);};
G__13037.cljs$lang$maxFixedArity = 2;
G__13037.cljs$lang$applyTo = (function (arglist__13042){
var x = cljs.core.first(arglist__13042);
arglist__13042 = cljs.core.next(arglist__13042);
var y = cljs.core.first(arglist__13042);
var more = cljs.core.rest(arglist__13042);
return G__13037__delegate(x,y,more);
});
G__13037.cljs$core$IFn$_invoke$arity$variadic = G__13037__delegate;
return G__13037;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__13043 = null;
if (arguments.length > 2) {
var G__13044__i = 0, G__13044__a = new Array(arguments.length -  2);
while (G__13044__i < G__13044__a.length) {G__13044__a[G__13044__i] = arguments[G__13044__i + 2]; ++G__13044__i;}
G__13043 = new cljs.core.IndexedSeq(G__13044__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
});
var max__3 = (function() { 
var G__13045__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4246__auto__ = x;
var y__4247__auto__ = y;
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
})(),more);
};
var G__13045 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13046__i = 0, G__13046__a = new Array(arguments.length -  2);
while (G__13046__i < G__13046__a.length) {G__13046__a[G__13046__i] = arguments[G__13046__i + 2]; ++G__13046__i;}
  more = new cljs.core.IndexedSeq(G__13046__a,0);
} 
return G__13045__delegate.call(this,x,y,more);};
G__13045.cljs$lang$maxFixedArity = 2;
G__13045.cljs$lang$applyTo = (function (arglist__13047){
var x = cljs.core.first(arglist__13047);
arglist__13047 = cljs.core.next(arglist__13047);
var y = cljs.core.first(arglist__13047);
var more = cljs.core.rest(arglist__13047);
return G__13045__delegate(x,y,more);
});
G__13045.cljs$core$IFn$_invoke$arity$variadic = G__13045__delegate;
return G__13045;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__13048 = null;
if (arguments.length > 2) {
var G__13049__i = 0, G__13049__a = new Array(arguments.length -  2);
while (G__13049__i < G__13049__a.length) {G__13049__a[G__13049__i] = arguments[G__13049__i + 2]; ++G__13049__i;}
G__13048 = new cljs.core.IndexedSeq(G__13049__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13048);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4253__auto__ = x;
var y__4254__auto__ = y;
return ((x__4253__auto__ < y__4254__auto__) ? x__4253__auto__ : y__4254__auto__);
});
var min__3 = (function() { 
var G__13050__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4253__auto__ = x;
var y__4254__auto__ = y;
return ((x__4253__auto__ < y__4254__auto__) ? x__4253__auto__ : y__4254__auto__);
})(),more);
};
var G__13050 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13051__i = 0, G__13051__a = new Array(arguments.length -  2);
while (G__13051__i < G__13051__a.length) {G__13051__a[G__13051__i] = arguments[G__13051__i + 2]; ++G__13051__i;}
  more = new cljs.core.IndexedSeq(G__13051__a,0);
} 
return G__13050__delegate.call(this,x,y,more);};
G__13050.cljs$lang$maxFixedArity = 2;
G__13050.cljs$lang$applyTo = (function (arglist__13052){
var x = cljs.core.first(arglist__13052);
arglist__13052 = cljs.core.next(arglist__13052);
var y = cljs.core.first(arglist__13052);
var more = cljs.core.rest(arglist__13052);
return G__13050__delegate(x,y,more);
});
G__13050.cljs$core$IFn$_invoke$arity$variadic = G__13050__delegate;
return G__13050;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__13053 = null;
if (arguments.length > 2) {
var G__13054__i = 0, G__13054__a = new Array(arguments.length -  2);
while (G__13054__i < G__13054__a.length) {G__13054__a[G__13054__i] = arguments[G__13054__i + 2]; ++G__13054__i;}
G__13053 = new cljs.core.IndexedSeq(G__13054__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__13055__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__13055 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13056__i = 0, G__13056__a = new Array(arguments.length -  2);
while (G__13056__i < G__13056__a.length) {G__13056__a[G__13056__i] = arguments[G__13056__i + 2]; ++G__13056__i;}
  more = new cljs.core.IndexedSeq(G__13056__a,0);
} 
return G__13055__delegate.call(this,x,y,more);};
G__13055.cljs$lang$maxFixedArity = 2;
G__13055.cljs$lang$applyTo = (function (arglist__13057){
var x = cljs.core.first(arglist__13057);
arglist__13057 = cljs.core.next(arglist__13057);
var y = cljs.core.first(arglist__13057);
var more = cljs.core.rest(arglist__13057);
return G__13055__delegate(x,y,more);
});
G__13055.cljs$core$IFn$_invoke$arity$variadic = G__13055__delegate;
return G__13055;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__13058 = null;
if (arguments.length > 2) {
var G__13059__i = 0, G__13059__a = new Array(arguments.length -  2);
while (G__13059__i < G__13059__a.length) {G__13059__a[G__13059__i] = arguments[G__13059__i + 2]; ++G__13059__i;}
G__13058 = new cljs.core.IndexedSeq(G__13059__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__13060__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__13060 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13061__i = 0, G__13061__a = new Array(arguments.length -  2);
while (G__13061__i < G__13061__a.length) {G__13061__a[G__13061__i] = arguments[G__13061__i + 2]; ++G__13061__i;}
  more = new cljs.core.IndexedSeq(G__13061__a,0);
} 
return G__13060__delegate.call(this,x,y,more);};
G__13060.cljs$lang$maxFixedArity = 2;
G__13060.cljs$lang$applyTo = (function (arglist__13062){
var x = cljs.core.first(arglist__13062);
arglist__13062 = cljs.core.next(arglist__13062);
var y = cljs.core.first(arglist__13062);
var more = cljs.core.rest(arglist__13062);
return G__13060__delegate(x,y,more);
});
G__13060.cljs$core$IFn$_invoke$arity$variadic = G__13060__delegate;
return G__13060;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__13063 = null;
if (arguments.length > 2) {
var G__13064__i = 0, G__13064__a = new Array(arguments.length -  2);
while (G__13064__i < G__13064__a.length) {G__13064__a[G__13064__i] = arguments[G__13064__i + 2]; ++G__13064__i;}
G__13063 = new cljs.core.IndexedSeq(G__13064__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__13069__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13069 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13070__i = 0, G__13070__a = new Array(arguments.length -  2);
while (G__13070__i < G__13070__a.length) {G__13070__a[G__13070__i] = arguments[G__13070__i + 2]; ++G__13070__i;}
  more = new cljs.core.IndexedSeq(G__13070__a,0);
} 
return G__13069__delegate.call(this,x,y,more);};
G__13069.cljs$lang$maxFixedArity = 2;
G__13069.cljs$lang$applyTo = (function (arglist__13071){
var x = cljs.core.first(arglist__13071);
arglist__13071 = cljs.core.next(arglist__13071);
var y = cljs.core.first(arglist__13071);
var more = cljs.core.rest(arglist__13071);
return G__13069__delegate(x,y,more);
});
G__13069.cljs$core$IFn$_invoke$arity$variadic = G__13069__delegate;
return G__13069;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__13072 = null;
if (arguments.length > 2) {
var G__13073__i = 0, G__13073__a = new Array(arguments.length -  2);
while (G__13073__i < G__13073__a.length) {G__13073__a[G__13073__i] = arguments[G__13073__i + 2]; ++G__13073__i;}
G__13072 = new cljs.core.IndexedSeq(G__13073__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__13074__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__13074 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13075__i = 0, G__13075__a = new Array(arguments.length -  2);
while (G__13075__i < G__13075__a.length) {G__13075__a[G__13075__i] = arguments[G__13075__i + 2]; ++G__13075__i;}
  more = new cljs.core.IndexedSeq(G__13075__a,0);
} 
return G__13074__delegate.call(this,x,y,more);};
G__13074.cljs$lang$maxFixedArity = 2;
G__13074.cljs$lang$applyTo = (function (arglist__13076){
var x = cljs.core.first(arglist__13076);
arglist__13076 = cljs.core.next(arglist__13076);
var y = cljs.core.first(arglist__13076);
var more = cljs.core.rest(arglist__13076);
return G__13074__delegate(x,y,more);
});
G__13074.cljs$core$IFn$_invoke$arity$variadic = G__13074__delegate;
return G__13074;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__13077 = null;
if (arguments.length > 2) {
var G__13078__i = 0, G__13078__a = new Array(arguments.length -  2);
while (G__13078__i < G__13078__a.length) {G__13078__a[G__13078__i] = arguments[G__13078__i + 2]; ++G__13078__i;}
G__13077 = new cljs.core.IndexedSeq(G__13078__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__13079__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__13079 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13080__i = 0, G__13080__a = new Array(arguments.length -  2);
while (G__13080__i < G__13080__a.length) {G__13080__a[G__13080__i] = arguments[G__13080__i + 2]; ++G__13080__i;}
  more = new cljs.core.IndexedSeq(G__13080__a,0);
} 
return G__13079__delegate.call(this,x,y,more);};
G__13079.cljs$lang$maxFixedArity = 2;
G__13079.cljs$lang$applyTo = (function (arglist__13081){
var x = cljs.core.first(arglist__13081);
arglist__13081 = cljs.core.next(arglist__13081);
var y = cljs.core.first(arglist__13081);
var more = cljs.core.rest(arglist__13081);
return G__13079__delegate(x,y,more);
});
G__13079.cljs$core$IFn$_invoke$arity$variadic = G__13079__delegate;
return G__13079;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__13082 = null;
if (arguments.length > 2) {
var G__13083__i = 0, G__13083__a = new Array(arguments.length -  2);
while (G__13083__i < G__13083__a.length) {G__13083__a[G__13083__i] = arguments[G__13083__i + 2]; ++G__13083__i;}
G__13082 = new cljs.core.IndexedSeq(G__13083__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__13086 = x;
var G__13087 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13086,G__13087) : cljs.core.mod.call(null,G__13086,G__13087));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__13088__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__13088 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13089__i = 0, G__13089__a = new Array(arguments.length -  2);
while (G__13089__i < G__13089__a.length) {G__13089__a[G__13089__i] = arguments[G__13089__i + 2]; ++G__13089__i;}
  more = new cljs.core.IndexedSeq(G__13089__a,0);
} 
return G__13088__delegate.call(this,x,y,more);};
G__13088.cljs$lang$maxFixedArity = 2;
G__13088.cljs$lang$applyTo = (function (arglist__13090){
var x = cljs.core.first(arglist__13090);
arglist__13090 = cljs.core.next(arglist__13090);
var y = cljs.core.first(arglist__13090);
var more = cljs.core.rest(arglist__13090);
return G__13088__delegate(x,y,more);
});
G__13088.cljs$core$IFn$_invoke$arity$variadic = G__13088__delegate;
return G__13088;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__13091 = null;
if (arguments.length > 2) {
var G__13092__i = 0, G__13092__a = new Array(arguments.length -  2);
while (G__13092__i < G__13092__a.length) {G__13092__a[G__13092__i] = arguments[G__13092__i + 2]; ++G__13092__i;}
G__13091 = new cljs.core.IndexedSeq(G__13092__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__13093__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__13093 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13094__i = 0, G__13094__a = new Array(arguments.length -  2);
while (G__13094__i < G__13094__a.length) {G__13094__a[G__13094__i] = arguments[G__13094__i + 2]; ++G__13094__i;}
  more = new cljs.core.IndexedSeq(G__13094__a,0);
} 
return G__13093__delegate.call(this,x,y,more);};
G__13093.cljs$lang$maxFixedArity = 2;
G__13093.cljs$lang$applyTo = (function (arglist__13095){
var x = cljs.core.first(arglist__13095);
arglist__13095 = cljs.core.next(arglist__13095);
var y = cljs.core.first(arglist__13095);
var more = cljs.core.rest(arglist__13095);
return G__13093__delegate(x,y,more);
});
G__13093.cljs$core$IFn$_invoke$arity$variadic = G__13093__delegate;
return G__13093;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__13096 = null;
if (arguments.length > 2) {
var G__13097__i = 0, G__13097__a = new Array(arguments.length -  2);
while (G__13097__i < G__13097__a.length) {G__13097__a[G__13097__i] = arguments[G__13097__i + 2]; ++G__13097__i;}
G__13096 = new cljs.core.IndexedSeq(G__13097__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__13100 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13100) : Math.floor.call(null,G__13100));
} else {
var G__13101 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13101) : Math.ceil.call(null,G__13101));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__13102__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__13102 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13103__i = 0, G__13103__a = new Array(arguments.length -  2);
while (G__13103__i < G__13103__a.length) {G__13103__a[G__13103__i] = arguments[G__13103__i + 2]; ++G__13103__i;}
  more = new cljs.core.IndexedSeq(G__13103__a,0);
} 
return G__13102__delegate.call(this,x,y,more);};
G__13102.cljs$lang$maxFixedArity = 2;
G__13102.cljs$lang$applyTo = (function (arglist__13104){
var x = cljs.core.first(arglist__13104);
arglist__13104 = cljs.core.next(arglist__13104);
var y = cljs.core.first(arglist__13104);
var more = cljs.core.rest(arglist__13104);
return G__13102__delegate(x,y,more);
});
G__13102.cljs$core$IFn$_invoke$arity$variadic = G__13102__delegate;
return G__13102;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__13105 = null;
if (arguments.length > 2) {
var G__13106__i = 0, G__13106__a = new Array(arguments.length -  2);
while (G__13106__i < G__13106__a.length) {G__13106__a[G__13106__i] = arguments[G__13106__i + 2]; ++G__13106__i;}
G__13105 = new cljs.core.IndexedSeq(G__13106__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__13107__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__13107 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13108__i = 0, G__13108__a = new Array(arguments.length -  2);
while (G__13108__i < G__13108__a.length) {G__13108__a[G__13108__i] = arguments[G__13108__i + 2]; ++G__13108__i;}
  more = new cljs.core.IndexedSeq(G__13108__a,0);
} 
return G__13107__delegate.call(this,x,y,more);};
G__13107.cljs$lang$maxFixedArity = 2;
G__13107.cljs$lang$applyTo = (function (arglist__13109){
var x = cljs.core.first(arglist__13109);
arglist__13109 = cljs.core.next(arglist__13109);
var y = cljs.core.first(arglist__13109);
var more = cljs.core.rest(arglist__13109);
return G__13107__delegate(x,y,more);
});
G__13107.cljs$core$IFn$_invoke$arity$variadic = G__13107__delegate;
return G__13107;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__13110 = null;
if (arguments.length > 2) {
var G__13111__i = 0, G__13111__a = new Array(arguments.length -  2);
while (G__13111__i < G__13111__a.length) {G__13111__a[G__13111__i] = arguments[G__13111__i + 2]; ++G__13111__i;}
G__13110 = new cljs.core.IndexedSeq(G__13111__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13110);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__13112__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__13112 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13113__i = 0, G__13113__a = new Array(arguments.length -  2);
while (G__13113__i < G__13113__a.length) {G__13113__a[G__13113__i] = arguments[G__13113__i + 2]; ++G__13113__i;}
  more = new cljs.core.IndexedSeq(G__13113__a,0);
} 
return G__13112__delegate.call(this,x,y,more);};
G__13112.cljs$lang$maxFixedArity = 2;
G__13112.cljs$lang$applyTo = (function (arglist__13114){
var x = cljs.core.first(arglist__13114);
arglist__13114 = cljs.core.next(arglist__13114);
var y = cljs.core.first(arglist__13114);
var more = cljs.core.rest(arglist__13114);
return G__13112__delegate(x,y,more);
});
G__13112.cljs$core$IFn$_invoke$arity$variadic = G__13112__delegate;
return G__13112;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__13115 = null;
if (arguments.length > 2) {
var G__13116__i = 0, G__13116__a = new Array(arguments.length -  2);
while (G__13116__i < G__13116__a.length) {G__13116__a[G__13116__i] = arguments[G__13116__i + 2]; ++G__13116__i;}
G__13115 = new cljs.core.IndexedSeq(G__13116__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__13117__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__13117 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13118__i = 0, G__13118__a = new Array(arguments.length -  2);
while (G__13118__i < G__13118__a.length) {G__13118__a[G__13118__i] = arguments[G__13118__i + 2]; ++G__13118__i;}
  more = new cljs.core.IndexedSeq(G__13118__a,0);
} 
return G__13117__delegate.call(this,x,y,more);};
G__13117.cljs$lang$maxFixedArity = 2;
G__13117.cljs$lang$applyTo = (function (arglist__13119){
var x = cljs.core.first(arglist__13119);
arglist__13119 = cljs.core.next(arglist__13119);
var y = cljs.core.first(arglist__13119);
var more = cljs.core.rest(arglist__13119);
return G__13117__delegate(x,y,more);
});
G__13117.cljs$core$IFn$_invoke$arity$variadic = G__13117__delegate;
return G__13117;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__13120 = null;
if (arguments.length > 2) {
var G__13121__i = 0, G__13121__a = new Array(arguments.length -  2);
while (G__13121__i < G__13121__a.length) {G__13121__a[G__13121__i] = arguments[G__13121__i + 2]; ++G__13121__i;}
G__13120 = new cljs.core.IndexedSeq(G__13121__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__13126__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13127 = y;
var G__13128 = cljs.core.first(more);
var G__13129 = cljs.core.next(more);
x = G__13127;
y = G__13128;
more = G__13129;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13126 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13130__i = 0, G__13130__a = new Array(arguments.length -  2);
while (G__13130__i < G__13130__a.length) {G__13130__a[G__13130__i] = arguments[G__13130__i + 2]; ++G__13130__i;}
  more = new cljs.core.IndexedSeq(G__13130__a,0);
} 
return G__13126__delegate.call(this,x,y,more);};
G__13126.cljs$lang$maxFixedArity = 2;
G__13126.cljs$lang$applyTo = (function (arglist__13131){
var x = cljs.core.first(arglist__13131);
arglist__13131 = cljs.core.next(arglist__13131);
var y = cljs.core.first(arglist__13131);
var more = cljs.core.rest(arglist__13131);
return G__13126__delegate(x,y,more);
});
G__13126.cljs$core$IFn$_invoke$arity$variadic = G__13126__delegate;
return G__13126;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__13132 = null;
if (arguments.length > 2) {
var G__13133__i = 0, G__13133__a = new Array(arguments.length -  2);
while (G__13133__i < G__13133__a.length) {G__13133__a[G__13133__i] = arguments[G__13133__i + 2]; ++G__13133__i;}
G__13132 = new cljs.core.IndexedSeq(G__13133__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13132);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__13134 = (n__$1 - (1));
var G__13135 = cljs.core.next(xs);
n__$1 = G__13134;
xs = G__13135;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__13139 = x;
return goog.string.buildString(G__13139);
}
});
var str__2 = (function() { 
var G__13140__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__13141 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__13142 = cljs.core.next(more);
sb = G__13141;
more = G__13142;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__13140 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__13143__i = 0, G__13143__a = new Array(arguments.length -  1);
while (G__13143__i < G__13143__a.length) {G__13143__a[G__13143__i] = arguments[G__13143__i + 1]; ++G__13143__i;}
  ys = new cljs.core.IndexedSeq(G__13143__a,0);
} 
return G__13140__delegate.call(this,x,ys);};
G__13140.cljs$lang$maxFixedArity = 1;
G__13140.cljs$lang$applyTo = (function (arglist__13144){
var x = cljs.core.first(arglist__13144);
var ys = cljs.core.rest(arglist__13144);
return G__13140__delegate(x,ys);
});
G__13140.cljs$core$IFn$_invoke$arity$variadic = G__13140__delegate;
return G__13140;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__13145 = null;
if (arguments.length > 1) {
var G__13146__i = 0, G__13146__a = new Array(arguments.length -  1);
while (G__13146__i < G__13146__a.length) {G__13146__a[G__13146__i] = arguments[G__13146__i + 1]; ++G__13146__i;}
G__13145 = new cljs.core.IndexedSeq(G__13146__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__13147 = cljs.core.next(xs);
var G__13148 = cljs.core.next(ys);
xs = G__13147;
ys = G__13148;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__13149 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__13150 = cljs.core.next(s);
res = G__13149;
s = G__13150;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__13155 = ((h + (cljs.core.hash((function (){var G__13153 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13153) : cljs.core.key.call(null,G__13153));
})()) ^ cljs.core.hash((function (){var G__13154 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13154) : cljs.core.val.call(null,G__13154));
})()))) % (4503599627370496));
var G__13156 = cljs.core.next(s);
h = G__13155;
s = G__13156;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__13157 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__13158 = cljs.core.next(s__$1);
h = G__13157;
s__$1 = G__13158;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__13169_13179 = cljs.core.seq(fn_map);
var chunk__13170_13180 = null;
var count__13171_13181 = (0);
var i__13172_13182 = (0);
while(true){
if((i__13172_13182 < count__13171_13181)){
var vec__13173_13183 = chunk__13170_13180.cljs$core$IIndexed$_nth$arity$2(null,i__13172_13182);
var key_name_13184 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13173_13183,(0),null);
var f_13185 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13173_13183,(1),null);
var str_name_13186 = (function (){var G__13174 = key_name_13184;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13174) : cljs.core.name.call(null,G__13174));
})();
(obj[str_name_13186] = f_13185);

var G__13187 = seq__13169_13179;
var G__13188 = chunk__13170_13180;
var G__13189 = count__13171_13181;
var G__13190 = (i__13172_13182 + (1));
seq__13169_13179 = G__13187;
chunk__13170_13180 = G__13188;
count__13171_13181 = G__13189;
i__13172_13182 = G__13190;
continue;
} else {
var temp__4126__auto___13191 = cljs.core.seq(seq__13169_13179);
if(temp__4126__auto___13191){
var seq__13169_13192__$1 = temp__4126__auto___13191;
if(cljs.core.chunked_seq_QMARK_(seq__13169_13192__$1)){
var c__4716__auto___13193 = (function (){var G__13175 = seq__13169_13192__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13175) : cljs.core.chunk_first.call(null,G__13175));
})();
var G__13194 = (function (){var G__13176 = seq__13169_13192__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13176) : cljs.core.chunk_rest.call(null,G__13176));
})();
var G__13195 = c__4716__auto___13193;
var G__13196 = cljs.core.count(c__4716__auto___13193);
var G__13197 = (0);
seq__13169_13179 = G__13194;
chunk__13170_13180 = G__13195;
count__13171_13181 = G__13196;
i__13172_13182 = G__13197;
continue;
} else {
var vec__13177_13198 = cljs.core.first(seq__13169_13192__$1);
var key_name_13199 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13177_13198,(0),null);
var f_13200 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13177_13198,(1),null);
var str_name_13201 = (function (){var G__13178 = key_name_13199;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13178) : cljs.core.name.call(null,G__13178));
})();
(obj[str_name_13201] = f_13200);

var G__13202 = cljs.core.next(seq__13169_13192__$1);
var G__13203 = null;
var G__13204 = (0);
var G__13205 = (0);
seq__13169_13179 = G__13202;
chunk__13170_13180 = G__13203;
count__13171_13181 = G__13204;
i__13172_13182 = G__13205;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__13207 = coll;
if(G__13207){
var bit__4610__auto__ = (G__13207.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4610__auto__) || (G__13207.cljs$core$IReversible$)){
return true;
} else {
if((!G__13207.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13207);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13207);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__13208 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__13208;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__13209 = (i - (1));
var G__13210 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__13209;
r = G__13210;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__13211__i = 0, G__13211__a = new Array(arguments.length -  0);
while (G__13211__i < G__13211__a.length) {G__13211__a[G__13211__i] = arguments[G__13211__i + 0]; ++G__13211__i;}
  xs = new cljs.core.IndexedSeq(G__13211__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__13212){
var xs = cljs.core.seq(arglist__13212);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3929__auto__ = (coll == null);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var G__13216 = coll;
if(G__13216){
var bit__4603__auto__ = (G__13216.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4603__auto__) || (G__13216.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__13218 = x;
if(G__13218){
var bit__4610__auto__ = (G__13218.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4610__auto__) || (G__13218.cljs$core$IList$)){
return true;
} else {
if((!G__13218.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13218);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13218);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.not(a.ns);
if(and__3917__auto__){
return b.ns;
} else {
return and__3917__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13225 = a.ns;
var G__13226 = b.ns;
return goog.array.defaultCompare(G__13225,G__13226);
})();
if(((0) === nsc)){
var G__13227 = a.name;
var G__13228 = b.name;
return goog.array.defaultCompare(G__13227,G__13228);
} else {
return nsc;
}
}
} else {
var G__13229 = a.name;
var G__13230 = b.name;
return goog.array.defaultCompare(G__13229,G__13230);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4350__auto__ = self__._hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__13232 = null;
var G__13232__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__13232__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__13232 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13232__2.call(this,self__,coll);
case 3:
return G__13232__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13232.cljs$core$IFn$_invoke$arity$2 = G__13232__2;
G__13232.cljs$core$IFn$_invoke$arity$3 = G__13232__3;
return G__13232;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args13231){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13231)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__13234 = x;
if(G__13234){
var bit__4603__auto__ = (G__13234.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4603__auto__) || (G__13234.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__13236 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13236) : cljs.core.name.call(null,G__13236));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__13237 = ls.sval();
ls = G__13237;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__13239 = s;
if(G__13239){
var bit__4603__auto__ = (G__13239.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4603__auto__) || (G__13239.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__13240 = cljs.core.next(s__$1);
s__$1 = G__13240;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_13241 = (0);
var xs_13242 = cljs.core.seq(coll);
while(true){
if(xs_13242){
(ret[i_13241] = cljs.core.to_array(cljs.core.first(xs_13242)));

var G__13243 = (i_13241 + (1));
var G__13244 = cljs.core.next(xs_13242);
i_13241 = G__13243;
xs_13242 = G__13244;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13247 = (i + (1));
var G__13248 = cljs.core.next(s__$1);
i = G__13247;
s__$1 = G__13248;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___13249 = size;
var i_13250 = (0);
while(true){
if((i_13250 < n__4816__auto___13249)){
(a[i_13250] = init_val_or_seq);

var G__13251 = (i_13250 + (1));
i_13250 = G__13251;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13254 = (i + (1));
var G__13255 = cljs.core.next(s__$1);
i = G__13254;
s__$1 = G__13255;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___13256 = size;
var i_13257 = (0);
while(true){
if((i_13257 < n__4816__auto___13256)){
(a[i_13257] = init_val_or_seq);

var G__13258 = (i_13257 + (1));
i_13257 = G__13258;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13261 = (i + (1));
var G__13262 = cljs.core.next(s__$1);
i = G__13261;
s__$1 = G__13262;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___13263 = size;
var i_13264 = (0);
while(true){
if((i_13264 < n__4816__auto___13263)){
(a[i_13264] = init_val_or_seq);

var G__13265 = (i_13264 + (1));
i_13264 = G__13265;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13268 = (i + (1));
var G__13269 = cljs.core.next(s__$1);
i = G__13268;
s__$1 = G__13269;
continue;
} else {
return a;
}
break;
}
} else {
var n__4816__auto___13270 = size;
var i_13271 = (0);
while(true){
if((i_13271 < n__4816__auto___13270)){
(a[i_13271] = init_val_or_seq);

var G__13272 = (i_13271 + (1));
i_13271 = G__13272;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__13273 = cljs.core.next(s__$1);
var G__13274 = (i - (1));
var G__13275 = (sum + (1));
s__$1 = G__13273;
i = G__13274;
sum = G__13275;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__13295__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__13295 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13296__i = 0, G__13296__a = new Array(arguments.length -  2);
while (G__13296__i < G__13296__a.length) {G__13296__a[G__13296__i] = arguments[G__13296__i + 2]; ++G__13296__i;}
  zs = new cljs.core.IndexedSeq(G__13296__a,0);
} 
return G__13295__delegate.call(this,x,y,zs);};
G__13295.cljs$lang$maxFixedArity = 2;
G__13295.cljs$lang$applyTo = (function (arglist__13297){
var x = cljs.core.first(arglist__13297);
arglist__13297 = cljs.core.next(arglist__13297);
var y = cljs.core.first(arglist__13297);
var zs = cljs.core.rest(arglist__13297);
return G__13295__delegate(x,y,zs);
});
G__13295.cljs$core$IFn$_invoke$arity$variadic = G__13295__delegate;
return G__13295;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__13298 = null;
if (arguments.length > 2) {
var G__13299__i = 0, G__13299__a = new Array(arguments.length -  2);
while (G__13299__i < G__13299__a.length) {G__13299__a[G__13299__i] = arguments[G__13299__i + 2]; ++G__13299__i;}
G__13298 = new cljs.core.IndexedSeq(G__13299__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__13300__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__13300 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__13301__i = 0, G__13301__a = new Array(arguments.length -  4);
while (G__13301__i < G__13301__a.length) {G__13301__a[G__13301__i] = arguments[G__13301__i + 4]; ++G__13301__i;}
  more = new cljs.core.IndexedSeq(G__13301__a,0);
} 
return G__13300__delegate.call(this,a,b,c,d,more);};
G__13300.cljs$lang$maxFixedArity = 4;
G__13300.cljs$lang$applyTo = (function (arglist__13302){
var a = cljs.core.first(arglist__13302);
arglist__13302 = cljs.core.next(arglist__13302);
var b = cljs.core.first(arglist__13302);
arglist__13302 = cljs.core.next(arglist__13302);
var c = cljs.core.first(arglist__13302);
arglist__13302 = cljs.core.next(arglist__13302);
var d = cljs.core.first(arglist__13302);
var more = cljs.core.rest(arglist__13302);
return G__13300__delegate(a,b,c,d,more);
});
G__13300.cljs$core$IFn$_invoke$arity$variadic = G__13300__delegate;
return G__13300;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__13303 = null;
if (arguments.length > 4) {
var G__13304__i = 0, G__13304__a = new Array(arguments.length -  4);
while (G__13304__i < G__13304__a.length) {G__13304__a[G__13304__i] = arguments[G__13304__i + 4]; ++G__13304__i;}
G__13303 = new cljs.core.IndexedSeq(G__13304__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__13303);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__13305__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13306 = ntcoll;
var G__13307 = cljs.core.first(vals);
var G__13308 = cljs.core.next(vals);
tcoll = G__13306;
val = G__13307;
vals = G__13308;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13305 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13309__i = 0, G__13309__a = new Array(arguments.length -  2);
while (G__13309__i < G__13309__a.length) {G__13309__a[G__13309__i] = arguments[G__13309__i + 2]; ++G__13309__i;}
  vals = new cljs.core.IndexedSeq(G__13309__a,0);
} 
return G__13305__delegate.call(this,tcoll,val,vals);};
G__13305.cljs$lang$maxFixedArity = 2;
G__13305.cljs$lang$applyTo = (function (arglist__13310){
var tcoll = cljs.core.first(arglist__13310);
arglist__13310 = cljs.core.next(arglist__13310);
var val = cljs.core.first(arglist__13310);
var vals = cljs.core.rest(arglist__13310);
return G__13305__delegate(tcoll,val,vals);
});
G__13305.cljs$core$IFn$_invoke$arity$variadic = G__13305__delegate;
return G__13305;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__13311 = null;
if (arguments.length > 2) {
var G__13312__i = 0, G__13312__a = new Array(arguments.length -  2);
while (G__13312__i < G__13312__a.length) {G__13312__a[G__13312__i] = arguments[G__13312__i + 2]; ++G__13312__i;}
G__13311 = new cljs.core.IndexedSeq(G__13312__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13311);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__13313__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__13314 = ntcoll;
var G__13315 = cljs.core.first(kvs);
var G__13316 = cljs.core.second(kvs);
var G__13317 = cljs.core.nnext(kvs);
tcoll = G__13314;
key = G__13315;
val = G__13316;
kvs = G__13317;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13313 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13318__i = 0, G__13318__a = new Array(arguments.length -  3);
while (G__13318__i < G__13318__a.length) {G__13318__a[G__13318__i] = arguments[G__13318__i + 3]; ++G__13318__i;}
  kvs = new cljs.core.IndexedSeq(G__13318__a,0);
} 
return G__13313__delegate.call(this,tcoll,key,val,kvs);};
G__13313.cljs$lang$maxFixedArity = 3;
G__13313.cljs$lang$applyTo = (function (arglist__13319){
var tcoll = cljs.core.first(arglist__13319);
arglist__13319 = cljs.core.next(arglist__13319);
var key = cljs.core.first(arglist__13319);
arglist__13319 = cljs.core.next(arglist__13319);
var val = cljs.core.first(arglist__13319);
var kvs = cljs.core.rest(arglist__13319);
return G__13313__delegate(tcoll,key,val,kvs);
});
G__13313.cljs$core$IFn$_invoke$arity$variadic = G__13313__delegate;
return G__13313;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__13320 = null;
if (arguments.length > 3) {
var G__13321__i = 0, G__13321__a = new Array(arguments.length -  3);
while (G__13321__i < G__13321__a.length) {G__13321__a[G__13321__i] = arguments[G__13321__i + 3]; ++G__13321__i;}
G__13320 = new cljs.core.IndexedSeq(G__13321__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__13320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__13322__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__13323 = ntcoll;
var G__13324 = cljs.core.first(ks);
var G__13325 = cljs.core.next(ks);
tcoll = G__13323;
key = G__13324;
ks = G__13325;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13322 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13326__i = 0, G__13326__a = new Array(arguments.length -  2);
while (G__13326__i < G__13326__a.length) {G__13326__a[G__13326__i] = arguments[G__13326__i + 2]; ++G__13326__i;}
  ks = new cljs.core.IndexedSeq(G__13326__a,0);
} 
return G__13322__delegate.call(this,tcoll,key,ks);};
G__13322.cljs$lang$maxFixedArity = 2;
G__13322.cljs$lang$applyTo = (function (arglist__13327){
var tcoll = cljs.core.first(arglist__13327);
arglist__13327 = cljs.core.next(arglist__13327);
var key = cljs.core.first(arglist__13327);
var ks = cljs.core.rest(arglist__13327);
return G__13322__delegate(tcoll,key,ks);
});
G__13322.cljs$core$IFn$_invoke$arity$variadic = G__13322__delegate;
return G__13322;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__13328 = null;
if (arguments.length > 2) {
var G__13329__i = 0, G__13329__a = new Array(arguments.length -  2);
while (G__13329__i < G__13329__a.length) {G__13329__a[G__13329__i] = arguments[G__13329__i + 2]; ++G__13329__i;}
G__13328 = new cljs.core.IndexedSeq(G__13329__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__13328);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__13330__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13331 = ntcoll;
var G__13332 = cljs.core.first(vals);
var G__13333 = cljs.core.next(vals);
tcoll = G__13331;
val = G__13332;
vals = G__13333;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13330 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13334__i = 0, G__13334__a = new Array(arguments.length -  2);
while (G__13334__i < G__13334__a.length) {G__13334__a[G__13334__i] = arguments[G__13334__i + 2]; ++G__13334__i;}
  vals = new cljs.core.IndexedSeq(G__13334__a,0);
} 
return G__13330__delegate.call(this,tcoll,val,vals);};
G__13330.cljs$lang$maxFixedArity = 2;
G__13330.cljs$lang$applyTo = (function (arglist__13335){
var tcoll = cljs.core.first(arglist__13335);
arglist__13335 = cljs.core.next(arglist__13335);
var val = cljs.core.first(arglist__13335);
var vals = cljs.core.rest(arglist__13335);
return G__13330__delegate(tcoll,val,vals);
});
G__13330.cljs$core$IFn$_invoke$arity$variadic = G__13330__delegate;
return G__13330;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__13336 = null;
if (arguments.length > 2) {
var G__13337__i = 0, G__13337__a = new Array(arguments.length -  2);
while (G__13337__i < G__13337__a.length) {G__13337__a[G__13337__i] = arguments[G__13337__i + 2]; ++G__13337__i;}
G__13336 = new cljs.core.IndexedSeq(G__13337__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4860 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4860);
} else {
var G__13548 = a4860;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13548) : f.call(null,G__13548));
}
} else {
var b4861 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4860,b4861);
} else {
var G__13549 = a4860;
var G__13550 = b4861;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13549,G__13550) : f.call(null,G__13549,G__13550));
}
} else {
var c4862 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4860,b4861,c4862);
} else {
var G__13551 = a4860;
var G__13552 = b4861;
var G__13553 = c4862;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13551,G__13552,G__13553) : f.call(null,G__13551,G__13552,G__13553));
}
} else {
var d4863 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4860,b4861,c4862,d4863);
} else {
var G__13554 = a4860;
var G__13555 = b4861;
var G__13556 = c4862;
var G__13557 = d4863;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13554,G__13555,G__13556,G__13557) : f.call(null,G__13554,G__13555,G__13556,G__13557));
}
} else {
var e4864 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4860,b4861,c4862,d4863,e4864);
} else {
var G__13558 = a4860;
var G__13559 = b4861;
var G__13560 = c4862;
var G__13561 = d4863;
var G__13562 = e4864;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13558,G__13559,G__13560,G__13561,G__13562) : f.call(null,G__13558,G__13559,G__13560,G__13561,G__13562));
}
} else {
var f4865 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4860,b4861,c4862,d4863,e4864,f4865);
} else {
var G__13563 = a4860;
var G__13564 = b4861;
var G__13565 = c4862;
var G__13566 = d4863;
var G__13567 = e4864;
var G__13568 = f4865;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13563,G__13564,G__13565,G__13566,G__13567,G__13568) : f.call(null,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568));
}
} else {
var g4866 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4860,b4861,c4862,d4863,e4864,f4865,g4866);
} else {
var G__13569 = a4860;
var G__13570 = b4861;
var G__13571 = c4862;
var G__13572 = d4863;
var G__13573 = e4864;
var G__13574 = f4865;
var G__13575 = g4866;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575) : f.call(null,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575));
}
} else {
var h4867 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867);
} else {
var G__13576 = a4860;
var G__13577 = b4861;
var G__13578 = c4862;
var G__13579 = d4863;
var G__13580 = e4864;
var G__13581 = f4865;
var G__13582 = g4866;
var G__13583 = h4867;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583) : f.call(null,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583));
}
} else {
var i4868 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868);
} else {
var G__13584 = a4860;
var G__13585 = b4861;
var G__13586 = c4862;
var G__13587 = d4863;
var G__13588 = e4864;
var G__13589 = f4865;
var G__13590 = g4866;
var G__13591 = h4867;
var G__13592 = i4868;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592) : f.call(null,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590,G__13591,G__13592));
}
} else {
var j4869 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869);
} else {
var G__13593 = a4860;
var G__13594 = b4861;
var G__13595 = c4862;
var G__13596 = d4863;
var G__13597 = e4864;
var G__13598 = f4865;
var G__13599 = g4866;
var G__13600 = h4867;
var G__13601 = i4868;
var G__13602 = j4869;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602) : f.call(null,G__13593,G__13594,G__13595,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602));
}
} else {
var k4870 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870);
} else {
var G__13603 = a4860;
var G__13604 = b4861;
var G__13605 = c4862;
var G__13606 = d4863;
var G__13607 = e4864;
var G__13608 = f4865;
var G__13609 = g4866;
var G__13610 = h4867;
var G__13611 = i4868;
var G__13612 = j4869;
var G__13613 = k4870;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613) : f.call(null,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613));
}
} else {
var l4871 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871);
} else {
var G__13614 = a4860;
var G__13615 = b4861;
var G__13616 = c4862;
var G__13617 = d4863;
var G__13618 = e4864;
var G__13619 = f4865;
var G__13620 = g4866;
var G__13621 = h4867;
var G__13622 = i4868;
var G__13623 = j4869;
var G__13624 = k4870;
var G__13625 = l4871;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625) : f.call(null,G__13614,G__13615,G__13616,G__13617,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625));
}
} else {
var m4872 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872);
} else {
var G__13626 = a4860;
var G__13627 = b4861;
var G__13628 = c4862;
var G__13629 = d4863;
var G__13630 = e4864;
var G__13631 = f4865;
var G__13632 = g4866;
var G__13633 = h4867;
var G__13634 = i4868;
var G__13635 = j4869;
var G__13636 = k4870;
var G__13637 = l4871;
var G__13638 = m4872;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638) : f.call(null,G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638));
}
} else {
var n4873 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873);
} else {
var G__13639 = a4860;
var G__13640 = b4861;
var G__13641 = c4862;
var G__13642 = d4863;
var G__13643 = e4864;
var G__13644 = f4865;
var G__13645 = g4866;
var G__13646 = h4867;
var G__13647 = i4868;
var G__13648 = j4869;
var G__13649 = k4870;
var G__13650 = l4871;
var G__13651 = m4872;
var G__13652 = n4873;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13639,G__13640,G__13641,G__13642,G__13643,G__13644,G__13645,G__13646,G__13647,G__13648,G__13649,G__13650,G__13651,G__13652) : f.call(null,G__13639,G__13640,G__13641,G__13642,G__13643,G__13644,G__13645,G__13646,G__13647,G__13648,G__13649,G__13650,G__13651,G__13652));
}
} else {
var o4874 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874);
} else {
var G__13653 = a4860;
var G__13654 = b4861;
var G__13655 = c4862;
var G__13656 = d4863;
var G__13657 = e4864;
var G__13658 = f4865;
var G__13659 = g4866;
var G__13660 = h4867;
var G__13661 = i4868;
var G__13662 = j4869;
var G__13663 = k4870;
var G__13664 = l4871;
var G__13665 = m4872;
var G__13666 = n4873;
var G__13667 = o4874;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13653,G__13654,G__13655,G__13656,G__13657,G__13658,G__13659,G__13660,G__13661,G__13662,G__13663,G__13664,G__13665,G__13666,G__13667) : f.call(null,G__13653,G__13654,G__13655,G__13656,G__13657,G__13658,G__13659,G__13660,G__13661,G__13662,G__13663,G__13664,G__13665,G__13666,G__13667));
}
} else {
var p4875 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875);
} else {
var G__13668 = a4860;
var G__13669 = b4861;
var G__13670 = c4862;
var G__13671 = d4863;
var G__13672 = e4864;
var G__13673 = f4865;
var G__13674 = g4866;
var G__13675 = h4867;
var G__13676 = i4868;
var G__13677 = j4869;
var G__13678 = k4870;
var G__13679 = l4871;
var G__13680 = m4872;
var G__13681 = n4873;
var G__13682 = o4874;
var G__13683 = p4875;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13668,G__13669,G__13670,G__13671,G__13672,G__13673,G__13674,G__13675,G__13676,G__13677,G__13678,G__13679,G__13680,G__13681,G__13682,G__13683) : f.call(null,G__13668,G__13669,G__13670,G__13671,G__13672,G__13673,G__13674,G__13675,G__13676,G__13677,G__13678,G__13679,G__13680,G__13681,G__13682,G__13683));
}
} else {
var q4876 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876);
} else {
var G__13684 = a4860;
var G__13685 = b4861;
var G__13686 = c4862;
var G__13687 = d4863;
var G__13688 = e4864;
var G__13689 = f4865;
var G__13690 = g4866;
var G__13691 = h4867;
var G__13692 = i4868;
var G__13693 = j4869;
var G__13694 = k4870;
var G__13695 = l4871;
var G__13696 = m4872;
var G__13697 = n4873;
var G__13698 = o4874;
var G__13699 = p4875;
var G__13700 = q4876;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13684,G__13685,G__13686,G__13687,G__13688,G__13689,G__13690,G__13691,G__13692,G__13693,G__13694,G__13695,G__13696,G__13697,G__13698,G__13699,G__13700) : f.call(null,G__13684,G__13685,G__13686,G__13687,G__13688,G__13689,G__13690,G__13691,G__13692,G__13693,G__13694,G__13695,G__13696,G__13697,G__13698,G__13699,G__13700));
}
} else {
var r4877 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877);
} else {
var G__13701 = a4860;
var G__13702 = b4861;
var G__13703 = c4862;
var G__13704 = d4863;
var G__13705 = e4864;
var G__13706 = f4865;
var G__13707 = g4866;
var G__13708 = h4867;
var G__13709 = i4868;
var G__13710 = j4869;
var G__13711 = k4870;
var G__13712 = l4871;
var G__13713 = m4872;
var G__13714 = n4873;
var G__13715 = o4874;
var G__13716 = p4875;
var G__13717 = q4876;
var G__13718 = r4877;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13701,G__13702,G__13703,G__13704,G__13705,G__13706,G__13707,G__13708,G__13709,G__13710,G__13711,G__13712,G__13713,G__13714,G__13715,G__13716,G__13717,G__13718) : f.call(null,G__13701,G__13702,G__13703,G__13704,G__13705,G__13706,G__13707,G__13708,G__13709,G__13710,G__13711,G__13712,G__13713,G__13714,G__13715,G__13716,G__13717,G__13718));
}
} else {
var s4878 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877,s4878);
} else {
var G__13719 = a4860;
var G__13720 = b4861;
var G__13721 = c4862;
var G__13722 = d4863;
var G__13723 = e4864;
var G__13724 = f4865;
var G__13725 = g4866;
var G__13726 = h4867;
var G__13727 = i4868;
var G__13728 = j4869;
var G__13729 = k4870;
var G__13730 = l4871;
var G__13731 = m4872;
var G__13732 = n4873;
var G__13733 = o4874;
var G__13734 = p4875;
var G__13735 = q4876;
var G__13736 = r4877;
var G__13737 = s4878;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13719,G__13720,G__13721,G__13722,G__13723,G__13724,G__13725,G__13726,G__13727,G__13728,G__13729,G__13730,G__13731,G__13732,G__13733,G__13734,G__13735,G__13736,G__13737) : f.call(null,G__13719,G__13720,G__13721,G__13722,G__13723,G__13724,G__13725,G__13726,G__13727,G__13728,G__13729,G__13730,G__13731,G__13732,G__13733,G__13734,G__13735,G__13736,G__13737));
}
} else {
var t4879 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4860,b4861,c4862,d4863,e4864,f4865,g4866,h4867,i4868,j4869,k4870,l4871,m4872,n4873,o4874,p4875,q4876,r4877,s4878,t4879);
} else {
var G__13738 = a4860;
var G__13739 = b4861;
var G__13740 = c4862;
var G__13741 = d4863;
var G__13742 = e4864;
var G__13743 = f4865;
var G__13744 = g4866;
var G__13745 = h4867;
var G__13746 = i4868;
var G__13747 = j4869;
var G__13748 = k4870;
var G__13749 = l4871;
var G__13750 = m4872;
var G__13751 = n4873;
var G__13752 = o4874;
var G__13753 = p4875;
var G__13754 = q4876;
var G__13755 = r4877;
var G__13756 = s4878;
var G__13757 = t4879;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13738,G__13739,G__13740,G__13741,G__13742,G__13743,G__13744,G__13745,G__13746,G__13747,G__13748,G__13749,G__13750,G__13751,G__13752,G__13753,G__13754,G__13755,G__13756,G__13757) : f.call(null,G__13738,G__13739,G__13740,G__13741,G__13742,G__13743,G__13744,G__13745,G__13746,G__13747,G__13748,G__13749,G__13750,G__13751,G__13752,G__13753,G__13754,G__13755,G__13756,G__13757));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13758__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13758 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13759__i = 0, G__13759__a = new Array(arguments.length -  5);
while (G__13759__i < G__13759__a.length) {G__13759__a[G__13759__i] = arguments[G__13759__i + 5]; ++G__13759__i;}
  args = new cljs.core.IndexedSeq(G__13759__a,0);
} 
return G__13758__delegate.call(this,f,a,b,c,d,args);};
G__13758.cljs$lang$maxFixedArity = 5;
G__13758.cljs$lang$applyTo = (function (arglist__13760){
var f = cljs.core.first(arglist__13760);
arglist__13760 = cljs.core.next(arglist__13760);
var a = cljs.core.first(arglist__13760);
arglist__13760 = cljs.core.next(arglist__13760);
var b = cljs.core.first(arglist__13760);
arglist__13760 = cljs.core.next(arglist__13760);
var c = cljs.core.first(arglist__13760);
arglist__13760 = cljs.core.next(arglist__13760);
var d = cljs.core.first(arglist__13760);
var args = cljs.core.rest(arglist__13760);
return G__13758__delegate(f,a,b,c,d,args);
});
G__13758.cljs$core$IFn$_invoke$arity$variadic = G__13758__delegate;
return G__13758;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13761 = null;
if (arguments.length > 5) {
var G__13762__i = 0, G__13762__a = new Array(arguments.length -  5);
while (G__13762__i < G__13762__a.length) {G__13762__a[G__13762__i] = arguments[G__13762__i + 5]; ++G__13762__i;}
G__13761 = new cljs.core.IndexedSeq(G__13762__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13778 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13778) : f.call(null,G__13778));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13779 = cljs.core.meta(obj);
var G__13780 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13779,G__13780) : f.call(null,G__13779,G__13780));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13781 = cljs.core.meta(obj);
var G__13782 = a;
var G__13783 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13781,G__13782,G__13783) : f.call(null,G__13781,G__13782,G__13783));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13784 = cljs.core.meta(obj);
var G__13785 = a;
var G__13786 = b;
var G__13787 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13784,G__13785,G__13786,G__13787) : f.call(null,G__13784,G__13785,G__13786,G__13787));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13788 = cljs.core.meta(obj);
var G__13789 = a;
var G__13790 = b;
var G__13791 = c;
var G__13792 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13788,G__13789,G__13790,G__13791,G__13792) : f.call(null,G__13788,G__13789,G__13790,G__13791,G__13792));
})());
});
var vary_meta__7 = (function() { 
var G__13793__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13793 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13794__i = 0, G__13794__a = new Array(arguments.length -  6);
while (G__13794__i < G__13794__a.length) {G__13794__a[G__13794__i] = arguments[G__13794__i + 6]; ++G__13794__i;}
  args = new cljs.core.IndexedSeq(G__13794__a,0);
} 
return G__13793__delegate.call(this,obj,f,a,b,c,d,args);};
G__13793.cljs$lang$maxFixedArity = 6;
G__13793.cljs$lang$applyTo = (function (arglist__13795){
var obj = cljs.core.first(arglist__13795);
arglist__13795 = cljs.core.next(arglist__13795);
var f = cljs.core.first(arglist__13795);
arglist__13795 = cljs.core.next(arglist__13795);
var a = cljs.core.first(arglist__13795);
arglist__13795 = cljs.core.next(arglist__13795);
var b = cljs.core.first(arglist__13795);
arglist__13795 = cljs.core.next(arglist__13795);
var c = cljs.core.first(arglist__13795);
arglist__13795 = cljs.core.next(arglist__13795);
var d = cljs.core.first(arglist__13795);
var args = cljs.core.rest(arglist__13795);
return G__13793__delegate(obj,f,a,b,c,d,args);
});
G__13793.cljs$core$IFn$_invoke$arity$variadic = G__13793__delegate;
return G__13793;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13796 = null;
if (arguments.length > 6) {
var G__13797__i = 0, G__13797__a = new Array(arguments.length -  6);
while (G__13797__i < G__13797__a.length) {G__13797__a[G__13797__i] = arguments[G__13797__i + 6]; ++G__13797__i;}
G__13796 = new cljs.core.IndexedSeq(G__13797__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13798__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13798 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13799__i = 0, G__13799__a = new Array(arguments.length -  2);
while (G__13799__i < G__13799__a.length) {G__13799__a[G__13799__i] = arguments[G__13799__i + 2]; ++G__13799__i;}
  more = new cljs.core.IndexedSeq(G__13799__a,0);
} 
return G__13798__delegate.call(this,x,y,more);};
G__13798.cljs$lang$maxFixedArity = 2;
G__13798.cljs$lang$applyTo = (function (arglist__13800){
var x = cljs.core.first(arglist__13800);
arglist__13800 = cljs.core.next(arglist__13800);
var y = cljs.core.first(arglist__13800);
var more = cljs.core.rest(arglist__13800);
return G__13798__delegate(x,y,more);
});
G__13798.cljs$core$IFn$_invoke$arity$variadic = G__13798__delegate;
return G__13798;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13801 = null;
if (arguments.length > 2) {
var G__13802__i = 0, G__13802__a = new Array(arguments.length -  2);
while (G__13802__i < G__13802__a.length) {G__13802__a[G__13802__i] = arguments[G__13802__i + 2]; ++G__13802__i;}
G__13801 = new cljs.core.IndexedSeq(G__13802__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13801);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13806 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13806 = (function (nil_iter,meta13807){
this.nil_iter = nil_iter;
this.meta13807 = meta13807;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13806.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13806.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13806.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13806.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13808){
var self__ = this;
var _13808__$1 = this;
return self__.meta13807;
});

cljs.core.t13806.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13808,meta13807__$1){
var self__ = this;
var _13808__$1 = this;
return (new cljs.core.t13806(self__.nil_iter,meta13807__$1));
});

cljs.core.t13806.cljs$lang$type = true;

cljs.core.t13806.cljs$lang$ctorStr = "cljs.core/t13806";

cljs.core.t13806.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/t13806");
});

cljs.core.__GT_t13806 = (function __GT_t13806(nil_iter__$1,meta13807){
return (new cljs.core.t13806(nil_iter__$1,meta13807));
});

}

return (new cljs.core.t13806(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/victorneo/Development/modern-cljs/repl/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3917__auto__ = !((lt.stepper == null));
if(and__3917__auto__){
return self__.iter.hasNext();
} else {
return and__3917__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13809 = lt;
var G__13810 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13809,G__13810) : self__.xform.call(null,G__13809,G__13810));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13811 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13811) : self__.xform.call(null,G__13811));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13813 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13813) : xform.call(null,G__13813));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13815 = cljs.core.next(iters__$1);
iters__$1 = G__13815;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4816__auto___13816 = self__.iters.length;
var i_13817 = (0);
while(true){
if((i_13817 < n__4816__auto___13816)){
(self__.nexts[i_13817] = (self__.iters[i_13817]).next());

var G__13818 = (i_13817 + (1));
i_13817 = G__13818;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3917__auto__ = !((lt.stepper == null));
if(and__3917__auto__){
return this$.hasNext();
} else {
return and__3917__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13814 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13814) : self__.xform.call(null,G__13814));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13823 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13823) : xform.call(null,G__13823));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13824_13828 = cljs.core.seq(colls);
var chunk__13825_13829 = null;
var count__13826_13830 = (0);
var i__13827_13831 = (0);
while(true){
if((i__13827_13831 < count__13826_13830)){
var coll_13832 = chunk__13825_13829.cljs$core$IIndexed$_nth$arity$2(null,i__13827_13831);
iters.push(cljs.core.iter(coll_13832));

var G__13833 = seq__13824_13828;
var G__13834 = chunk__13825_13829;
var G__13835 = count__13826_13830;
var G__13836 = (i__13827_13831 + (1));
seq__13824_13828 = G__13833;
chunk__13825_13829 = G__13834;
count__13826_13830 = G__13835;
i__13827_13831 = G__13836;
continue;
} else {
var temp__4126__auto___13837 = cljs.core.seq(seq__13824_13828);
if(temp__4126__auto___13837){
var seq__13824_13838__$1 = temp__4126__auto___13837;
if(cljs.core.chunked_seq_QMARK_(seq__13824_13838__$1)){
var c__4716__auto___13839 = cljs.core.chunk_first(seq__13824_13838__$1);
var G__13840 = cljs.core.chunk_rest(seq__13824_13838__$1);
var G__13841 = c__4716__auto___13839;
var G__13842 = cljs.core.count(c__4716__auto___13839);
var G__13843 = (0);
seq__13824_13828 = G__13840;
chunk__13825_13829 = G__13841;
count__13826_13830 = G__13842;
i__13827_13831 = G__13843;
continue;
} else {
var coll_13844 = cljs.core.first(seq__13824_13838__$1);
iters.push(cljs.core.iter(coll_13844));

var G__13845 = cljs.core.next(seq__13824_13838__$1);
var G__13846 = null;
var G__13847 = (0);
var G__13848 = (0);
seq__13824_13828 = G__13845;
chunk__13825_13829 = G__13846;
count__13826_13830 = G__13847;
i__13827_13831 = G__13848;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3929__auto__ = cljs.core.seq(coll);
if(or__3929__auto__){
return or__3929__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13849__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13849 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13850__i = 0, G__13850__a = new Array(arguments.length -  2);
while (G__13850__i < G__13850__a.length) {G__13850__a[G__13850__i] = arguments[G__13850__i + 2]; ++G__13850__i;}
  colls = new cljs.core.IndexedSeq(G__13850__a,0);
} 
return G__13849__delegate.call(this,xform,coll,colls);};
G__13849.cljs$lang$maxFixedArity = 2;
G__13849.cljs$lang$applyTo = (function (arglist__13851){
var xform = cljs.core.first(arglist__13851);
arglist__13851 = cljs.core.next(arglist__13851);
var coll = cljs.core.first(arglist__13851);
var colls = cljs.core.rest(arglist__13851);
return G__13849__delegate(xform,coll,colls);
});
G__13849.cljs$core$IFn$_invoke$arity$variadic = G__13849__delegate;
return G__13849;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13852 = null;
if (arguments.length > 2) {
var G__13853__i = 0, G__13853__a = new Array(arguments.length -  2);
while (G__13853__i < G__13853__a.length) {G__13853__a[G__13853__i] = arguments[G__13853__i + 2]; ++G__13853__i;}
G__13852 = new cljs.core.IndexedSeq(G__13853__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13855 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13855) : pred.call(null,G__13855));
})())){
var G__13856 = pred;
var G__13857 = cljs.core.next(coll);
pred = G__13856;
coll = G__13857;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3929__auto__ = (function (){var G__13861 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13861) : pred.call(null,G__13861));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__13862 = pred;
var G__13863 = cljs.core.next(coll);
pred = G__13862;
coll = G__13863;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13870 = null;
var G__13870__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13870__1 = (function (x){
return cljs.core.not((function (){var G__13867 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13867) : f.call(null,G__13867));
})());
});
var G__13870__2 = (function (x,y){
return cljs.core.not((function (){var G__13868 = x;
var G__13869 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13868,G__13869) : f.call(null,G__13868,G__13869));
})());
});
var G__13870__3 = (function() { 
var G__13871__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13871 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13872__i = 0, G__13872__a = new Array(arguments.length -  2);
while (G__13872__i < G__13872__a.length) {G__13872__a[G__13872__i] = arguments[G__13872__i + 2]; ++G__13872__i;}
  zs = new cljs.core.IndexedSeq(G__13872__a,0);
} 
return G__13871__delegate.call(this,x,y,zs);};
G__13871.cljs$lang$maxFixedArity = 2;
G__13871.cljs$lang$applyTo = (function (arglist__13873){
var x = cljs.core.first(arglist__13873);
arglist__13873 = cljs.core.next(arglist__13873);
var y = cljs.core.first(arglist__13873);
var zs = cljs.core.rest(arglist__13873);
return G__13871__delegate(x,y,zs);
});
G__13871.cljs$core$IFn$_invoke$arity$variadic = G__13871__delegate;
return G__13871;
})()
;
G__13870 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13870__0.call(this);
case 1:
return G__13870__1.call(this,x);
case 2:
return G__13870__2.call(this,x,y);
default:
var G__13874 = null;
if (arguments.length > 2) {
var G__13875__i = 0, G__13875__a = new Array(arguments.length -  2);
while (G__13875__i < G__13875__a.length) {G__13875__a[G__13875__i] = arguments[G__13875__i + 2]; ++G__13875__i;}
G__13874 = new cljs.core.IndexedSeq(G__13875__a,0);
}
return G__13870__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13874);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13870.cljs$lang$maxFixedArity = 2;
G__13870.cljs$lang$applyTo = G__13870__3.cljs$lang$applyTo;
G__13870.cljs$core$IFn$_invoke$arity$0 = G__13870__0;
G__13870.cljs$core$IFn$_invoke$arity$1 = G__13870__1;
G__13870.cljs$core$IFn$_invoke$arity$2 = G__13870__2;
G__13870.cljs$core$IFn$_invoke$arity$variadic = G__13870__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13870;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13876__delegate = function (args){
return x;
};
var G__13876 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13877__i = 0, G__13877__a = new Array(arguments.length -  0);
while (G__13877__i < G__13877__a.length) {G__13877__a[G__13877__i] = arguments[G__13877__i + 0]; ++G__13877__i;}
  args = new cljs.core.IndexedSeq(G__13877__a,0);
} 
return G__13876__delegate.call(this,args);};
G__13876.cljs$lang$maxFixedArity = 0;
G__13876.cljs$lang$applyTo = (function (arglist__13878){
var args = cljs.core.seq(arglist__13878);
return G__13876__delegate(args);
});
G__13876.cljs$core$IFn$_invoke$arity$variadic = G__13876__delegate;
return G__13876;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13933 = null;
var G__13933__0 = (function (){
var G__13906 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13906) : f.call(null,G__13906));
});
var G__13933__1 = (function (x){
var G__13907 = (function (){var G__13908 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13908) : g.call(null,G__13908));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13907) : f.call(null,G__13907));
});
var G__13933__2 = (function (x,y){
var G__13909 = (function (){var G__13910 = x;
var G__13911 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13910,G__13911) : g.call(null,G__13910,G__13911));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13909) : f.call(null,G__13909));
});
var G__13933__3 = (function (x,y,z){
var G__13912 = (function (){var G__13913 = x;
var G__13914 = y;
var G__13915 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13913,G__13914,G__13915) : g.call(null,G__13913,G__13914,G__13915));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13912) : f.call(null,G__13912));
});
var G__13933__4 = (function() { 
var G__13934__delegate = function (x,y,z,args){
var G__13916 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13916) : f.call(null,G__13916));
};
var G__13934 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13935__i = 0, G__13935__a = new Array(arguments.length -  3);
while (G__13935__i < G__13935__a.length) {G__13935__a[G__13935__i] = arguments[G__13935__i + 3]; ++G__13935__i;}
  args = new cljs.core.IndexedSeq(G__13935__a,0);
} 
return G__13934__delegate.call(this,x,y,z,args);};
G__13934.cljs$lang$maxFixedArity = 3;
G__13934.cljs$lang$applyTo = (function (arglist__13936){
var x = cljs.core.first(arglist__13936);
arglist__13936 = cljs.core.next(arglist__13936);
var y = cljs.core.first(arglist__13936);
arglist__13936 = cljs.core.next(arglist__13936);
var z = cljs.core.first(arglist__13936);
var args = cljs.core.rest(arglist__13936);
return G__13934__delegate(x,y,z,args);
});
G__13934.cljs$core$IFn$_invoke$arity$variadic = G__13934__delegate;
return G__13934;
})()
;
G__13933 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13933__0.call(this);
case 1:
return G__13933__1.call(this,x);
case 2:
return G__13933__2.call(this,x,y);
case 3:
return G__13933__3.call(this,x,y,z);
default:
var G__13937 = null;
if (arguments.length > 3) {
var G__13938__i = 0, G__13938__a = new Array(arguments.length -  3);
while (G__13938__i < G__13938__a.length) {G__13938__a[G__13938__i] = arguments[G__13938__i + 3]; ++G__13938__i;}
G__13937 = new cljs.core.IndexedSeq(G__13938__a,0);
}
return G__13933__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13933.cljs$lang$maxFixedArity = 3;
G__13933.cljs$lang$applyTo = G__13933__4.cljs$lang$applyTo;
G__13933.cljs$core$IFn$_invoke$arity$0 = G__13933__0;
G__13933.cljs$core$IFn$_invoke$arity$1 = G__13933__1;
G__13933.cljs$core$IFn$_invoke$arity$2 = G__13933__2;
G__13933.cljs$core$IFn$_invoke$arity$3 = G__13933__3;
G__13933.cljs$core$IFn$_invoke$arity$variadic = G__13933__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13933;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13939 = null;
var G__13939__0 = (function (){
var G__13917 = (function (){var G__13918 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13918) : g.call(null,G__13918));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13917) : f.call(null,G__13917));
});
var G__13939__1 = (function (x){
var G__13919 = (function (){var G__13920 = (function (){var G__13921 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13921) : h.call(null,G__13921));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13920) : g.call(null,G__13920));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13919) : f.call(null,G__13919));
});
var G__13939__2 = (function (x,y){
var G__13922 = (function (){var G__13923 = (function (){var G__13924 = x;
var G__13925 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13924,G__13925) : h.call(null,G__13924,G__13925));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13923) : g.call(null,G__13923));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13922) : f.call(null,G__13922));
});
var G__13939__3 = (function (x,y,z){
var G__13926 = (function (){var G__13927 = (function (){var G__13928 = x;
var G__13929 = y;
var G__13930 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13928,G__13929,G__13930) : h.call(null,G__13928,G__13929,G__13930));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13927) : g.call(null,G__13927));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13926) : f.call(null,G__13926));
});
var G__13939__4 = (function() { 
var G__13940__delegate = function (x,y,z,args){
var G__13931 = (function (){var G__13932 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13932) : g.call(null,G__13932));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13931) : f.call(null,G__13931));
};
var G__13940 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13941__i = 0, G__13941__a = new Array(arguments.length -  3);
while (G__13941__i < G__13941__a.length) {G__13941__a[G__13941__i] = arguments[G__13941__i + 3]; ++G__13941__i;}
  args = new cljs.core.IndexedSeq(G__13941__a,0);
} 
return G__13940__delegate.call(this,x,y,z,args);};
G__13940.cljs$lang$maxFixedArity = 3;
G__13940.cljs$lang$applyTo = (function (arglist__13942){
var x = cljs.core.first(arglist__13942);
arglist__13942 = cljs.core.next(arglist__13942);
var y = cljs.core.first(arglist__13942);
arglist__13942 = cljs.core.next(arglist__13942);
var z = cljs.core.first(arglist__13942);
var args = cljs.core.rest(arglist__13942);
return G__13940__delegate(x,y,z,args);
});
G__13940.cljs$core$IFn$_invoke$arity$variadic = G__13940__delegate;
return G__13940;
})()
;
G__13939 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13939__0.call(this);
case 1:
return G__13939__1.call(this,x);
case 2:
return G__13939__2.call(this,x,y);
case 3:
return G__13939__3.call(this,x,y,z);
default:
var G__13943 = null;
if (arguments.length > 3) {
var G__13944__i = 0, G__13944__a = new Array(arguments.length -  3);
while (G__13944__i < G__13944__a.length) {G__13944__a[G__13944__i] = arguments[G__13944__i + 3]; ++G__13944__i;}
G__13943 = new cljs.core.IndexedSeq(G__13944__a,0);
}
return G__13939__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13939.cljs$lang$maxFixedArity = 3;
G__13939.cljs$lang$applyTo = G__13939__4.cljs$lang$applyTo;
G__13939.cljs$core$IFn$_invoke$arity$0 = G__13939__0;
G__13939.cljs$core$IFn$_invoke$arity$1 = G__13939__1;
G__13939.cljs$core$IFn$_invoke$arity$2 = G__13939__2;
G__13939.cljs$core$IFn$_invoke$arity$3 = G__13939__3;
G__13939.cljs$core$IFn$_invoke$arity$variadic = G__13939__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13939;
})()
});
var comp__4 = (function() { 
var G__13945__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13946__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13947 = cljs.core.first(fs__$2).call(null,ret);
var G__13948 = cljs.core.next(fs__$2);
ret = G__13947;
fs__$2 = G__13948;
continue;
} else {
return ret;
}
break;
}
};
var G__13946 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13949__i = 0, G__13949__a = new Array(arguments.length -  0);
while (G__13949__i < G__13949__a.length) {G__13949__a[G__13949__i] = arguments[G__13949__i + 0]; ++G__13949__i;}
  args = new cljs.core.IndexedSeq(G__13949__a,0);
} 
return G__13946__delegate.call(this,args);};
G__13946.cljs$lang$maxFixedArity = 0;
G__13946.cljs$lang$applyTo = (function (arglist__13950){
var args = cljs.core.seq(arglist__13950);
return G__13946__delegate(args);
});
G__13946.cljs$core$IFn$_invoke$arity$variadic = G__13946__delegate;
return G__13946;
})()
;
;})(fs__$1))
};
var G__13945 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13951__i = 0, G__13951__a = new Array(arguments.length -  3);
while (G__13951__i < G__13951__a.length) {G__13951__a[G__13951__i] = arguments[G__13951__i + 3]; ++G__13951__i;}
  fs = new cljs.core.IndexedSeq(G__13951__a,0);
} 
return G__13945__delegate.call(this,f1,f2,f3,fs);};
G__13945.cljs$lang$maxFixedArity = 3;
G__13945.cljs$lang$applyTo = (function (arglist__13952){
var f1 = cljs.core.first(arglist__13952);
arglist__13952 = cljs.core.next(arglist__13952);
var f2 = cljs.core.first(arglist__13952);
arglist__13952 = cljs.core.next(arglist__13952);
var f3 = cljs.core.first(arglist__13952);
var fs = cljs.core.rest(arglist__13952);
return G__13945__delegate(f1,f2,f3,fs);
});
G__13945.cljs$core$IFn$_invoke$arity$variadic = G__13945__delegate;
return G__13945;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13953 = null;
if (arguments.length > 3) {
var G__13954__i = 0, G__13954__a = new Array(arguments.length -  3);
while (G__13954__i < G__13954__a.length) {G__13954__a[G__13954__i] = arguments[G__13954__i + 3]; ++G__13954__i;}
G__13953 = new cljs.core.IndexedSeq(G__13954__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__14039 = null;
var G__14039__0 = (function (){
var G__13997 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13997) : f.call(null,G__13997));
});
var G__14039__1 = (function (x){
var G__13998 = arg1;
var G__13999 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13998,G__13999) : f.call(null,G__13998,G__13999));
});
var G__14039__2 = (function (x,y){
var G__14000 = arg1;
var G__14001 = x;
var G__14002 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14000,G__14001,G__14002) : f.call(null,G__14000,G__14001,G__14002));
});
var G__14039__3 = (function (x,y,z){
var G__14003 = arg1;
var G__14004 = x;
var G__14005 = y;
var G__14006 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14003,G__14004,G__14005,G__14006) : f.call(null,G__14003,G__14004,G__14005,G__14006));
});
var G__14039__4 = (function() { 
var G__14040__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__14040 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14041__i = 0, G__14041__a = new Array(arguments.length -  3);
while (G__14041__i < G__14041__a.length) {G__14041__a[G__14041__i] = arguments[G__14041__i + 3]; ++G__14041__i;}
  args = new cljs.core.IndexedSeq(G__14041__a,0);
} 
return G__14040__delegate.call(this,x,y,z,args);};
G__14040.cljs$lang$maxFixedArity = 3;
G__14040.cljs$lang$applyTo = (function (arglist__14042){
var x = cljs.core.first(arglist__14042);
arglist__14042 = cljs.core.next(arglist__14042);
var y = cljs.core.first(arglist__14042);
arglist__14042 = cljs.core.next(arglist__14042);
var z = cljs.core.first(arglist__14042);
var args = cljs.core.rest(arglist__14042);
return G__14040__delegate(x,y,z,args);
});
G__14040.cljs$core$IFn$_invoke$arity$variadic = G__14040__delegate;
return G__14040;
})()
;
G__14039 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14039__0.call(this);
case 1:
return G__14039__1.call(this,x);
case 2:
return G__14039__2.call(this,x,y);
case 3:
return G__14039__3.call(this,x,y,z);
default:
var G__14043 = null;
if (arguments.length > 3) {
var G__14044__i = 0, G__14044__a = new Array(arguments.length -  3);
while (G__14044__i < G__14044__a.length) {G__14044__a[G__14044__i] = arguments[G__14044__i + 3]; ++G__14044__i;}
G__14043 = new cljs.core.IndexedSeq(G__14044__a,0);
}
return G__14039__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14039.cljs$lang$maxFixedArity = 3;
G__14039.cljs$lang$applyTo = G__14039__4.cljs$lang$applyTo;
G__14039.cljs$core$IFn$_invoke$arity$0 = G__14039__0;
G__14039.cljs$core$IFn$_invoke$arity$1 = G__14039__1;
G__14039.cljs$core$IFn$_invoke$arity$2 = G__14039__2;
G__14039.cljs$core$IFn$_invoke$arity$3 = G__14039__3;
G__14039.cljs$core$IFn$_invoke$arity$variadic = G__14039__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14039;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__14045 = null;
var G__14045__0 = (function (){
var G__14007 = arg1;
var G__14008 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14007,G__14008) : f.call(null,G__14007,G__14008));
});
var G__14045__1 = (function (x){
var G__14009 = arg1;
var G__14010 = arg2;
var G__14011 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14009,G__14010,G__14011) : f.call(null,G__14009,G__14010,G__14011));
});
var G__14045__2 = (function (x,y){
var G__14012 = arg1;
var G__14013 = arg2;
var G__14014 = x;
var G__14015 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14012,G__14013,G__14014,G__14015) : f.call(null,G__14012,G__14013,G__14014,G__14015));
});
var G__14045__3 = (function (x,y,z){
var G__14016 = arg1;
var G__14017 = arg2;
var G__14018 = x;
var G__14019 = y;
var G__14020 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14016,G__14017,G__14018,G__14019,G__14020) : f.call(null,G__14016,G__14017,G__14018,G__14019,G__14020));
});
var G__14045__4 = (function() { 
var G__14046__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__14046 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14047__i = 0, G__14047__a = new Array(arguments.length -  3);
while (G__14047__i < G__14047__a.length) {G__14047__a[G__14047__i] = arguments[G__14047__i + 3]; ++G__14047__i;}
  args = new cljs.core.IndexedSeq(G__14047__a,0);
} 
return G__14046__delegate.call(this,x,y,z,args);};
G__14046.cljs$lang$maxFixedArity = 3;
G__14046.cljs$lang$applyTo = (function (arglist__14048){
var x = cljs.core.first(arglist__14048);
arglist__14048 = cljs.core.next(arglist__14048);
var y = cljs.core.first(arglist__14048);
arglist__14048 = cljs.core.next(arglist__14048);
var z = cljs.core.first(arglist__14048);
var args = cljs.core.rest(arglist__14048);
return G__14046__delegate(x,y,z,args);
});
G__14046.cljs$core$IFn$_invoke$arity$variadic = G__14046__delegate;
return G__14046;
})()
;
G__14045 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14045__0.call(this);
case 1:
return G__14045__1.call(this,x);
case 2:
return G__14045__2.call(this,x,y);
case 3:
return G__14045__3.call(this,x,y,z);
default:
var G__14049 = null;
if (arguments.length > 3) {
var G__14050__i = 0, G__14050__a = new Array(arguments.length -  3);
while (G__14050__i < G__14050__a.length) {G__14050__a[G__14050__i] = arguments[G__14050__i + 3]; ++G__14050__i;}
G__14049 = new cljs.core.IndexedSeq(G__14050__a,0);
}
return G__14045__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14045.cljs$lang$maxFixedArity = 3;
G__14045.cljs$lang$applyTo = G__14045__4.cljs$lang$applyTo;
G__14045.cljs$core$IFn$_invoke$arity$0 = G__14045__0;
G__14045.cljs$core$IFn$_invoke$arity$1 = G__14045__1;
G__14045.cljs$core$IFn$_invoke$arity$2 = G__14045__2;
G__14045.cljs$core$IFn$_invoke$arity$3 = G__14045__3;
G__14045.cljs$core$IFn$_invoke$arity$variadic = G__14045__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14045;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__14051 = null;
var G__14051__0 = (function (){
var G__14021 = arg1;
var G__14022 = arg2;
var G__14023 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14021,G__14022,G__14023) : f.call(null,G__14021,G__14022,G__14023));
});
var G__14051__1 = (function (x){
var G__14024 = arg1;
var G__14025 = arg2;
var G__14026 = arg3;
var G__14027 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14024,G__14025,G__14026,G__14027) : f.call(null,G__14024,G__14025,G__14026,G__14027));
});
var G__14051__2 = (function (x,y){
var G__14028 = arg1;
var G__14029 = arg2;
var G__14030 = arg3;
var G__14031 = x;
var G__14032 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14028,G__14029,G__14030,G__14031,G__14032) : f.call(null,G__14028,G__14029,G__14030,G__14031,G__14032));
});
var G__14051__3 = (function (x,y,z){
var G__14033 = arg1;
var G__14034 = arg2;
var G__14035 = arg3;
var G__14036 = x;
var G__14037 = y;
var G__14038 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14033,G__14034,G__14035,G__14036,G__14037,G__14038) : f.call(null,G__14033,G__14034,G__14035,G__14036,G__14037,G__14038));
});
var G__14051__4 = (function() { 
var G__14052__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__14052 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14053__i = 0, G__14053__a = new Array(arguments.length -  3);
while (G__14053__i < G__14053__a.length) {G__14053__a[G__14053__i] = arguments[G__14053__i + 3]; ++G__14053__i;}
  args = new cljs.core.IndexedSeq(G__14053__a,0);
} 
return G__14052__delegate.call(this,x,y,z,args);};
G__14052.cljs$lang$maxFixedArity = 3;
G__14052.cljs$lang$applyTo = (function (arglist__14054){
var x = cljs.core.first(arglist__14054);
arglist__14054 = cljs.core.next(arglist__14054);
var y = cljs.core.first(arglist__14054);
arglist__14054 = cljs.core.next(arglist__14054);
var z = cljs.core.first(arglist__14054);
var args = cljs.core.rest(arglist__14054);
return G__14052__delegate(x,y,z,args);
});
G__14052.cljs$core$IFn$_invoke$arity$variadic = G__14052__delegate;
return G__14052;
})()
;
G__14051 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14051__0.call(this);
case 1:
return G__14051__1.call(this,x);
case 2:
return G__14051__2.call(this,x,y);
case 3:
return G__14051__3.call(this,x,y,z);
default:
var G__14055 = null;
if (arguments.length > 3) {
var G__14056__i = 0, G__14056__a = new Array(arguments.length -  3);
while (G__14056__i < G__14056__a.length) {G__14056__a[G__14056__i] = arguments[G__14056__i + 3]; ++G__14056__i;}
G__14055 = new cljs.core.IndexedSeq(G__14056__a,0);
}
return G__14051__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14051.cljs$lang$maxFixedArity = 3;
G__14051.cljs$lang$applyTo = G__14051__4.cljs$lang$applyTo;
G__14051.cljs$core$IFn$_invoke$arity$0 = G__14051__0;
G__14051.cljs$core$IFn$_invoke$arity$1 = G__14051__1;
G__14051.cljs$core$IFn$_invoke$arity$2 = G__14051__2;
G__14051.cljs$core$IFn$_invoke$arity$3 = G__14051__3;
G__14051.cljs$core$IFn$_invoke$arity$variadic = G__14051__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14051;
})()
});
var partial__5 = (function() { 
var G__14057__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__14058__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__14058 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14059__i = 0, G__14059__a = new Array(arguments.length -  0);
while (G__14059__i < G__14059__a.length) {G__14059__a[G__14059__i] = arguments[G__14059__i + 0]; ++G__14059__i;}
  args = new cljs.core.IndexedSeq(G__14059__a,0);
} 
return G__14058__delegate.call(this,args);};
G__14058.cljs$lang$maxFixedArity = 0;
G__14058.cljs$lang$applyTo = (function (arglist__14060){
var args = cljs.core.seq(arglist__14060);
return G__14058__delegate(args);
});
G__14058.cljs$core$IFn$_invoke$arity$variadic = G__14058__delegate;
return G__14058;
})()
;
};
var G__14057 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__14061__i = 0, G__14061__a = new Array(arguments.length -  4);
while (G__14061__i < G__14061__a.length) {G__14061__a[G__14061__i] = arguments[G__14061__i + 4]; ++G__14061__i;}
  more = new cljs.core.IndexedSeq(G__14061__a,0);
} 
return G__14057__delegate.call(this,f,arg1,arg2,arg3,more);};
G__14057.cljs$lang$maxFixedArity = 4;
G__14057.cljs$lang$applyTo = (function (arglist__14062){
var f = cljs.core.first(arglist__14062);
arglist__14062 = cljs.core.next(arglist__14062);
var arg1 = cljs.core.first(arglist__14062);
arglist__14062 = cljs.core.next(arglist__14062);
var arg2 = cljs.core.first(arglist__14062);
arglist__14062 = cljs.core.next(arglist__14062);
var arg3 = cljs.core.first(arglist__14062);
var more = cljs.core.rest(arglist__14062);
return G__14057__delegate(f,arg1,arg2,arg3,more);
});
G__14057.cljs$core$IFn$_invoke$arity$variadic = G__14057__delegate;
return G__14057;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__14063 = null;
if (arguments.length > 4) {
var G__14064__i = 0, G__14064__a = new Array(arguments.length -  4);
while (G__14064__i < G__14064__a.length) {G__14064__a[G__14064__i] = arguments[G__14064__i + 4]; ++G__14064__i;}
G__14063 = new cljs.core.IndexedSeq(G__14064__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__14063);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__14097 = null;
var G__14097__1 = (function (a){
var G__14081 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14081) : f.call(null,G__14081));
});
var G__14097__2 = (function (a,b){
var G__14082 = (((a == null))?x:a);
var G__14083 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14082,G__14083) : f.call(null,G__14082,G__14083));
});
var G__14097__3 = (function (a,b,c){
var G__14084 = (((a == null))?x:a);
var G__14085 = b;
var G__14086 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14084,G__14085,G__14086) : f.call(null,G__14084,G__14085,G__14086));
});
var G__14097__4 = (function() { 
var G__14098__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__14098 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14099__i = 0, G__14099__a = new Array(arguments.length -  3);
while (G__14099__i < G__14099__a.length) {G__14099__a[G__14099__i] = arguments[G__14099__i + 3]; ++G__14099__i;}
  ds = new cljs.core.IndexedSeq(G__14099__a,0);
} 
return G__14098__delegate.call(this,a,b,c,ds);};
G__14098.cljs$lang$maxFixedArity = 3;
G__14098.cljs$lang$applyTo = (function (arglist__14100){
var a = cljs.core.first(arglist__14100);
arglist__14100 = cljs.core.next(arglist__14100);
var b = cljs.core.first(arglist__14100);
arglist__14100 = cljs.core.next(arglist__14100);
var c = cljs.core.first(arglist__14100);
var ds = cljs.core.rest(arglist__14100);
return G__14098__delegate(a,b,c,ds);
});
G__14098.cljs$core$IFn$_invoke$arity$variadic = G__14098__delegate;
return G__14098;
})()
;
G__14097 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__14097__1.call(this,a);
case 2:
return G__14097__2.call(this,a,b);
case 3:
return G__14097__3.call(this,a,b,c);
default:
var G__14101 = null;
if (arguments.length > 3) {
var G__14102__i = 0, G__14102__a = new Array(arguments.length -  3);
while (G__14102__i < G__14102__a.length) {G__14102__a[G__14102__i] = arguments[G__14102__i + 3]; ++G__14102__i;}
G__14101 = new cljs.core.IndexedSeq(G__14102__a,0);
}
return G__14097__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14101);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14097.cljs$lang$maxFixedArity = 3;
G__14097.cljs$lang$applyTo = G__14097__4.cljs$lang$applyTo;
G__14097.cljs$core$IFn$_invoke$arity$1 = G__14097__1;
G__14097.cljs$core$IFn$_invoke$arity$2 = G__14097__2;
G__14097.cljs$core$IFn$_invoke$arity$3 = G__14097__3;
G__14097.cljs$core$IFn$_invoke$arity$variadic = G__14097__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14097;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__14103 = null;
var G__14103__2 = (function (a,b){
var G__14087 = (((a == null))?x:a);
var G__14088 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14087,G__14088) : f.call(null,G__14087,G__14088));
});
var G__14103__3 = (function (a,b,c){
var G__14089 = (((a == null))?x:a);
var G__14090 = (((b == null))?y:b);
var G__14091 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14089,G__14090,G__14091) : f.call(null,G__14089,G__14090,G__14091));
});
var G__14103__4 = (function() { 
var G__14104__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__14104 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14105__i = 0, G__14105__a = new Array(arguments.length -  3);
while (G__14105__i < G__14105__a.length) {G__14105__a[G__14105__i] = arguments[G__14105__i + 3]; ++G__14105__i;}
  ds = new cljs.core.IndexedSeq(G__14105__a,0);
} 
return G__14104__delegate.call(this,a,b,c,ds);};
G__14104.cljs$lang$maxFixedArity = 3;
G__14104.cljs$lang$applyTo = (function (arglist__14106){
var a = cljs.core.first(arglist__14106);
arglist__14106 = cljs.core.next(arglist__14106);
var b = cljs.core.first(arglist__14106);
arglist__14106 = cljs.core.next(arglist__14106);
var c = cljs.core.first(arglist__14106);
var ds = cljs.core.rest(arglist__14106);
return G__14104__delegate(a,b,c,ds);
});
G__14104.cljs$core$IFn$_invoke$arity$variadic = G__14104__delegate;
return G__14104;
})()
;
G__14103 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14103__2.call(this,a,b);
case 3:
return G__14103__3.call(this,a,b,c);
default:
var G__14107 = null;
if (arguments.length > 3) {
var G__14108__i = 0, G__14108__a = new Array(arguments.length -  3);
while (G__14108__i < G__14108__a.length) {G__14108__a[G__14108__i] = arguments[G__14108__i + 3]; ++G__14108__i;}
G__14107 = new cljs.core.IndexedSeq(G__14108__a,0);
}
return G__14103__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14107);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14103.cljs$lang$maxFixedArity = 3;
G__14103.cljs$lang$applyTo = G__14103__4.cljs$lang$applyTo;
G__14103.cljs$core$IFn$_invoke$arity$2 = G__14103__2;
G__14103.cljs$core$IFn$_invoke$arity$3 = G__14103__3;
G__14103.cljs$core$IFn$_invoke$arity$variadic = G__14103__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14103;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__14109 = null;
var G__14109__2 = (function (a,b){
var G__14092 = (((a == null))?x:a);
var G__14093 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14092,G__14093) : f.call(null,G__14092,G__14093));
});
var G__14109__3 = (function (a,b,c){
var G__14094 = (((a == null))?x:a);
var G__14095 = (((b == null))?y:b);
var G__14096 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14094,G__14095,G__14096) : f.call(null,G__14094,G__14095,G__14096));
});
var G__14109__4 = (function() { 
var G__14110__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__14110 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14111__i = 0, G__14111__a = new Array(arguments.length -  3);
while (G__14111__i < G__14111__a.length) {G__14111__a[G__14111__i] = arguments[G__14111__i + 3]; ++G__14111__i;}
  ds = new cljs.core.IndexedSeq(G__14111__a,0);
} 
return G__14110__delegate.call(this,a,b,c,ds);};
G__14110.cljs$lang$maxFixedArity = 3;
G__14110.cljs$lang$applyTo = (function (arglist__14112){
var a = cljs.core.first(arglist__14112);
arglist__14112 = cljs.core.next(arglist__14112);
var b = cljs.core.first(arglist__14112);
arglist__14112 = cljs.core.next(arglist__14112);
var c = cljs.core.first(arglist__14112);
var ds = cljs.core.rest(arglist__14112);
return G__14110__delegate(a,b,c,ds);
});
G__14110.cljs$core$IFn$_invoke$arity$variadic = G__14110__delegate;
return G__14110;
})()
;
G__14109 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14109__2.call(this,a,b);
case 3:
return G__14109__3.call(this,a,b,c);
default:
var G__14113 = null;
if (arguments.length > 3) {
var G__14114__i = 0, G__14114__a = new Array(arguments.length -  3);
while (G__14114__i < G__14114__a.length) {G__14114__a[G__14114__i] = arguments[G__14114__i + 3]; ++G__14114__i;}
G__14113 = new cljs.core.IndexedSeq(G__14114__a,0);
}
return G__14109__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14109.cljs$lang$maxFixedArity = 3;
G__14109.cljs$lang$applyTo = G__14109__4.cljs$lang$applyTo;
G__14109.cljs$core$IFn$_invoke$arity$2 = G__14109__2;
G__14109.cljs$core$IFn$_invoke$arity$3 = G__14109__3;
G__14109.cljs$core$IFn$_invoke$arity$variadic = G__14109__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14109;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__14145 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14145) : cljs.core.volatile_BANG_.call(null,G__14145));
})();
return ((function (i){
return (function() {
var G__14175 = null;
var G__14175__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14175__1 = (function (result){
var G__14146 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14146) : rf.call(null,G__14146));
});
var G__14175__2 = (function (result,input){
var G__14147 = result;
var G__14148 = (function (){var G__14149 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__14150 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14149,G__14150) : f.call(null,G__14149,G__14150));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14147,G__14148) : rf.call(null,G__14147,G__14148));
});
G__14175 = function(result,input){
switch(arguments.length){
case 0:
return G__14175__0.call(this);
case 1:
return G__14175__1.call(this,result);
case 2:
return G__14175__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14175.cljs$core$IFn$_invoke$arity$0 = G__14175__0;
G__14175.cljs$core$IFn$_invoke$arity$1 = G__14175__1;
G__14175.cljs$core$IFn$_invoke$arity$2 = G__14175__2;
return G__14175;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___14176 = size;
var i_14177 = (0);
while(true){
if((i_14177 < n__4816__auto___14176)){
cljs.core.chunk_append(b,(function (){var G__14171 = (idx + i_14177);
var G__14172 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14177);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14171,G__14172) : f.call(null,G__14171,G__14172));
})());

var G__14178 = (i_14177 + (1));
i_14177 = G__14178;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14173 = idx;
var G__14174 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14173,G__14174) : f.call(null,G__14173,G__14174));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__14197 = null;
var G__14197__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14197__1 = (function (result){
var G__14191 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14191) : rf.call(null,G__14191));
});
var G__14197__2 = (function (result,input){
var v = (function (){var G__14192 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14192) : f.call(null,G__14192));
})();
if((v == null)){
return result;
} else {
var G__14193 = result;
var G__14194 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14193,G__14194) : rf.call(null,G__14193,G__14194));
}
});
G__14197 = function(result,input){
switch(arguments.length){
case 0:
return G__14197__0.call(this);
case 1:
return G__14197__1.call(this,result);
case 2:
return G__14197__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14197.cljs$core$IFn$_invoke$arity$0 = G__14197__0;
G__14197.cljs$core$IFn$_invoke$arity$1 = G__14197__1;
G__14197.cljs$core$IFn$_invoke$arity$2 = G__14197__2;
return G__14197;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___14198 = size;
var i_14199 = (0);
while(true){
if((i_14199 < n__4816__auto___14198)){
var x_14200 = (function (){var G__14195 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14199);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14195) : f.call(null,G__14195));
})();
if((x_14200 == null)){
} else {
cljs.core.chunk_append(b,x_14200);
}

var G__14201 = (i_14199 + (1));
i_14199 = G__14201;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14196 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14196) : f.call(null,G__14196));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14202 = this$__$1;
return goog.getUid(G__14202);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__14203 = cljs.core.seq(self__.watches);
var chunk__14204 = null;
var count__14205 = (0);
var i__14206 = (0);
while(true){
if((i__14206 < count__14205)){
var vec__14207 = chunk__14204.cljs$core$IIndexed$_nth$arity$2(null,i__14206);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14207,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14207,(1),null);
var G__14208_14217 = key;
var G__14209_14218 = this$__$1;
var G__14210_14219 = oldval;
var G__14211_14220 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14208_14217,G__14209_14218,G__14210_14219,G__14211_14220) : f.call(null,G__14208_14217,G__14209_14218,G__14210_14219,G__14211_14220));

var G__14221 = seq__14203;
var G__14222 = chunk__14204;
var G__14223 = count__14205;
var G__14224 = (i__14206 + (1));
seq__14203 = G__14221;
chunk__14204 = G__14222;
count__14205 = G__14223;
i__14206 = G__14224;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14203);
if(temp__4126__auto__){
var seq__14203__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14203__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__14203__$1);
var G__14225 = cljs.core.chunk_rest(seq__14203__$1);
var G__14226 = c__4716__auto__;
var G__14227 = cljs.core.count(c__4716__auto__);
var G__14228 = (0);
seq__14203 = G__14225;
chunk__14204 = G__14226;
count__14205 = G__14227;
i__14206 = G__14228;
continue;
} else {
var vec__14212 = cljs.core.first(seq__14203__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14212,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14212,(1),null);
var G__14213_14229 = key;
var G__14214_14230 = this$__$1;
var G__14215_14231 = oldval;
var G__14216_14232 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14213_14229,G__14214_14230,G__14215_14231,G__14216_14232) : f.call(null,G__14213_14229,G__14214_14230,G__14215_14231,G__14216_14232));

var G__14233 = cljs.core.next(seq__14203__$1);
var G__14234 = null;
var G__14235 = (0);
var G__14236 = (0);
seq__14203 = G__14233;
chunk__14204 = G__14234;
count__14205 = G__14235;
i__14206 = G__14236;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__14240__delegate = function (x,p__14237){
var map__14239 = p__14237;
var map__14239__$1 = ((cljs.core.seq_QMARK_(map__14239))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14239):map__14239);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14239__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14239__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__14240 = function (x,var_args){
var p__14237 = null;
if (arguments.length > 1) {
var G__14241__i = 0, G__14241__a = new Array(arguments.length -  1);
while (G__14241__i < G__14241__a.length) {G__14241__a[G__14241__i] = arguments[G__14241__i + 1]; ++G__14241__i;}
  p__14237 = new cljs.core.IndexedSeq(G__14241__a,0);
} 
return G__14240__delegate.call(this,x,p__14237);};
G__14240.cljs$lang$maxFixedArity = 1;
G__14240.cljs$lang$applyTo = (function (arglist__14242){
var x = cljs.core.first(arglist__14242);
var p__14237 = cljs.core.rest(arglist__14242);
return G__14240__delegate(x,p__14237);
});
G__14240.cljs$core$IFn$_invoke$arity$variadic = G__14240__delegate;
return G__14240;
})()
;
atom = function(x,var_args){
var p__14237 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__14243 = null;
if (arguments.length > 1) {
var G__14244__i = 0, G__14244__a = new Array(arguments.length -  1);
while (G__14244__i < G__14244__a.length) {G__14244__a[G__14244__i] = arguments[G__14244__i + 1]; ++G__14244__i;}
G__14243 = new cljs.core.IndexedSeq(G__14244__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__14247 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__14247) : validate.call(null,G__14247));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__14248 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__14248) : cljs.core.pr_str.call(null,G__14248));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14255 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14255) : f.call(null,G__14255));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14256 = a.state;
var G__14257 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14256,G__14257) : f.call(null,G__14256,G__14257));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__14258 = a.state;
var G__14259 = x;
var G__14260 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14258,G__14259,G__14260) : f.call(null,G__14258,G__14259,G__14260));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__14261__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__14261 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__14262__i = 0, G__14262__a = new Array(arguments.length -  4);
while (G__14262__i < G__14262__a.length) {G__14262__a[G__14262__i] = arguments[G__14262__i + 4]; ++G__14262__i;}
  more = new cljs.core.IndexedSeq(G__14262__a,0);
} 
return G__14261__delegate.call(this,a,f,x,y,more);};
G__14261.cljs$lang$maxFixedArity = 4;
G__14261.cljs$lang$applyTo = (function (arglist__14263){
var a = cljs.core.first(arglist__14263);
arglist__14263 = cljs.core.next(arglist__14263);
var f = cljs.core.first(arglist__14263);
arglist__14263 = cljs.core.next(arglist__14263);
var x = cljs.core.first(arglist__14263);
arglist__14263 = cljs.core.next(arglist__14263);
var y = cljs.core.first(arglist__14263);
var more = cljs.core.rest(arglist__14263);
return G__14261__delegate(a,f,x,y,more);
});
G__14261.cljs$core$IFn$_invoke$arity$variadic = G__14261__delegate;
return G__14261;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__14264 = null;
if (arguments.length > 4) {
var G__14265__i = 0, G__14265__a = new Array(arguments.length -  4);
while (G__14265__i < G__14265__a.length) {G__14265__a[G__14265__i] = arguments[G__14265__i + 4]; ++G__14265__i;}
G__14264 = new cljs.core.IndexedSeq(G__14265__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__14264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14332 = null;
var G__14332__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14332__1 = (function (result){
var G__14299 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14299) : rf.call(null,G__14299));
});
var G__14332__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__14300 = i;
var G__14301 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14300,G__14301) : f.call(null,G__14300,G__14301));
})();
if((v == null)){
return result;
} else {
var G__14302 = result;
var G__14303 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14302,G__14303) : rf.call(null,G__14302,G__14303));
}
});
G__14332 = function(result,input){
switch(arguments.length){
case 0:
return G__14332__0.call(this);
case 1:
return G__14332__1.call(this,result);
case 2:
return G__14332__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14332.cljs$core$IFn$_invoke$arity$0 = G__14332__0;
G__14332.cljs$core$IFn$_invoke$arity$1 = G__14332__1;
G__14332.cljs$core$IFn$_invoke$arity$2 = G__14332__2;
return G__14332;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___14333 = size;
var i_14334 = (0);
while(true){
if((i_14334 < n__4816__auto___14333)){
var x_14335 = (function (){var G__14328 = (idx + i_14334);
var G__14329 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14334);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14328,G__14329) : f.call(null,G__14328,G__14329));
})();
if((x_14335 == null)){
} else {
cljs.core.chunk_append(b,x_14335);
}

var G__14336 = (i_14334 + (1));
i_14334 = G__14336;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14330 = idx;
var G__14331 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14330,G__14331) : f.call(null,G__14330,G__14331));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14550 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14550) : p.call(null,G__14550));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14552 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14552) : p.call(null,G__14552));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__14553 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14553) : p.call(null,G__14553));
} else {
return and__3917__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14555 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14555) : p.call(null,G__14555));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14557 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14557) : p.call(null,G__14557));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__14558 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14558) : p.call(null,G__14558));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14727__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14727 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14728__i = 0, G__14728__a = new Array(arguments.length -  3);
while (G__14728__i < G__14728__a.length) {G__14728__a[G__14728__i] = arguments[G__14728__i + 3]; ++G__14728__i;}
  args = new cljs.core.IndexedSeq(G__14728__a,0);
} 
return G__14727__delegate.call(this,x,y,z,args);};
G__14727.cljs$lang$maxFixedArity = 3;
G__14727.cljs$lang$applyTo = (function (arglist__14729){
var x = cljs.core.first(arglist__14729);
arglist__14729 = cljs.core.next(arglist__14729);
var y = cljs.core.first(arglist__14729);
arglist__14729 = cljs.core.next(arglist__14729);
var z = cljs.core.first(arglist__14729);
var args = cljs.core.rest(arglist__14729);
return G__14727__delegate(x,y,z,args);
});
G__14727.cljs$core$IFn$_invoke$arity$variadic = G__14727__delegate;
return G__14727;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14730 = null;
if (arguments.length > 3) {
var G__14731__i = 0, G__14731__a = new Array(arguments.length -  3);
while (G__14731__i < G__14731__a.length) {G__14731__a[G__14731__i] = arguments[G__14731__i + 3]; ++G__14731__i;}
G__14730 = new cljs.core.IndexedSeq(G__14731__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14590 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14590) : p1.call(null,G__14590));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__14591 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14591) : p2.call(null,G__14591));
} else {
return and__3917__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14593 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14593) : p1.call(null,G__14593));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14595 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14595) : p1.call(null,G__14595));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__14597 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14597) : p2.call(null,G__14597));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var G__14598 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14598) : p2.call(null,G__14598));
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14600 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14600) : p1.call(null,G__14600));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14602 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14602) : p1.call(null,G__14602));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__14604 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14604) : p1.call(null,G__14604));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__14606 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14606) : p2.call(null,G__14606));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__14608 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14608) : p2.call(null,G__14608));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var G__14609 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14609) : p2.call(null,G__14609));
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14732__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14337_SHARP_){
var and__3917__auto__ = (function (){var G__14614 = p1__14337_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14614) : p1.call(null,G__14614));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__14615 = p1__14337_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14615) : p2.call(null,G__14615));
} else {
return and__3917__auto__;
}
}),args)));
};
var G__14732 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14733__i = 0, G__14733__a = new Array(arguments.length -  3);
while (G__14733__i < G__14733__a.length) {G__14733__a[G__14733__i] = arguments[G__14733__i + 3]; ++G__14733__i;}
  args = new cljs.core.IndexedSeq(G__14733__a,0);
} 
return G__14732__delegate.call(this,x,y,z,args);};
G__14732.cljs$lang$maxFixedArity = 3;
G__14732.cljs$lang$applyTo = (function (arglist__14734){
var x = cljs.core.first(arglist__14734);
arglist__14734 = cljs.core.next(arglist__14734);
var y = cljs.core.first(arglist__14734);
arglist__14734 = cljs.core.next(arglist__14734);
var z = cljs.core.first(arglist__14734);
var args = cljs.core.rest(arglist__14734);
return G__14732__delegate(x,y,z,args);
});
G__14732.cljs$core$IFn$_invoke$arity$variadic = G__14732__delegate;
return G__14732;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14735 = null;
if (arguments.length > 3) {
var G__14736__i = 0, G__14736__a = new Array(arguments.length -  3);
while (G__14736__i < G__14736__a.length) {G__14736__a[G__14736__i] = arguments[G__14736__i + 3]; ++G__14736__i;}
G__14735 = new cljs.core.IndexedSeq(G__14736__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14661 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14661) : p1.call(null,G__14661));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14663 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14663) : p2.call(null,G__14663));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__14664 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14664) : p3.call(null,G__14664));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14666 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14666) : p1.call(null,G__14666));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14668 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14668) : p2.call(null,G__14668));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__14670 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14670) : p3.call(null,G__14670));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__14672 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14672) : p1.call(null,G__14672));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__14674 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14674) : p2.call(null,G__14674));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var G__14675 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14675) : p3.call(null,G__14675));
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3917__auto__ = (function (){var G__14677 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14677) : p1.call(null,G__14677));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14679 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14679) : p2.call(null,G__14679));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var and__3917__auto____$2 = (function (){var G__14681 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14681) : p3.call(null,G__14681));
})();
if(cljs.core.truth_(and__3917__auto____$2)){
var and__3917__auto____$3 = (function (){var G__14683 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14683) : p1.call(null,G__14683));
})();
if(cljs.core.truth_(and__3917__auto____$3)){
var and__3917__auto____$4 = (function (){var G__14685 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14685) : p2.call(null,G__14685));
})();
if(cljs.core.truth_(and__3917__auto____$4)){
var and__3917__auto____$5 = (function (){var G__14687 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14687) : p3.call(null,G__14687));
})();
if(cljs.core.truth_(and__3917__auto____$5)){
var and__3917__auto____$6 = (function (){var G__14689 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14689) : p1.call(null,G__14689));
})();
if(cljs.core.truth_(and__3917__auto____$6)){
var and__3917__auto____$7 = (function (){var G__14691 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14691) : p2.call(null,G__14691));
})();
if(cljs.core.truth_(and__3917__auto____$7)){
var G__14692 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14692) : p3.call(null,G__14692));
} else {
return and__3917__auto____$7;
}
} else {
return and__3917__auto____$6;
}
} else {
return and__3917__auto____$5;
}
} else {
return and__3917__auto____$4;
}
} else {
return and__3917__auto____$3;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14737__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14338_SHARP_){
var and__3917__auto__ = (function (){var G__14699 = p1__14338_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14699) : p1.call(null,G__14699));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14701 = p1__14338_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14701) : p2.call(null,G__14701));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__14702 = p1__14338_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14702) : p3.call(null,G__14702));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
}),args)));
};
var G__14737 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14738__i = 0, G__14738__a = new Array(arguments.length -  3);
while (G__14738__i < G__14738__a.length) {G__14738__a[G__14738__i] = arguments[G__14738__i + 3]; ++G__14738__i;}
  args = new cljs.core.IndexedSeq(G__14738__a,0);
} 
return G__14737__delegate.call(this,x,y,z,args);};
G__14737.cljs$lang$maxFixedArity = 3;
G__14737.cljs$lang$applyTo = (function (arglist__14739){
var x = cljs.core.first(arglist__14739);
arglist__14739 = cljs.core.next(arglist__14739);
var y = cljs.core.first(arglist__14739);
arglist__14739 = cljs.core.next(arglist__14739);
var z = cljs.core.first(arglist__14739);
var args = cljs.core.rest(arglist__14739);
return G__14737__delegate(x,y,z,args);
});
G__14737.cljs$core$IFn$_invoke$arity$variadic = G__14737__delegate;
return G__14737;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14740 = null;
if (arguments.length > 3) {
var G__14741__i = 0, G__14741__a = new Array(arguments.length -  3);
while (G__14741__i < G__14741__a.length) {G__14741__a[G__14741__i] = arguments[G__14741__i + 3]; ++G__14741__i;}
G__14740 = new cljs.core.IndexedSeq(G__14741__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14740);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14742__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14339_SHARP_){
var G__14718 = x;
return (p1__14339_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14339_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14718) : p1__14339_SHARP_.call(null,G__14718));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14340_SHARP_){
var and__3917__auto__ = (function (){var G__14720 = x;
return (p1__14340_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14340_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14720) : p1__14340_SHARP_.call(null,G__14720));
})();
if(cljs.core.truth_(and__3917__auto__)){
var G__14721 = y;
return (p1__14340_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14340_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14721) : p1__14340_SHARP_.call(null,G__14721));
} else {
return and__3917__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14341_SHARP_){
var and__3917__auto__ = (function (){var G__14723 = x;
return (p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14723) : p1__14341_SHARP_.call(null,G__14723));
})();
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__14725 = y;
return (p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14725) : p1__14341_SHARP_.call(null,G__14725));
})();
if(cljs.core.truth_(and__3917__auto____$1)){
var G__14726 = z;
return (p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14341_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14726) : p1__14341_SHARP_.call(null,G__14726));
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14743__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14342_SHARP_){
return cljs.core.every_QMARK_(p1__14342_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14743 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14744__i = 0, G__14744__a = new Array(arguments.length -  3);
while (G__14744__i < G__14744__a.length) {G__14744__a[G__14744__i] = arguments[G__14744__i + 3]; ++G__14744__i;}
  args = new cljs.core.IndexedSeq(G__14744__a,0);
} 
return G__14743__delegate.call(this,x,y,z,args);};
G__14743.cljs$lang$maxFixedArity = 3;
G__14743.cljs$lang$applyTo = (function (arglist__14745){
var x = cljs.core.first(arglist__14745);
arglist__14745 = cljs.core.next(arglist__14745);
var y = cljs.core.first(arglist__14745);
arglist__14745 = cljs.core.next(arglist__14745);
var z = cljs.core.first(arglist__14745);
var args = cljs.core.rest(arglist__14745);
return G__14743__delegate(x,y,z,args);
});
G__14743.cljs$core$IFn$_invoke$arity$variadic = G__14743__delegate;
return G__14743;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14746 = null;
if (arguments.length > 3) {
var G__14747__i = 0, G__14747__a = new Array(arguments.length -  3);
while (G__14747__i < G__14747__a.length) {G__14747__a[G__14747__i] = arguments[G__14747__i + 3]; ++G__14747__i;}
G__14746 = new cljs.core.IndexedSeq(G__14747__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14746);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14742 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14748__i = 0, G__14748__a = new Array(arguments.length -  3);
while (G__14748__i < G__14748__a.length) {G__14748__a[G__14748__i] = arguments[G__14748__i + 3]; ++G__14748__i;}
  ps = new cljs.core.IndexedSeq(G__14748__a,0);
} 
return G__14742__delegate.call(this,p1,p2,p3,ps);};
G__14742.cljs$lang$maxFixedArity = 3;
G__14742.cljs$lang$applyTo = (function (arglist__14749){
var p1 = cljs.core.first(arglist__14749);
arglist__14749 = cljs.core.next(arglist__14749);
var p2 = cljs.core.first(arglist__14749);
arglist__14749 = cljs.core.next(arglist__14749);
var p3 = cljs.core.first(arglist__14749);
var ps = cljs.core.rest(arglist__14749);
return G__14742__delegate(p1,p2,p3,ps);
});
G__14742.cljs$core$IFn$_invoke$arity$variadic = G__14742__delegate;
return G__14742;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14750 = null;
if (arguments.length > 3) {
var G__14751__i = 0, G__14751__a = new Array(arguments.length -  3);
while (G__14751__i < G__14751__a.length) {G__14751__a[G__14751__i] = arguments[G__14751__i + 3]; ++G__14751__i;}
G__14750 = new cljs.core.IndexedSeq(G__14751__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14957 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14957) : p.call(null,G__14957));
});
var sp1__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__14959 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14959) : p.call(null,G__14959));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__14960 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14960) : p.call(null,G__14960));
}
});
var sp1__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__14962 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14962) : p.call(null,G__14962));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__14964 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14964) : p.call(null,G__14964));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__14965 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14965) : p.call(null,G__14965));
}
}
});
var sp1__4 = (function() { 
var G__15126__delegate = function (x,y,z,args){
var or__3929__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__15126 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15127__i = 0, G__15127__a = new Array(arguments.length -  3);
while (G__15127__i < G__15127__a.length) {G__15127__a[G__15127__i] = arguments[G__15127__i + 3]; ++G__15127__i;}
  args = new cljs.core.IndexedSeq(G__15127__a,0);
} 
return G__15126__delegate.call(this,x,y,z,args);};
G__15126.cljs$lang$maxFixedArity = 3;
G__15126.cljs$lang$applyTo = (function (arglist__15128){
var x = cljs.core.first(arglist__15128);
arglist__15128 = cljs.core.next(arglist__15128);
var y = cljs.core.first(arglist__15128);
arglist__15128 = cljs.core.next(arglist__15128);
var z = cljs.core.first(arglist__15128);
var args = cljs.core.rest(arglist__15128);
return G__15126__delegate(x,y,z,args);
});
G__15126.cljs$core$IFn$_invoke$arity$variadic = G__15126__delegate;
return G__15126;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__15129 = null;
if (arguments.length > 3) {
var G__15130__i = 0, G__15130__a = new Array(arguments.length -  3);
while (G__15130__i < G__15130__a.length) {G__15130__a[G__15130__i] = arguments[G__15130__i + 3]; ++G__15130__i;}
G__15129 = new cljs.core.IndexedSeq(G__15130__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3929__auto__ = (function (){var G__14997 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14997) : p1.call(null,G__14997));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__14998 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14998) : p2.call(null,G__14998));
}
});
var sp2__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__15000 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15000) : p1.call(null,G__15000));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15002 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15002) : p1.call(null,G__15002));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__15004 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15004) : p2.call(null,G__15004));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var G__15005 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15005) : p2.call(null,G__15005));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__15007 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15007) : p1.call(null,G__15007));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15009 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15009) : p1.call(null,G__15009));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__15011 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15011) : p1.call(null,G__15011));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__15013 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15013) : p2.call(null,G__15013));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__15015 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15015) : p2.call(null,G__15015));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var G__15016 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15016) : p2.call(null,G__15016));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__15131__delegate = function (x,y,z,args){
var or__3929__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__){
return (function (p1__14752_SHARP_){
var or__3929__auto____$1 = (function (){var G__15018 = p1__14752_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15018) : p1.call(null,G__15018));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__15019 = p1__14752_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15019) : p2.call(null,G__15019));
}
});})(or__3929__auto__))
,args);
}
};
var G__15131 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15132__i = 0, G__15132__a = new Array(arguments.length -  3);
while (G__15132__i < G__15132__a.length) {G__15132__a[G__15132__i] = arguments[G__15132__i + 3]; ++G__15132__i;}
  args = new cljs.core.IndexedSeq(G__15132__a,0);
} 
return G__15131__delegate.call(this,x,y,z,args);};
G__15131.cljs$lang$maxFixedArity = 3;
G__15131.cljs$lang$applyTo = (function (arglist__15133){
var x = cljs.core.first(arglist__15133);
arglist__15133 = cljs.core.next(arglist__15133);
var y = cljs.core.first(arglist__15133);
arglist__15133 = cljs.core.next(arglist__15133);
var z = cljs.core.first(arglist__15133);
var args = cljs.core.rest(arglist__15133);
return G__15131__delegate(x,y,z,args);
});
G__15131.cljs$core$IFn$_invoke$arity$variadic = G__15131__delegate;
return G__15131;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__15134 = null;
if (arguments.length > 3) {
var G__15135__i = 0, G__15135__a = new Array(arguments.length -  3);
while (G__15135__i < G__15135__a.length) {G__15135__a[G__15135__i] = arguments[G__15135__i + 3]; ++G__15135__i;}
G__15134 = new cljs.core.IndexedSeq(G__15135__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3929__auto__ = (function (){var G__15065 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15065) : p1.call(null,G__15065));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15067 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15067) : p2.call(null,G__15067));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__15068 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15068) : p3.call(null,G__15068));
}
}
});
var sp3__2 = (function (x,y){
var or__3929__auto__ = (function (){var G__15070 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15070) : p1.call(null,G__15070));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15072 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15072) : p2.call(null,G__15072));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__15074 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15074) : p3.call(null,G__15074));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__15076 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15076) : p1.call(null,G__15076));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__15078 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15078) : p2.call(null,G__15078));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var G__15079 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15079) : p3.call(null,G__15079));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3929__auto__ = (function (){var G__15081 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15081) : p1.call(null,G__15081));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15083 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15083) : p2.call(null,G__15083));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__15085 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15085) : p3.call(null,G__15085));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var or__3929__auto____$3 = (function (){var G__15087 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15087) : p1.call(null,G__15087));
})();
if(cljs.core.truth_(or__3929__auto____$3)){
return or__3929__auto____$3;
} else {
var or__3929__auto____$4 = (function (){var G__15089 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15089) : p2.call(null,G__15089));
})();
if(cljs.core.truth_(or__3929__auto____$4)){
return or__3929__auto____$4;
} else {
var or__3929__auto____$5 = (function (){var G__15091 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15091) : p3.call(null,G__15091));
})();
if(cljs.core.truth_(or__3929__auto____$5)){
return or__3929__auto____$5;
} else {
var or__3929__auto____$6 = (function (){var G__15093 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15093) : p1.call(null,G__15093));
})();
if(cljs.core.truth_(or__3929__auto____$6)){
return or__3929__auto____$6;
} else {
var or__3929__auto____$7 = (function (){var G__15095 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15095) : p2.call(null,G__15095));
})();
if(cljs.core.truth_(or__3929__auto____$7)){
return or__3929__auto____$7;
} else {
var G__15096 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15096) : p3.call(null,G__15096));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__15136__delegate = function (x,y,z,args){
var or__3929__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__){
return (function (p1__14753_SHARP_){
var or__3929__auto____$1 = (function (){var G__15098 = p1__14753_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15098) : p1.call(null,G__15098));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var G__15100 = p1__14753_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15100) : p2.call(null,G__15100));
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
var G__15101 = p1__14753_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15101) : p3.call(null,G__15101));
}
}
});})(or__3929__auto__))
,args);
}
};
var G__15136 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15137__i = 0, G__15137__a = new Array(arguments.length -  3);
while (G__15137__i < G__15137__a.length) {G__15137__a[G__15137__i] = arguments[G__15137__i + 3]; ++G__15137__i;}
  args = new cljs.core.IndexedSeq(G__15137__a,0);
} 
return G__15136__delegate.call(this,x,y,z,args);};
G__15136.cljs$lang$maxFixedArity = 3;
G__15136.cljs$lang$applyTo = (function (arglist__15138){
var x = cljs.core.first(arglist__15138);
arglist__15138 = cljs.core.next(arglist__15138);
var y = cljs.core.first(arglist__15138);
arglist__15138 = cljs.core.next(arglist__15138);
var z = cljs.core.first(arglist__15138);
var args = cljs.core.rest(arglist__15138);
return G__15136__delegate(x,y,z,args);
});
G__15136.cljs$core$IFn$_invoke$arity$variadic = G__15136__delegate;
return G__15136;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__15139 = null;
if (arguments.length > 3) {
var G__15140__i = 0, G__15140__a = new Array(arguments.length -  3);
while (G__15140__i < G__15140__a.length) {G__15140__a[G__15140__i] = arguments[G__15140__i + 3]; ++G__15140__i;}
G__15139 = new cljs.core.IndexedSeq(G__15140__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__15141__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14754_SHARP_){
var G__15117 = x;
return (p1__14754_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14754_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15117) : p1__14754_SHARP_.call(null,G__15117));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14755_SHARP_){
var or__3929__auto__ = (function (){var G__15119 = x;
return (p1__14755_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14755_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15119) : p1__14755_SHARP_.call(null,G__15119));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var G__15120 = y;
return (p1__14755_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14755_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15120) : p1__14755_SHARP_.call(null,G__15120));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14756_SHARP_){
var or__3929__auto__ = (function (){var G__15122 = x;
return (p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15122) : p1__14756_SHARP_.call(null,G__15122));
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var G__15124 = y;
return (p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15124) : p1__14756_SHARP_.call(null,G__15124));
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var G__15125 = z;
return (p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14756_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15125) : p1__14756_SHARP_.call(null,G__15125));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__15142__delegate = function (x,y,z,args){
var or__3929__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.some(((function (or__3929__auto__,ps__$1){
return (function (p1__14757_SHARP_){
return cljs.core.some(p1__14757_SHARP_,args);
});})(or__3929__auto__,ps__$1))
,ps__$1);
}
};
var G__15142 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15143__i = 0, G__15143__a = new Array(arguments.length -  3);
while (G__15143__i < G__15143__a.length) {G__15143__a[G__15143__i] = arguments[G__15143__i + 3]; ++G__15143__i;}
  args = new cljs.core.IndexedSeq(G__15143__a,0);
} 
return G__15142__delegate.call(this,x,y,z,args);};
G__15142.cljs$lang$maxFixedArity = 3;
G__15142.cljs$lang$applyTo = (function (arglist__15144){
var x = cljs.core.first(arglist__15144);
arglist__15144 = cljs.core.next(arglist__15144);
var y = cljs.core.first(arglist__15144);
arglist__15144 = cljs.core.next(arglist__15144);
var z = cljs.core.first(arglist__15144);
var args = cljs.core.rest(arglist__15144);
return G__15142__delegate(x,y,z,args);
});
G__15142.cljs$core$IFn$_invoke$arity$variadic = G__15142__delegate;
return G__15142;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__15145 = null;
if (arguments.length > 3) {
var G__15146__i = 0, G__15146__a = new Array(arguments.length -  3);
while (G__15146__i < G__15146__a.length) {G__15146__a[G__15146__i] = arguments[G__15146__i + 3]; ++G__15146__i;}
G__15145 = new cljs.core.IndexedSeq(G__15146__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__15141 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15147__i = 0, G__15147__a = new Array(arguments.length -  3);
while (G__15147__i < G__15147__a.length) {G__15147__a[G__15147__i] = arguments[G__15147__i + 3]; ++G__15147__i;}
  ps = new cljs.core.IndexedSeq(G__15147__a,0);
} 
return G__15141__delegate.call(this,p1,p2,p3,ps);};
G__15141.cljs$lang$maxFixedArity = 3;
G__15141.cljs$lang$applyTo = (function (arglist__15148){
var p1 = cljs.core.first(arglist__15148);
arglist__15148 = cljs.core.next(arglist__15148);
var p2 = cljs.core.first(arglist__15148);
arglist__15148 = cljs.core.next(arglist__15148);
var p3 = cljs.core.first(arglist__15148);
var ps = cljs.core.rest(arglist__15148);
return G__15141__delegate(p1,p2,p3,ps);
});
G__15141.cljs$core$IFn$_invoke$arity$variadic = G__15141__delegate;
return G__15141;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__15149 = null;
if (arguments.length > 3) {
var G__15150__i = 0, G__15150__a = new Array(arguments.length -  3);
while (G__15150__i < G__15150__a.length) {G__15150__a[G__15150__i] = arguments[G__15150__i + 3]; ++G__15150__i;}
G__15149 = new cljs.core.IndexedSeq(G__15150__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__15205 = null;
var G__15205__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15205__1 = (function (result){
var G__15191 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15191) : rf.call(null,G__15191));
});
var G__15205__2 = (function (result,input){
var G__15192 = result;
var G__15193 = (function (){var G__15194 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15194) : f.call(null,G__15194));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15192,G__15193) : rf.call(null,G__15192,G__15193));
});
var G__15205__3 = (function() { 
var G__15206__delegate = function (result,input,inputs){
var G__15195 = result;
var G__15196 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15195,G__15196) : rf.call(null,G__15195,G__15196));
};
var G__15206 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__15207__i = 0, G__15207__a = new Array(arguments.length -  2);
while (G__15207__i < G__15207__a.length) {G__15207__a[G__15207__i] = arguments[G__15207__i + 2]; ++G__15207__i;}
  inputs = new cljs.core.IndexedSeq(G__15207__a,0);
} 
return G__15206__delegate.call(this,result,input,inputs);};
G__15206.cljs$lang$maxFixedArity = 2;
G__15206.cljs$lang$applyTo = (function (arglist__15208){
var result = cljs.core.first(arglist__15208);
arglist__15208 = cljs.core.next(arglist__15208);
var input = cljs.core.first(arglist__15208);
var inputs = cljs.core.rest(arglist__15208);
return G__15206__delegate(result,input,inputs);
});
G__15206.cljs$core$IFn$_invoke$arity$variadic = G__15206__delegate;
return G__15206;
})()
;
G__15205 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__15205__0.call(this);
case 1:
return G__15205__1.call(this,result);
case 2:
return G__15205__2.call(this,result,input);
default:
var G__15209 = null;
if (arguments.length > 2) {
var G__15210__i = 0, G__15210__a = new Array(arguments.length -  2);
while (G__15210__i < G__15210__a.length) {G__15210__a[G__15210__i] = arguments[G__15210__i + 2]; ++G__15210__i;}
G__15209 = new cljs.core.IndexedSeq(G__15210__a,0);
}
return G__15205__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__15209);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15205.cljs$lang$maxFixedArity = 2;
G__15205.cljs$lang$applyTo = G__15205__3.cljs$lang$applyTo;
G__15205.cljs$core$IFn$_invoke$arity$0 = G__15205__0;
G__15205.cljs$core$IFn$_invoke$arity$1 = G__15205__1;
G__15205.cljs$core$IFn$_invoke$arity$2 = G__15205__2;
G__15205.cljs$core$IFn$_invoke$arity$variadic = G__15205__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15205;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___15211 = size;
var i_15212 = (0);
while(true){
if((i_15212 < n__4816__auto___15211)){
cljs.core.chunk_append(b,(function (){var G__15197 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15212);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15197) : f.call(null,G__15197));
})());

var G__15213 = (i_15212 + (1));
i_15212 = G__15213;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15198 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15198) : f.call(null,G__15198));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__15199 = cljs.core.first(s1);
var G__15200 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15199,G__15200) : f.call(null,G__15199,G__15200));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__15201 = cljs.core.first(s1);
var G__15202 = cljs.core.first(s2);
var G__15203 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15201,G__15202,G__15203) : f.call(null,G__15201,G__15202,G__15203));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__15214__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__15151_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15151_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__15214 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15215__i = 0, G__15215__a = new Array(arguments.length -  4);
while (G__15215__i < G__15215__a.length) {G__15215__a[G__15215__i] = arguments[G__15215__i + 4]; ++G__15215__i;}
  colls = new cljs.core.IndexedSeq(G__15215__a,0);
} 
return G__15214__delegate.call(this,f,c1,c2,c3,colls);};
G__15214.cljs$lang$maxFixedArity = 4;
G__15214.cljs$lang$applyTo = (function (arglist__15216){
var f = cljs.core.first(arglist__15216);
arglist__15216 = cljs.core.next(arglist__15216);
var c1 = cljs.core.first(arglist__15216);
arglist__15216 = cljs.core.next(arglist__15216);
var c2 = cljs.core.first(arglist__15216);
arglist__15216 = cljs.core.next(arglist__15216);
var c3 = cljs.core.first(arglist__15216);
var colls = cljs.core.rest(arglist__15216);
return G__15214__delegate(f,c1,c2,c3,colls);
});
G__15214.cljs$core$IFn$_invoke$arity$variadic = G__15214__delegate;
return G__15214;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__15217 = null;
if (arguments.length > 4) {
var G__15218__i = 0, G__15218__a = new Array(arguments.length -  4);
while (G__15218__i < G__15218__a.length) {G__15218__a[G__15218__i] = arguments[G__15218__i + 4]; ++G__15218__i;}
G__15217 = new cljs.core.IndexedSeq(G__15218__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15227 = null;
var G__15227__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15227__1 = (function (result){
var G__15224 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15224) : rf.call(null,G__15224));
});
var G__15227__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__15225 = result;
var G__15226 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15225,G__15226) : rf.call(null,G__15225,G__15226));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__15227 = function(result,input){
switch(arguments.length){
case 0:
return G__15227__0.call(this);
case 1:
return G__15227__1.call(this,result);
case 2:
return G__15227__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15227.cljs$core$IFn$_invoke$arity$0 = G__15227__0;
G__15227.cljs$core$IFn$_invoke$arity$1 = G__15227__1;
G__15227.cljs$core$IFn$_invoke$arity$2 = G__15227__2;
return G__15227;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__15234 = null;
var G__15234__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15234__1 = (function (result){
var G__15231 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15231) : rf.call(null,G__15231));
});
var G__15234__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__15232 = result;
var G__15233 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15232,G__15233) : rf.call(null,G__15232,G__15233));
}
});
G__15234 = function(result,input){
switch(arguments.length){
case 0:
return G__15234__0.call(this);
case 1:
return G__15234__1.call(this,result);
case 2:
return G__15234__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15234.cljs$core$IFn$_invoke$arity$0 = G__15234__0;
G__15234.cljs$core$IFn$_invoke$arity$1 = G__15234__1;
G__15234.cljs$core$IFn$_invoke$arity$2 = G__15234__2;
return G__15234;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__15235 = (n__$1 - (1));
var G__15236 = cljs.core.rest(s);
n__$1 = G__15235;
coll__$1 = G__15236;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__15239 = cljs.core.next(s);
var G__15240 = cljs.core.next(lead);
s = G__15239;
lead = G__15240;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__15253 = null;
var G__15253__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15253__1 = (function (result){
var G__15247 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15247) : rf.call(null,G__15247));
});
var G__15253__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3917__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3917__auto__)){
var G__15248 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15248) : pred.call(null,G__15248));
} else {
return and__3917__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__15249 = result;
var G__15250 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15249,G__15250) : rf.call(null,G__15249,G__15250));
}
});
G__15253 = function(result,input){
switch(arguments.length){
case 0:
return G__15253__0.call(this);
case 1:
return G__15253__1.call(this,result);
case 2:
return G__15253__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15253.cljs$core$IFn$_invoke$arity$0 = G__15253__0;
G__15253.cljs$core$IFn$_invoke$arity$1 = G__15253__1;
G__15253.cljs$core$IFn$_invoke$arity$2 = G__15253__2;
return G__15253;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3917__auto__ = s;
if(and__3917__auto__){
var G__15252 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15252) : pred__$1.call(null,G__15252));
} else {
return and__3917__auto__;
}
})())){
var G__15254 = pred__$1;
var G__15255 = cljs.core.rest(s);
pred__$1 = G__15254;
coll__$1 = G__15255;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__15264 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15264) : f.call(null,G__15264));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__15267__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__15267 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15268__i = 0, G__15268__a = new Array(arguments.length -  2);
while (G__15268__i < G__15268__a.length) {G__15268__a[G__15268__i] = arguments[G__15268__i + 2]; ++G__15268__i;}
  colls = new cljs.core.IndexedSeq(G__15268__a,0);
} 
return G__15267__delegate.call(this,c1,c2,colls);};
G__15267.cljs$lang$maxFixedArity = 2;
G__15267.cljs$lang$applyTo = (function (arglist__15269){
var c1 = cljs.core.first(arglist__15269);
arglist__15269 = cljs.core.next(arglist__15269);
var c2 = cljs.core.first(arglist__15269);
var colls = cljs.core.rest(arglist__15269);
return G__15267__delegate(c1,c2,colls);
});
G__15267.cljs$core$IFn$_invoke$arity$variadic = G__15267__delegate;
return G__15267;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__15270 = null;
if (arguments.length > 2) {
var G__15271__i = 0, G__15271__a = new Array(arguments.length -  2);
while (G__15271__i < G__15271__a.length) {G__15271__a[G__15271__i] = arguments[G__15271__i + 2]; ++G__15271__i;}
G__15270 = new cljs.core.IndexedSeq(G__15271__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__15270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__15286 = null;
var G__15286__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15286__1 = (function (result){
var G__15279 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15279) : rf.call(null,G__15279));
});
var G__15286__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__15280 = result;
var G__15281 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15280,G__15281) : rf.call(null,G__15280,G__15281));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__15282 = sepr;
var G__15283 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15282,G__15283) : rf.call(null,G__15282,G__15283));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__15284 = result;
var G__15285 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15284,G__15285) : rf.call(null,G__15284,G__15285));
}
});
G__15286 = function(result,input){
switch(arguments.length){
case 0:
return G__15286__0.call(this);
case 1:
return G__15286__1.call(this,result);
case 2:
return G__15286__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15286.cljs$core$IFn$_invoke$arity$0 = G__15286__0;
G__15286.cljs$core$IFn$_invoke$arity$1 = G__15286__1;
G__15286.cljs$core$IFn$_invoke$arity$2 = G__15286__2;
return G__15286;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__15295__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__15295 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__15296__i = 0, G__15296__a = new Array(arguments.length -  1);
while (G__15296__i < G__15296__a.length) {G__15296__a[G__15296__i] = arguments[G__15296__i + 1]; ++G__15296__i;}
  colls = new cljs.core.IndexedSeq(G__15296__a,0);
} 
return G__15295__delegate.call(this,f,colls);};
G__15295.cljs$lang$maxFixedArity = 1;
G__15295.cljs$lang$applyTo = (function (arglist__15297){
var f = cljs.core.first(arglist__15297);
var colls = cljs.core.rest(arglist__15297);
return G__15295__delegate(f,colls);
});
G__15295.cljs$core$IFn$_invoke$arity$variadic = G__15295__delegate;
return G__15295;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__15298 = null;
if (arguments.length > 1) {
var G__15299__i = 0, G__15299__a = new Array(arguments.length -  1);
while (G__15299__i < G__15299__a.length) {G__15299__a[G__15299__i] = arguments[G__15299__i + 1]; ++G__15299__i;}
G__15298 = new cljs.core.IndexedSeq(G__15299__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__15318 = null;
var G__15318__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15318__1 = (function (result){
var G__15312 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15312) : rf.call(null,G__15312));
});
var G__15318__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15313 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15313) : pred.call(null,G__15313));
})())){
var G__15314 = result;
var G__15315 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15314,G__15315) : rf.call(null,G__15314,G__15315));
} else {
return result;
}
});
G__15318 = function(result,input){
switch(arguments.length){
case 0:
return G__15318__0.call(this);
case 1:
return G__15318__1.call(this,result);
case 2:
return G__15318__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15318.cljs$core$IFn$_invoke$arity$0 = G__15318__0;
G__15318.cljs$core$IFn$_invoke$arity$1 = G__15318__1;
G__15318.cljs$core$IFn$_invoke$arity$2 = G__15318__2;
return G__15318;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4816__auto___15319 = size;
var i_15320 = (0);
while(true){
if((i_15320 < n__4816__auto___15319)){
if(cljs.core.truth_((function (){var G__15316 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15320);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15316) : pred.call(null,G__15316));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15320));
} else {
}

var G__15321 = (i_15320 + (1));
i_15320 = G__15321;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__15317 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15317) : pred.call(null,G__15317));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__15328 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15328) : branch_QMARK_.call(null,G__15328));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__15329 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15329) : children.call(null,G__15329));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15330_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__15330_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__15333 = to;
if(G__15333){
var bit__4603__auto__ = (G__15333.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4603__auto__) || (G__15333.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__15334 = to;
if(G__15334){
var bit__4603__auto__ = (G__15334.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4603__auto__) || (G__15334.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__15336 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15336) : f.call(null,G__15336));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__15337__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__15337 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15338__i = 0, G__15338__a = new Array(arguments.length -  4);
while (G__15338__i < G__15338__a.length) {G__15338__a[G__15338__i] = arguments[G__15338__i + 4]; ++G__15338__i;}
  colls = new cljs.core.IndexedSeq(G__15338__a,0);
} 
return G__15337__delegate.call(this,f,c1,c2,c3,colls);};
G__15337.cljs$lang$maxFixedArity = 4;
G__15337.cljs$lang$applyTo = (function (arglist__15339){
var f = cljs.core.first(arglist__15339);
arglist__15339 = cljs.core.next(arglist__15339);
var c1 = cljs.core.first(arglist__15339);
arglist__15339 = cljs.core.next(arglist__15339);
var c2 = cljs.core.first(arglist__15339);
arglist__15339 = cljs.core.next(arglist__15339);
var c3 = cljs.core.first(arglist__15339);
var colls = cljs.core.rest(arglist__15339);
return G__15337__delegate(f,c1,c2,c3,colls);
});
G__15337.cljs$core$IFn$_invoke$arity$variadic = G__15337__delegate;
return G__15337;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__15340 = null;
if (arguments.length > 4) {
var G__15341__i = 0, G__15341__a = new Array(arguments.length -  4);
while (G__15341__i < G__15341__a.length) {G__15341__a[G__15341__i] = arguments[G__15341__i + 4]; ++G__15341__i;}
G__15340 = new cljs.core.IndexedSeq(G__15341__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__15343 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15343) : pred.call(null,G__15343));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__15358 = m__$1;
if(G__15358){
var bit__4610__auto__ = (G__15358.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4610__auto__) || (G__15358.cljs$core$ILookup$)){
return true;
} else {
if((!G__15358.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15358);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15358);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__15359 = sentinel;
var G__15360 = m__$2;
var G__15361 = cljs.core.next(ks__$1);
sentinel = G__15359;
m__$1 = G__15360;
ks__$1 = G__15361;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__15362,v){
var vec__15367 = p__15362;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15367,(0),null);
var ks = cljs.core.nthnext(vec__15367,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__15368,f){
var vec__15406 = p__15368;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15406,(0),null);
var ks = cljs.core.nthnext(vec__15406,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15407 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15407) : f.call(null,G__15407));
})());
}
});
var update_in__4 = (function (m,p__15369,f,a){
var vec__15408 = p__15369;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15408,(0),null);
var ks = cljs.core.nthnext(vec__15408,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15409 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15410 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15409,G__15410) : f.call(null,G__15409,G__15410));
})());
}
});
var update_in__5 = (function (m,p__15370,f,a,b){
var vec__15411 = p__15370;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15411,(0),null);
var ks = cljs.core.nthnext(vec__15411,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15412 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15413 = a;
var G__15414 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15412,G__15413,G__15414) : f.call(null,G__15412,G__15413,G__15414));
})());
}
});
var update_in__6 = (function (m,p__15371,f,a,b,c){
var vec__15415 = p__15371;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15415,(0),null);
var ks = cljs.core.nthnext(vec__15415,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15416 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15417 = a;
var G__15418 = b;
var G__15419 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15416,G__15417,G__15418,G__15419) : f.call(null,G__15416,G__15417,G__15418,G__15419));
})());
}
});
var update_in__7 = (function() { 
var G__15421__delegate = function (m,p__15372,f,a,b,c,args){
var vec__15420 = p__15372;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15420,(0),null);
var ks = cljs.core.nthnext(vec__15420,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15421 = function (m,p__15372,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15422__i = 0, G__15422__a = new Array(arguments.length -  6);
while (G__15422__i < G__15422__a.length) {G__15422__a[G__15422__i] = arguments[G__15422__i + 6]; ++G__15422__i;}
  args = new cljs.core.IndexedSeq(G__15422__a,0);
} 
return G__15421__delegate.call(this,m,p__15372,f,a,b,c,args);};
G__15421.cljs$lang$maxFixedArity = 6;
G__15421.cljs$lang$applyTo = (function (arglist__15423){
var m = cljs.core.first(arglist__15423);
arglist__15423 = cljs.core.next(arglist__15423);
var p__15372 = cljs.core.first(arglist__15423);
arglist__15423 = cljs.core.next(arglist__15423);
var f = cljs.core.first(arglist__15423);
arglist__15423 = cljs.core.next(arglist__15423);
var a = cljs.core.first(arglist__15423);
arglist__15423 = cljs.core.next(arglist__15423);
var b = cljs.core.first(arglist__15423);
arglist__15423 = cljs.core.next(arglist__15423);
var c = cljs.core.first(arglist__15423);
var args = cljs.core.rest(arglist__15423);
return G__15421__delegate(m,p__15372,f,a,b,c,args);
});
G__15421.cljs$core$IFn$_invoke$arity$variadic = G__15421__delegate;
return G__15421;
})()
;
update_in = function(m,p__15372,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__15372,f);
case 4:
return update_in__4.call(this,m,p__15372,f,a);
case 5:
return update_in__5.call(this,m,p__15372,f,a,b);
case 6:
return update_in__6.call(this,m,p__15372,f,a,b,c);
default:
var G__15424 = null;
if (arguments.length > 6) {
var G__15425__i = 0, G__15425__a = new Array(arguments.length -  6);
while (G__15425__i < G__15425__a.length) {G__15425__a[G__15425__i] = arguments[G__15425__i + 6]; ++G__15425__i;}
G__15424 = new cljs.core.IndexedSeq(G__15425__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__15372,f,a,b,c, G__15424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15436 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15436) : f.call(null,G__15436));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15437 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15438 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15437,G__15438) : f.call(null,G__15437,G__15438));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15439 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15440 = x;
var G__15441 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15439,G__15440,G__15441) : f.call(null,G__15439,G__15440,G__15441));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15442 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15443 = x;
var G__15444 = y;
var G__15445 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15442,G__15443,G__15444,G__15445) : f.call(null,G__15442,G__15443,G__15444,G__15445));
})());
});
var update__7 = (function() { 
var G__15446__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15446 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15447__i = 0, G__15447__a = new Array(arguments.length -  6);
while (G__15447__i < G__15447__a.length) {G__15447__a[G__15447__i] = arguments[G__15447__i + 6]; ++G__15447__i;}
  more = new cljs.core.IndexedSeq(G__15447__a,0);
} 
return G__15446__delegate.call(this,m,k,f,x,y,z,more);};
G__15446.cljs$lang$maxFixedArity = 6;
G__15446.cljs$lang$applyTo = (function (arglist__15448){
var m = cljs.core.first(arglist__15448);
arglist__15448 = cljs.core.next(arglist__15448);
var k = cljs.core.first(arglist__15448);
arglist__15448 = cljs.core.next(arglist__15448);
var f = cljs.core.first(arglist__15448);
arglist__15448 = cljs.core.next(arglist__15448);
var x = cljs.core.first(arglist__15448);
arglist__15448 = cljs.core.next(arglist__15448);
var y = cljs.core.first(arglist__15448);
arglist__15448 = cljs.core.next(arglist__15448);
var z = cljs.core.first(arglist__15448);
var more = cljs.core.rest(arglist__15448);
return G__15446__delegate(m,k,f,x,y,z,more);
});
G__15446.cljs$core$IFn$_invoke$arity$variadic = G__15446__delegate;
return G__15446;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15449 = null;
if (arguments.length > 6) {
var G__15450__i = 0, G__15450__a = new Array(arguments.length -  6);
while (G__15450__i < G__15450__a.length) {G__15450__a[G__15450__i] = arguments[G__15450__i + 6]; ++G__15450__i;}
G__15449 = new cljs.core.IndexedSeq(G__15450__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15451 = (ll - (5));
var G__15452 = r;
ll = G__15451;
ret = G__15452;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15457 = cljs.core.pv_aget(node,(0));
var G__15458 = (level - (5));
node = G__15457;
level = G__15458;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15459 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15460 = (level - (5));
node = G__15459;
level = G__15460;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15470 = init__$2;
var G__15471 = (j + i);
var G__15472 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15470,G__15471,G__15472) : f.call(null,G__15470,G__15471,G__15472));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15483 = (j + (1));
var G__15484 = init__$3;
j = G__15483;
init__$2 = G__15484;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15473 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15473) : cljs.core.deref.call(null,G__15473));
} else {
var G__15485 = (i + len);
var G__15486 = init__$2;
i = G__15485;
init__$1 = G__15486;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15474 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15474) : cljs.core.tv_editable_root.call(null,G__15474));
})(),(function (){var G__15475 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15475) : cljs.core.tv_editable_tail.call(null,G__15475));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15476 = init__$2;
var G__15477 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15476,G__15477) : f.call(null,G__15476,G__15477));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15487 = (j + (1));
var G__15488 = init__$3;
j = G__15487;
init__$2 = G__15488;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15478 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15478) : cljs.core.deref.call(null,G__15478));
} else {
var G__15489 = (i + len);
var G__15490 = init__$2;
i = G__15489;
init__$1 = G__15490;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15479 = coll__$1;
var G__15480 = cljs.core.first_array_for_longvec(coll__$1);
var G__15481 = (0);
var G__15482 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15479,G__15480,G__15481,G__15482) : cljs.core.chunked_seq.call(null,G__15479,G__15480,G__15481,G__15482));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4816__auto___15491 = len;
var i_15492 = (0);
while(true){
if((i_15492 < n__4816__auto___15491)){
(new_tail[i_15492] = (self__.tail[i_15492]));

var G__15493 = (i_15492 + (1));
i_15492 = G__15493;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15494 = null;
var G__15494__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15494__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15494 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15494__2.call(this,self__,k);
case 3:
return G__15494__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15494.cljs$core$IFn$_invoke$arity$2 = G__15494__2;
G__15494.cljs$core$IFn$_invoke$arity$3 = G__15494__3;
return G__15494;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15469){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15469)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15495 = (i + (1));
var G__15496 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15495;
out = G__15496;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15497__i = 0, G__15497__a = new Array(arguments.length -  0);
while (G__15497__i < G__15497__a.length) {G__15497__a[G__15497__i] = arguments[G__15497__i + 0]; ++G__15497__i;}
  args = new cljs.core.IndexedSeq(G__15497__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__15498){
var args = cljs.core.seq(arglist__15498);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15499 = self__.vec;
var G__15500 = self__.node;
var G__15501 = self__.i;
var G__15502 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15499,G__15500,G__15501,G__15502) : cljs.core.chunked_seq.call(null,G__15499,G__15500,G__15501,G__15502));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__15503 = self__.vec;
var G__15504 = (self__.i + self__.off);
var G__15505 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15503,G__15504,G__15505) : cljs.core.subvec.call(null,G__15503,G__15504,G__15505));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__15506 = self__.vec;
var G__15507 = (self__.i + self__.off);
var G__15508 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15506,G__15507,G__15508) : cljs.core.subvec.call(null,G__15506,G__15507,G__15508));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15509 = self__.vec;
var G__15510 = self__.node;
var G__15511 = self__.i;
var G__15512 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15509,G__15510,G__15511,G__15512) : cljs.core.chunked_seq.call(null,G__15509,G__15510,G__15511,G__15512));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15513 = self__.vec;
var G__15514 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15515 = end;
var G__15516 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15513,G__15514,G__15515,G__15516) : cljs.core.chunked_seq.call(null,G__15513,G__15514,G__15515,G__15516));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__15517 = self__.vec;
var G__15518 = self__.node;
var G__15519 = self__.i;
var G__15520 = self__.off;
var G__15521 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15517,G__15518,G__15519,G__15520,G__15521) : cljs.core.chunked_seq.call(null,G__15517,G__15518,G__15519,G__15520,G__15521));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15522 = self__.vec;
var G__15523 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15524 = end;
var G__15525 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15522,G__15523,G__15524,G__15525) : cljs.core.chunked_seq.call(null,G__15522,G__15523,G__15524,G__15525));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__15527 = self__.meta;
var G__15528 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__15529 = self__.start;
var G__15530 = (function (){var x__4246__auto__ = self__.end;
var y__4247__auto__ = (v_pos + (1));
return ((x__4246__auto__ > y__4247__auto__) ? x__4246__auto__ : y__4247__auto__);
})();
var G__15531 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15527,G__15528,G__15529,G__15530,G__15531) : cljs.core.build_subvec.call(null,G__15527,G__15528,G__15529,G__15530,G__15531));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__15532 = self__.meta;
var G__15533 = self__.v;
var G__15534 = self__.start;
var G__15535 = (self__.end - (1));
var G__15536 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15532,G__15533,G__15534,G__15535,G__15536) : cljs.core.build_subvec.call(null,G__15532,G__15533,G__15534,G__15535,G__15536));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__15538 = meta__$1;
var G__15539 = self__.v;
var G__15540 = self__.start;
var G__15541 = self__.end;
var G__15542 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15538,G__15539,G__15540,G__15541,G__15542) : cljs.core.build_subvec.call(null,G__15538,G__15539,G__15540,G__15541,G__15542));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15543 = self__.meta;
var G__15544 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15545 = self__.start;
var G__15546 = (self__.end + (1));
var G__15547 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15543,G__15544,G__15545,G__15546,G__15547) : cljs.core.build_subvec.call(null,G__15543,G__15544,G__15545,G__15546,G__15547));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15548 = null;
var G__15548__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15548__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15548 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15548__2.call(this,self__,k);
case 3:
return G__15548__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15548.cljs$core$IFn$_invoke$arity$2 = G__15548__2;
G__15548.cljs$core$IFn$_invoke$arity$3 = G__15548__3;
return G__15548;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args15526){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15526)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15549 = meta;
var G__15550 = v.v;
var G__15551 = (v.start + start);
var G__15552 = (v.start + end);
var G__15553 = __hash;
meta = G__15549;
v = G__15550;
start = G__15551;
end = G__15552;
__hash = G__15553;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15560 = {};
return obj15560;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15568 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15569 = (level - (5));
node = G__15568;
level = G__15569;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__15573 = null;
var G__15573__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15573__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15573 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15573__2.call(this,self__,k);
case 3:
return G__15573__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15573.cljs$core$IFn$_invoke$arity$2 = G__15573__2;
G__15573.cljs$core$IFn$_invoke$arity$3 = G__15573__3;
return G__15573;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15570){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15570)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3929__auto__ = self__.front;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3929__auto__ = self__.rear;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15574 = (i + incr);
i = G__15574;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15575 = (i + (1));
var G__15576 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15575;
out = G__15576;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15580 = {};
return obj15580;
})();
var l = ks.length;
var i_15581 = (0);
while(true){
if((i_15581 < l)){
var k_15582 = (ks[i_15581]);
(new_obj[k_15582] = (obj[k_15582]));

var G__15583 = (i_15581 + (1));
i_15581 = G__15583;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__15587 = k;
return goog.isString(G__15587);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15588 = init__$1;
var G__15589 = k;
var G__15590 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15588,G__15589,G__15590) : f.call(null,G__15588,G__15589,G__15590));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15591 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15591) : cljs.core.deref.call(null,G__15591));
} else {
var G__15597 = cljs.core.rest(keys__$1);
var G__15598 = init__$2;
keys__$1 = G__15597;
init__$1 = G__15598;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__15593 = k;
return goog.isString(G__15593);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15594 = k;
return goog.isString(G__15594);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3917__auto__ = (function (){var G__15596 = k;
return goog.isString(G__15596);
})();
if(cljs.core.truth_(and__3917__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3917__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15584_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15584_SHARP_,(self__.strobj[p1__15584_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15599 = null;
var G__15599__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15599__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15599 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15599__2.call(this,self__,k);
case 3:
return G__15599__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15599.cljs$core$IFn$_invoke$arity$2 = G__15599__2;
G__15599.cljs$core$IFn$_invoke$arity$3 = G__15599__3;
return G__15599;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15585){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15585)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15601 = {};
return obj15601;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15602 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15602,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15602,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15603 = (i + (2));
i = G__15603;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15604 = (i + (2));
i = G__15604;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15605 = (i + (2));
i = G__15605;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15606 = (i + (2));
i = G__15606;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15607 = (i + (2));
i = G__15607;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3929__auto__ = (function (){var G__15611 = k;
return goog.isString(G__15611);
})();
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15612 = (0);
while(true){
if((i_15612 < l)){
(narr[i_15612] = (arr[i_15612]));

var G__15613 = (i_15612 + (1));
i_15612 = G__15613;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15615 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15615) : cljs.core.keys.call(null,G__15615));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15616 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15616) : cljs.core.vals.call(null,G__15616));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15617 = cljs.core.seq(coll);
var chunk__15618 = null;
var count__15619 = (0);
var i__15620 = (0);
while(true){
if((i__15620 < count__15619)){
var vec__15621 = chunk__15618.cljs$core$IIndexed$_nth$arity$2(null,i__15620);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15621,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15621,(1),null);
var G__15622_15635 = v;
var G__15623_15636 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15622_15635,G__15623_15636) : f.call(null,G__15622_15635,G__15623_15636));

var G__15637 = seq__15617;
var G__15638 = chunk__15618;
var G__15639 = count__15619;
var G__15640 = (i__15620 + (1));
seq__15617 = G__15637;
chunk__15618 = G__15638;
count__15619 = G__15639;
i__15620 = G__15640;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15617);
if(temp__4126__auto__){
var seq__15617__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15617__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__15617__$1);
var G__15641 = cljs.core.chunk_rest(seq__15617__$1);
var G__15642 = c__4716__auto__;
var G__15643 = cljs.core.count(c__4716__auto__);
var G__15644 = (0);
seq__15617 = G__15641;
chunk__15618 = G__15642;
count__15619 = G__15643;
i__15620 = G__15644;
continue;
} else {
var vec__15624 = cljs.core.first(seq__15617__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15624,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15624,(1),null);
var G__15625_15645 = v;
var G__15626_15646 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15625_15645,G__15626_15646) : f.call(null,G__15625_15645,G__15626_15646));

var G__15647 = cljs.core.next(seq__15617__$1);
var G__15648 = null;
var G__15649 = (0);
var G__15650 = (0);
seq__15617 = G__15647;
chunk__15618 = G__15648;
count__15619 = G__15649;
i__15620 = G__15650;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15627 = init__$1;
var G__15628 = (self__.arr[i]);
var G__15629 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15627,G__15628,G__15629) : f.call(null,G__15627,G__15628,G__15629));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15630 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15630) : cljs.core.deref.call(null,G__15630));
} else {
var G__15651 = (i + (2));
var G__15652 = init__$2;
i = G__15651;
init__$1 = G__15652;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15631 = other;
if(G__15631){
var bit__4603__auto__ = (G__15631.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4603__auto__) || (G__15631.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15653 = (i + (2));
i = G__15653;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15633 = {};
return obj15633;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15654 = (s + (2));
var G__15655 = d;
s = G__15654;
d = G__15655;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15656 = (s + (2));
var G__15657 = (d + (2));
s = G__15656;
d = G__15657;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15634 = cljs.core.aclone(self__.arr);
(G__15634[(idx + (1))] = v);

return G__15634;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15658 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15659 = cljs.core.next(es);
ret = G__15658;
es = G__15659;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15660 = null;
var G__15660__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15660__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15660 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15660__2.call(this,self__,k);
case 3:
return G__15660__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15660.cljs$core$IFn$_invoke$arity$2 = G__15660__2;
G__15660.cljs$core$IFn$_invoke$arity$3 = G__15660__3;
return G__15660;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15614){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15614)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15661 = (i + (2));
var G__15662 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15661;
ret = G__15662;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15663_15671 = self__.arr;
G__15663_15671.pop();

G__15663_15671.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15664 = self__.len;
var G__15665 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15664,G__15665) : cljs.core.array__GT_transient_hash_map.call(null,G__15664,G__15665));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15666 = o;
if(G__15666){
var bit__4610__auto__ = (G__15666.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4610__auto__) || (G__15666.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15666.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15666);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15666);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15667 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15667) : cljs.core.key.call(null,G__15667));
})(),(function (){var G__15668 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15668) : cljs.core.val.call(null,G__15668));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15672 = cljs.core.next(es);
var G__15673 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15669 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15669) : cljs.core.key.call(null,G__15669));
})(),(function (){var G__15670 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15670) : cljs.core.val.call(null,G__15670));
})());
es = G__15672;
tcoll__$2 = G__15673;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15674 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15675 = (i + (2));
out = G__15674;
i = G__15675;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15678 = cljs.core.aclone(arr);
(G__15678[i] = a);

return G__15678;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15679 = cljs.core.aclone(arr);
(G__15679[i] = a);

(G__15679[j] = b);

return G__15679;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15684 = init__$1;
var G__15685 = k;
var G__15686 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15684,G__15685,G__15686) : f.call(null,G__15684,G__15685,G__15686));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15687 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15687) : cljs.core.deref.call(null,G__15687));
} else {
var G__15688 = (i + (2));
var G__15689 = init__$2;
i = G__15688;
init__$1 = G__15689;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15690 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15690) : cljs.core.create_inode_seq.call(null,G__15690));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15704 = (0);
var j_15705 = (0);
while(true){
if((i_15704 < (32))){
if((((self__.bitmap >>> i_15704) & (1)) === (0))){
var G__15706 = (i_15704 + (1));
var G__15707 = j_15705;
i_15704 = G__15706;
j_15705 = G__15707;
continue;
} else {
(nodes[i_15704] = ((!(((self__.arr[j_15705]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15705])),(self__.arr[j_15705]),(self__.arr[(j_15705 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15705 + (1))])));

var G__15708 = (i_15704 + (1));
var G__15709 = (j_15705 + (2));
i_15704 = G__15708;
j_15705 = G__15709;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15691 = edit__$1;
var G__15692 = (shift + (5));
var G__15693 = key_or_nil;
var G__15694 = val_or_node;
var G__15695 = hash;
var G__15696 = key;
var G__15697 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15691,G__15692,G__15693,G__15694,G__15695,G__15696,G__15697) : cljs.core.create_node.call(null,G__15691,G__15692,G__15693,G__15694,G__15695,G__15696,G__15697));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15710 = (0);
var j_15711 = (0);
while(true){
if((i_15710 < (32))){
if((((self__.bitmap >>> i_15710) & (1)) === (0))){
var G__15712 = (i_15710 + (1));
var G__15713 = j_15711;
i_15710 = G__15712;
j_15711 = G__15713;
continue;
} else {
(nodes[i_15710] = ((!(((self__.arr[j_15711]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15711])),(self__.arr[j_15711]),(self__.arr[(j_15711 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15711 + (1))])));

var G__15714 = (i_15710 + (1));
var G__15715 = (j_15711 + (2));
i_15710 = G__15714;
j_15711 = G__15715;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15698 = (shift + (5));
var G__15699 = key_or_nil;
var G__15700 = val_or_node;
var G__15701 = hash;
var G__15702 = key;
var G__15703 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15698,G__15699,G__15700,G__15701,G__15702,G__15703) : cljs.core.create_node.call(null,G__15698,G__15699,G__15700,G__15701,G__15702,G__15703));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15716 = (i + (1));
var G__15717 = (j + (2));
var G__15718 = (bitmap | ((1) << i));
i = G__15716;
j = G__15717;
bitmap = G__15718;
continue;
} else {
var G__15719 = (i + (1));
var G__15720 = j;
var G__15721 = bitmap;
i = G__15719;
j = G__15720;
bitmap = G__15721;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15722 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15722) : cljs.core.create_array_node_seq.call(null,G__15722));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15723 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15723) : cljs.core.deref.call(null,G__15723));
} else {
var G__15724 = (i + (1));
var G__15725 = init__$2;
i = G__15724;
init__$1 = G__15725;
continue;
}
} else {
var G__15726 = (i + (1));
var G__15727 = init__$1;
i = G__15726;
init__$1 = G__15727;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15728 = (i + (2));
i = G__15728;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15729 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15729) : cljs.core.create_inode_seq.call(null,G__15729));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15730 = self__.nodes;
var G__15731 = (self__.i + (2));
var G__15732 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15730,G__15731,G__15732) : cljs.core.create_inode_seq.call(null,G__15730,G__15731,G__15732));
} else {
var G__15733 = self__.nodes;
var G__15734 = self__.i;
var G__15735 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15733,G__15734,G__15735) : cljs.core.create_inode_seq.call(null,G__15733,G__15734,G__15735));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15739 = (j + (2));
j = G__15739;
continue;
}
} else {
var G__15740 = (j + (2));
j = G__15740;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15741 = null;
var G__15742 = self__.nodes;
var G__15743 = self__.i;
var G__15744 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15741,G__15742,G__15743,G__15744) : cljs.core.create_array_node_seq.call(null,G__15741,G__15742,G__15743,G__15744));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15749 = (j + (1));
j = G__15749;
continue;
}
} else {
var G__15750 = (j + (1));
j = G__15750;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15752 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15752) : cljs.core.keys.call(null,G__15752));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15753 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15753) : cljs.core.vals.call(null,G__15753));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15754 = cljs.core.seq(coll);
var chunk__15755 = null;
var count__15756 = (0);
var i__15757 = (0);
while(true){
if((i__15757 < count__15756)){
var vec__15758 = chunk__15755.cljs$core$IIndexed$_nth$arity$2(null,i__15757);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15758,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15758,(1),null);
var G__15759_15770 = v;
var G__15760_15771 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15759_15770,G__15760_15771) : f.call(null,G__15759_15770,G__15760_15771));

var G__15772 = seq__15754;
var G__15773 = chunk__15755;
var G__15774 = count__15756;
var G__15775 = (i__15757 + (1));
seq__15754 = G__15772;
chunk__15755 = G__15773;
count__15756 = G__15774;
i__15757 = G__15775;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15754);
if(temp__4126__auto__){
var seq__15754__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15754__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__15754__$1);
var G__15776 = cljs.core.chunk_rest(seq__15754__$1);
var G__15777 = c__4716__auto__;
var G__15778 = cljs.core.count(c__4716__auto__);
var G__15779 = (0);
seq__15754 = G__15776;
chunk__15755 = G__15777;
count__15756 = G__15778;
i__15757 = G__15779;
continue;
} else {
var vec__15761 = cljs.core.first(seq__15754__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15761,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15761,(1),null);
var G__15762_15780 = v;
var G__15763_15781 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15762_15780,G__15763_15781) : f.call(null,G__15762_15780,G__15763_15781));

var G__15782 = cljs.core.next(seq__15754__$1);
var G__15783 = null;
var G__15784 = (0);
var G__15785 = (0);
seq__15754 = G__15782;
chunk__15755 = G__15783;
count__15756 = G__15784;
i__15757 = G__15785;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15764 = init;
var G__15765 = null;
var G__15766 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15764,G__15765,G__15766) : f.call(null,G__15764,G__15765,G__15766));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15767 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15767) : cljs.core.deref.call(null,G__15767));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15769 = {};
return obj15769;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15786 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15787 = cljs.core.next(es);
ret = G__15786;
es = G__15787;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15788 = null;
var G__15788__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15788__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15788 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15788__2.call(this,self__,k);
case 3:
return G__15788__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15788.cljs$core$IFn$_invoke$arity$2 = G__15788__2;
G__15788.cljs$core$IFn$_invoke$arity$3 = G__15788__3;
return G__15788;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15751){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15751)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15789 = (i + (2));
var G__15790 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15789;
ret = G__15790;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15791 = (i + (1));
var G__15792 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15791;
out = G__15792;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15793 = o;
if(G__15793){
var bit__4610__auto__ = (G__15793.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4610__auto__) || (G__15793.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15793.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15793);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15793);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15794 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15794) : cljs.core.key.call(null,G__15794));
})(),(function (){var G__15795 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15795) : cljs.core.val.call(null,G__15795));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15798 = cljs.core.next(es);
var G__15799 = tcoll__$1.assoc_BANG_((function (){var G__15796 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15796) : cljs.core.key.call(null,G__15796));
})(),(function (){var G__15797 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15797) : cljs.core.val.call(null,G__15797));
})());
es = G__15798;
tcoll__$1 = G__15799;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15800 = ((ascending_QMARK_)?t.left:t.right);
var G__15801 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15800;
stack__$1 = G__15801;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15814 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15814) : cljs.core.deref.call(null,G__15814));
} else {
var init__$2 = (function (){var G__15815 = init__$1;
var G__15816 = node.key;
var G__15817 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15815,G__15816,G__15817) : f.call(null,G__15815,G__15816,G__15817));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15818 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15818) : cljs.core.deref.call(null,G__15818));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15819 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15819) : cljs.core.deref.call(null,G__15819));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15821 = null;
var G__15821__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15821__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15821 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15821__2.call(this,self__,k);
case 3:
return G__15821__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15821.cljs$core$IFn$_invoke$arity$2 = G__15821__2;
G__15821.cljs$core$IFn$_invoke$arity$3 = G__15821__3;
return G__15821;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15820){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15820)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15823 = null;
var G__15823__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15823__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15823 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15823__2.call(this,self__,k);
case 3:
return G__15823__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15823.cljs$core$IFn$_invoke$arity$2 = G__15823__2;
G__15823.cljs$core$IFn$_invoke$arity$3 = G__15823__3;
return G__15823;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15822){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15822)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15836 = k;
var G__15837 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15836,G__15837) : comp.call(null,G__15836,G__15837));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15856 = k;
var G__15857 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15856,G__15857) : comp.call(null,G__15856,G__15857));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15868 = k;
var G__15869 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15868,G__15869) : comp.call(null,G__15868,G__15869));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15871 = cljs.core.seq(coll);
var chunk__15872 = null;
var count__15873 = (0);
var i__15874 = (0);
while(true){
if((i__15874 < count__15873)){
var vec__15875 = chunk__15872.cljs$core$IIndexed$_nth$arity$2(null,i__15874);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15875,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15875,(1),null);
var G__15876_15888 = v;
var G__15877_15889 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15876_15888,G__15877_15889) : f.call(null,G__15876_15888,G__15877_15889));

var G__15890 = seq__15871;
var G__15891 = chunk__15872;
var G__15892 = count__15873;
var G__15893 = (i__15874 + (1));
seq__15871 = G__15890;
chunk__15872 = G__15891;
count__15873 = G__15892;
i__15874 = G__15893;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15871);
if(temp__4126__auto__){
var seq__15871__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15871__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__15871__$1);
var G__15894 = cljs.core.chunk_rest(seq__15871__$1);
var G__15895 = c__4716__auto__;
var G__15896 = cljs.core.count(c__4716__auto__);
var G__15897 = (0);
seq__15871 = G__15894;
chunk__15872 = G__15895;
count__15873 = G__15896;
i__15874 = G__15897;
continue;
} else {
var vec__15878 = cljs.core.first(seq__15871__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15878,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15878,(1),null);
var G__15879_15898 = v;
var G__15880_15899 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15879_15898,G__15880_15899) : f.call(null,G__15879_15898,G__15880_15899));

var G__15900 = cljs.core.next(seq__15871__$1);
var G__15901 = null;
var G__15902 = (0);
var G__15903 = (0);
seq__15871 = G__15900;
chunk__15872 = G__15901;
count__15873 = G__15902;
i__15874 = G__15903;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15881 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15881) : cljs.core.keys.call(null,G__15881));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15882 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15882) : cljs.core.vals.call(null,G__15882));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15883 = k;
var G__15884 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15883,G__15884) : self__.comp.call(null,G__15883,G__15884));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15904 = t.left;
t = G__15904;
continue;
} else {
var G__15905 = t.right;
t = G__15905;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15906 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15907 = cljs.core.next(es);
ret = G__15906;
es = G__15907;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15908 = null;
var G__15908__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15908__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15908 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15908__2.call(this,self__,k);
case 3:
return G__15908__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15908.cljs$core$IFn$_invoke$arity$2 = G__15908__2;
G__15908.cljs$core$IFn$_invoke$arity$3 = G__15908__3;
return G__15908;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15870){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15870)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15885 = k;
var G__15886 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15885,G__15886) : self__.comp.call(null,G__15885,G__15886));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15909 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15910 = t.left;
stack = G__15909;
t = G__15910;
continue;
} else {
var G__15911 = stack;
var G__15912 = t.right;
stack = G__15911;
t = G__15912;
continue;
}
} else {
if((c > (0))){
var G__15913 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15914 = t.right;
stack = G__15913;
t = G__15914;
continue;
} else {
var G__15915 = stack;
var G__15916 = t.left;
stack = G__15915;
t = G__15916;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15887 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15887) : cljs.core.key.call(null,G__15887));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15917 = cljs.core.nnext(in$);
var G__15918 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15917;
out = G__15918;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15919__i = 0, G__15919__a = new Array(arguments.length -  0);
while (G__15919__i < G__15919__a.length) {G__15919__a[G__15919__i] = arguments[G__15919__i + 0]; ++G__15919__i;}
  keyvals = new cljs.core.IndexedSeq(G__15919__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15920){
var keyvals = cljs.core.seq(arglist__15920);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15921__i = 0, G__15921__a = new Array(arguments.length -  0);
while (G__15921__i < G__15921__a.length) {G__15921__a[G__15921__i] = arguments[G__15921__i + 0]; ++G__15921__i;}
  keyvals = new cljs.core.IndexedSeq(G__15921__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15922){
var keyvals = cljs.core.seq(arglist__15922);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15926 = {};
return obj15926;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15927 = cljs.core.nnext(kvs);
kvs = G__15927;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15928__i = 0, G__15928__a = new Array(arguments.length -  0);
while (G__15928__i < G__15928__a.length) {G__15928__a[G__15928__i] = arguments[G__15928__i + 0]; ++G__15928__i;}
  keyvals = new cljs.core.IndexedSeq(G__15928__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15929){
var keyvals = cljs.core.seq(arglist__15929);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15930 = cljs.core.nnext(in$);
var G__15931 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15930;
out = G__15931;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15932__i = 0, G__15932__a = new Array(arguments.length -  0);
while (G__15932__i < G__15932__a.length) {G__15932__a[G__15932__i] = arguments[G__15932__i + 0]; ++G__15932__i;}
  keyvals = new cljs.core.IndexedSeq(G__15932__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15933){
var keyvals = cljs.core.seq(arglist__15933);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15934 = cljs.core.nnext(in$);
var G__15935 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15934;
out = G__15935;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15936__i = 0, G__15936__a = new Array(arguments.length -  1);
while (G__15936__i < G__15936__a.length) {G__15936__a[G__15936__i] = arguments[G__15936__i + 1]; ++G__15936__i;}
  keyvals = new cljs.core.IndexedSeq(G__15936__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15937){
var comparator = cljs.core.first(arglist__15937);
var keyvals = cljs.core.rest(arglist__15937);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15938 = self__.mseq;
if(G__15938){
var bit__4610__auto__ = (G__15938.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__15938.cljs$core$INext$)){
return true;
} else {
if((!G__15938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15938);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15939 = self__.mseq;
if(G__15939){
var bit__4610__auto__ = (G__15939.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__15939.cljs$core$INext$)){
return true;
} else {
if((!G__15939.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15939);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15939);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15940 = self__.mseq;
if(G__15940){
var bit__4610__auto__ = (G__15940.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__15940.cljs$core$INext$)){
return true;
} else {
if((!G__15940.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15940);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15941 = self__.mseq;
if(G__15941){
var bit__4610__auto__ = (G__15941.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4610__auto__) || (G__15941.cljs$core$INext$)){
return true;
} else {
if((!G__15941.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15941);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15941);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15942_SHARP_,p2__15943_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3929__auto__ = p1__15942_SHARP_;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15943_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15944__i = 0, G__15944__a = new Array(arguments.length -  0);
while (G__15944__i < G__15944__a.length) {G__15944__a[G__15944__i] = arguments[G__15944__i + 0]; ++G__15944__i;}
  maps = new cljs.core.IndexedSeq(G__15944__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15945){
var maps = cljs.core.seq(arglist__15945);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15948 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15949 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15948,G__15949) : f.call(null,G__15948,G__15949));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3929__auto__ = m1;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15950__i = 0, G__15950__a = new Array(arguments.length -  1);
while (G__15950__i < G__15950__a.length) {G__15950__a[G__15950__i] = arguments[G__15950__i + 1]; ++G__15950__i;}
  maps = new cljs.core.IndexedSeq(G__15950__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15951){
var f = cljs.core.first(arglist__15951);
var maps = cljs.core.rest(arglist__15951);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__15952 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15953 = cljs.core.next(keys);
ret = G__15952;
keys = G__15953;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15956 = cljs.core.seq(coll);
var chunk__15957 = null;
var count__15958 = (0);
var i__15959 = (0);
while(true){
if((i__15959 < count__15958)){
var vec__15960 = chunk__15957.cljs$core$IIndexed$_nth$arity$2(null,i__15959);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15960,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15960,(1),null);
var G__15961_15966 = v;
var G__15962_15967 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15961_15966,G__15962_15967) : f.call(null,G__15961_15966,G__15962_15967));

var G__15968 = seq__15956;
var G__15969 = chunk__15957;
var G__15970 = count__15958;
var G__15971 = (i__15959 + (1));
seq__15956 = G__15968;
chunk__15957 = G__15969;
count__15958 = G__15970;
i__15959 = G__15971;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15956);
if(temp__4126__auto__){
var seq__15956__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15956__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__15956__$1);
var G__15972 = cljs.core.chunk_rest(seq__15956__$1);
var G__15973 = c__4716__auto__;
var G__15974 = cljs.core.count(c__4716__auto__);
var G__15975 = (0);
seq__15956 = G__15972;
chunk__15957 = G__15973;
count__15958 = G__15974;
i__15959 = G__15975;
continue;
} else {
var vec__15963 = cljs.core.first(seq__15956__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15963,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15963,(1),null);
var G__15964_15976 = v;
var G__15965_15977 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15964_15976,G__15965_15977) : f.call(null,G__15964_15976,G__15965_15977));

var G__15978 = cljs.core.next(seq__15956__$1);
var G__15979 = null;
var G__15980 = (0);
var G__15981 = (0);
seq__15956 = G__15978;
chunk__15957 = G__15979;
count__15958 = G__15980;
i__15959 = G__15981;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15954_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15954_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15982 = null;
var G__15982__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15982__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15982 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15982__2.call(this,self__,k);
case 3:
return G__15982__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15982.cljs$core$IFn$_invoke$arity$2 = G__15982__2;
G__15982.cljs$core$IFn$_invoke$arity$3 = G__15982__3;
return G__15982;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15955){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15955)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15983 = (i + (1));
var G__15984 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15983;
out = G__15984;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15985 = (i + (1));
var G__15986 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15985;
out = G__15986;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15988 = null;
var G__15988__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15988__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15988 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15988__2.call(this,self__,k);
case 3:
return G__15988__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15988.cljs$core$IFn$_invoke$arity$2 = G__15988__2;
G__15988.cljs$core$IFn$_invoke$arity$3 = G__15988__3;
return G__15988;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15987){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15987)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15991 = cljs.core.seq(coll);
var chunk__15992 = null;
var count__15993 = (0);
var i__15994 = (0);
while(true){
if((i__15994 < count__15993)){
var vec__15995 = chunk__15992.cljs$core$IIndexed$_nth$arity$2(null,i__15994);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15995,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15995,(1),null);
var G__15996_16001 = v;
var G__15997_16002 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15996_16001,G__15997_16002) : f.call(null,G__15996_16001,G__15997_16002));

var G__16003 = seq__15991;
var G__16004 = chunk__15992;
var G__16005 = count__15993;
var G__16006 = (i__15994 + (1));
seq__15991 = G__16003;
chunk__15992 = G__16004;
count__15993 = G__16005;
i__15994 = G__16006;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15991);
if(temp__4126__auto__){
var seq__15991__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15991__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__15991__$1);
var G__16007 = cljs.core.chunk_rest(seq__15991__$1);
var G__16008 = c__4716__auto__;
var G__16009 = cljs.core.count(c__4716__auto__);
var G__16010 = (0);
seq__15991 = G__16007;
chunk__15992 = G__16008;
count__15993 = G__16009;
i__15994 = G__16010;
continue;
} else {
var vec__15998 = cljs.core.first(seq__15991__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15998,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15998,(1),null);
var G__15999_16011 = v;
var G__16000_16012 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15999_16011,G__16000_16012) : f.call(null,G__15999_16011,G__16000_16012));

var G__16013 = cljs.core.next(seq__15991__$1);
var G__16014 = null;
var G__16015 = (0);
var G__16016 = (0);
seq__15991 = G__16013;
chunk__15992 = G__16014;
count__15993 = G__16015;
i__15994 = G__16016;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15989_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15989_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__16017 = null;
var G__16017__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16017__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16017 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16017__2.call(this,self__,k);
case 3:
return G__16017__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16017.cljs$core$IFn$_invoke$arity$2 = G__16017__2;
G__16017.cljs$core$IFn$_invoke$arity$3 = G__16017__3;
return G__16017;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15990){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15990)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4810__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4810__auto__.length)){
var G__16018 = (i + (1));
var G__16019 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__16018;
res = G__16019;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__16020 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__16021 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__16020;
out = G__16021;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__16022__delegate = function (keys){
return cljs.core.set(keys);
};
var G__16022 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16023__i = 0, G__16023__a = new Array(arguments.length -  0);
while (G__16023__i < G__16023__a.length) {G__16023__a[G__16023__i] = arguments[G__16023__i + 0]; ++G__16023__i;}
  keys = new cljs.core.IndexedSeq(G__16023__a,0);
} 
return G__16022__delegate.call(this,keys);};
G__16022.cljs$lang$maxFixedArity = 0;
G__16022.cljs$lang$applyTo = (function (arglist__16024){
var keys = cljs.core.seq(arglist__16024);
return G__16022__delegate(keys);
});
G__16022.cljs$core$IFn$_invoke$arity$variadic = G__16022__delegate;
return G__16022;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__16025 = null;
if (arguments.length > 0) {
var G__16026__i = 0, G__16026__a = new Array(arguments.length -  0);
while (G__16026__i < G__16026__a.length) {G__16026__a[G__16026__i] = arguments[G__16026__i + 0]; ++G__16026__i;}
G__16025 = new cljs.core.IndexedSeq(G__16026__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16025);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16027__i = 0, G__16027__a = new Array(arguments.length -  0);
while (G__16027__i < G__16027__a.length) {G__16027__a[G__16027__i] = arguments[G__16027__i + 0]; ++G__16027__i;}
  keys = new cljs.core.IndexedSeq(G__16027__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__16028){
var keys = cljs.core.seq(arglist__16028);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__16029__i = 0, G__16029__a = new Array(arguments.length -  1);
while (G__16029__i < G__16029__a.length) {G__16029__a[G__16029__i] = arguments[G__16029__i + 1]; ++G__16029__i;}
  keys = new cljs.core.IndexedSeq(G__16029__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__16030){
var comparator = cljs.core.first(arglist__16030);
var keys = cljs.core.rest(arglist__16030);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16031_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16031_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__16031_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16032_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16032_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__16032_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__16053 = null;
var G__16053__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16053__1 = (function (result){
var G__16043 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16043) : rf.call(null,G__16043));
});
var G__16053__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__16044 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16044) : cljs.core.deref.call(null,G__16044));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__16045 = result;
var G__16046 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16045,G__16046) : rf.call(null,G__16045,G__16046));
}
});
G__16053 = function(result,input){
switch(arguments.length){
case 0:
return G__16053__0.call(this);
case 1:
return G__16053__1.call(this,result);
case 2:
return G__16053__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16053.cljs$core$IFn$_invoke$arity$0 = G__16053__0;
G__16053.cljs$core$IFn$_invoke$arity$1 = G__16053__1;
G__16053.cljs$core$IFn$_invoke$arity$2 = G__16053__2;
return G__16053;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__16051,seen__$1){
while(true){
var vec__16052 = p__16051;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16052,(0),null);
var xs__$1 = vec__16052;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__16054 = cljs.core.rest(s);
var G__16055 = seen__$1;
p__16051 = G__16054;
seen__$1 = G__16055;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__16056 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__16057 = cljs.core.next(s__$1);
ret = G__16056;
s__$1 = G__16057;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__16059 = x;
if(G__16059){
var bit__4603__auto__ = (G__16059.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4603__auto__) || (G__16059.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__16060 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__16061 = cljs.core.next(ks);
var G__16062 = cljs.core.next(vs);
map = G__16060;
ks = G__16061;
vs = G__16062;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__16073 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16073) : k.call(null,G__16073));
})() > (function (){var G__16074 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16074) : k.call(null,G__16074));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__16075__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16063_SHARP_,p2__16064_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16063_SHARP_,p2__16064_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16075 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16076__i = 0, G__16076__a = new Array(arguments.length -  3);
while (G__16076__i < G__16076__a.length) {G__16076__a[G__16076__i] = arguments[G__16076__i + 3]; ++G__16076__i;}
  more = new cljs.core.IndexedSeq(G__16076__a,0);
} 
return G__16075__delegate.call(this,k,x,y,more);};
G__16075.cljs$lang$maxFixedArity = 3;
G__16075.cljs$lang$applyTo = (function (arglist__16077){
var k = cljs.core.first(arglist__16077);
arglist__16077 = cljs.core.next(arglist__16077);
var x = cljs.core.first(arglist__16077);
arglist__16077 = cljs.core.next(arglist__16077);
var y = cljs.core.first(arglist__16077);
var more = cljs.core.rest(arglist__16077);
return G__16075__delegate(k,x,y,more);
});
G__16075.cljs$core$IFn$_invoke$arity$variadic = G__16075__delegate;
return G__16075;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__16078 = null;
if (arguments.length > 3) {
var G__16079__i = 0, G__16079__a = new Array(arguments.length -  3);
while (G__16079__i < G__16079__a.length) {G__16079__a[G__16079__i] = arguments[G__16079__i + 3]; ++G__16079__i;}
G__16078 = new cljs.core.IndexedSeq(G__16079__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__16090 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16090) : k.call(null,G__16090));
})() < (function (){var G__16091 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16091) : k.call(null,G__16091));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__16092__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16080_SHARP_,p2__16081_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16080_SHARP_,p2__16081_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16092 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16093__i = 0, G__16093__a = new Array(arguments.length -  3);
while (G__16093__i < G__16093__a.length) {G__16093__a[G__16093__i] = arguments[G__16093__i + 3]; ++G__16093__i;}
  more = new cljs.core.IndexedSeq(G__16093__a,0);
} 
return G__16092__delegate.call(this,k,x,y,more);};
G__16092.cljs$lang$maxFixedArity = 3;
G__16092.cljs$lang$applyTo = (function (arglist__16094){
var k = cljs.core.first(arglist__16094);
arglist__16094 = cljs.core.next(arglist__16094);
var x = cljs.core.first(arglist__16094);
arglist__16094 = cljs.core.next(arglist__16094);
var y = cljs.core.first(arglist__16094);
var more = cljs.core.rest(arglist__16094);
return G__16092__delegate(k,x,y,more);
});
G__16092.cljs$core$IFn$_invoke$arity$variadic = G__16092__delegate;
return G__16092;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__16095 = null;
if (arguments.length > 3) {
var G__16096__i = 0, G__16096__a = new Array(arguments.length -  3);
while (G__16096__i < G__16096__a.length) {G__16096__a[G__16096__i] = arguments[G__16096__i + 3]; ++G__16096__i;}
G__16095 = new cljs.core.IndexedSeq(G__16096__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__16113 = null;
var G__16113__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16113__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16108 = result;
var G__16109 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16108,G__16109) : rf.call(null,G__16108,G__16109));
})());
})());
var G__16110 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16110) : rf.call(null,G__16110));
});
var G__16113__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__16111 = result;
var G__16112 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16111,G__16112) : rf.call(null,G__16111,G__16112));
} else {
return result;
}
});
G__16113 = function(result,input){
switch(arguments.length){
case 0:
return G__16113__0.call(this);
case 1:
return G__16113__1.call(this,result);
case 2:
return G__16113__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16113.cljs$core$IFn$_invoke$arity$0 = G__16113__0;
G__16113.cljs$core$IFn$_invoke$arity$1 = G__16113__1;
G__16113.cljs$core$IFn$_invoke$arity$2 = G__16113__2;
return G__16113;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__16126 = null;
var G__16126__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16126__1 = (function (result){
var G__16121 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16121) : rf.call(null,G__16121));
});
var G__16126__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16122 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16122) : pred.call(null,G__16122));
})())){
var G__16123 = result;
var G__16124 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16123,G__16124) : rf.call(null,G__16123,G__16124));
} else {
return cljs.core.reduced(result);
}
});
G__16126 = function(result,input){
switch(arguments.length){
case 0:
return G__16126__0.call(this);
case 1:
return G__16126__1.call(this,result);
case 2:
return G__16126__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16126.cljs$core$IFn$_invoke$arity$0 = G__16126__0;
G__16126.cljs$core$IFn$_invoke$arity$1 = G__16126__1;
G__16126.cljs$core$IFn$_invoke$arity$2 = G__16126__2;
return G__16126;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__16125 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16125) : pred.call(null,G__16125));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__16131 = (function (){var G__16133 = cljs.core._entry_key(sc,e);
var G__16134 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16133,G__16134) : comp.call(null,G__16133,G__16134));
})();
var G__16132 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16131,G__16132) : test.call(null,G__16131,G__16132));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16138 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16138,(0),null);
var s = vec__16138;
if(cljs.core.truth_((function (){var G__16139 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16139) : include.call(null,G__16139));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16140 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16140,(0),null);
var s = vec__16140;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16144 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16144,(0),null);
var s = vec__16144;
if(cljs.core.truth_((function (){var G__16145 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16145) : include.call(null,G__16145));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16146 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16146,(0),null);
var s = vec__16146;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__16147 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16147) : Math.ceil.call(null,G__16147));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4350__auto__ = self__.__hash;
if(!((h__4350__auto__ == null))){
return h__4350__auto__;
} else {
var h__4350__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4350__auto____$1;

return h__4350__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__16148 = ret;
var G__16149 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16148,G__16149) : f.call(null,G__16148,G__16149));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__16150 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16150) : cljs.core.deref.call(null,G__16150));
} else {
var G__16151 = (i + self__.step);
var G__16152 = ret__$1;
i = G__16151;
ret = G__16152;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__16170 = null;
var G__16170__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16170__1 = (function (result){
var G__16167 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16167) : rf.call(null,G__16167));
});
var G__16170__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__16168 = result;
var G__16169 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16168,G__16169) : rf.call(null,G__16168,G__16169));
} else {
return result;
}
});
G__16170 = function(result,input){
switch(arguments.length){
case 0:
return G__16170__0.call(this);
case 1:
return G__16170__1.call(this,result);
case 2:
return G__16170__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16170.cljs$core$IFn$_invoke$arity$0 = G__16170__0;
G__16170.cljs$core$IFn$_invoke$arity$1 = G__16170__1;
G__16170.cljs$core$IFn$_invoke$arity$2 = G__16170__2;
return G__16170;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__16192 = null;
var G__16192__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16192__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16183 = result;
var G__16184 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16183,G__16184) : rf.call(null,G__16183,G__16184));
})());
})());
var G__16185 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16185) : rf.call(null,G__16185));
});
var G__16192__2 = (function (result,input){
var pval = (function (){var G__16186 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16186) : cljs.core.deref.call(null,G__16186));
})();
var val = (function (){var G__16187 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16187) : f.call(null,G__16187));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__16188 = result;
var G__16189 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16188,G__16189) : rf.call(null,G__16188,G__16189));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__16192 = function(result,input){
switch(arguments.length){
case 0:
return G__16192__0.call(this);
case 1:
return G__16192__1.call(this,result);
case 2:
return G__16192__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16192.cljs$core$IFn$_invoke$arity$0 = G__16192__0;
G__16192.cljs$core$IFn$_invoke$arity$1 = G__16192__1;
G__16192.cljs$core$IFn$_invoke$arity$2 = G__16192__2;
return G__16192;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__16190 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16190) : f.call(null,G__16190));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__16171_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__16191 = p1__16171_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16191) : f.call(null,G__16191));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16201 = init;
var G__16202 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16201,G__16202) : f.call(null,G__16201,G__16202));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__16297 = null;
var G__16297__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__16297__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16255 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16255) : f.call(null,G__16255));
})()],null));
});
var G__16297__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16256 = x;
var G__16257 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16256,G__16257) : f.call(null,G__16256,G__16257));
})()],null));
});
var G__16297__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16258 = x;
var G__16259 = y;
var G__16260 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16258,G__16259,G__16260) : f.call(null,G__16258,G__16259,G__16260));
})()],null));
});
var G__16297__4 = (function() { 
var G__16298__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__16298 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16299__i = 0, G__16299__a = new Array(arguments.length -  3);
while (G__16299__i < G__16299__a.length) {G__16299__a[G__16299__i] = arguments[G__16299__i + 3]; ++G__16299__i;}
  args = new cljs.core.IndexedSeq(G__16299__a,0);
} 
return G__16298__delegate.call(this,x,y,z,args);};
G__16298.cljs$lang$maxFixedArity = 3;
G__16298.cljs$lang$applyTo = (function (arglist__16300){
var x = cljs.core.first(arglist__16300);
arglist__16300 = cljs.core.next(arglist__16300);
var y = cljs.core.first(arglist__16300);
arglist__16300 = cljs.core.next(arglist__16300);
var z = cljs.core.first(arglist__16300);
var args = cljs.core.rest(arglist__16300);
return G__16298__delegate(x,y,z,args);
});
G__16298.cljs$core$IFn$_invoke$arity$variadic = G__16298__delegate;
return G__16298;
})()
;
G__16297 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16297__0.call(this);
case 1:
return G__16297__1.call(this,x);
case 2:
return G__16297__2.call(this,x,y);
case 3:
return G__16297__3.call(this,x,y,z);
default:
var G__16301 = null;
if (arguments.length > 3) {
var G__16302__i = 0, G__16302__a = new Array(arguments.length -  3);
while (G__16302__i < G__16302__a.length) {G__16302__a[G__16302__i] = arguments[G__16302__i + 3]; ++G__16302__i;}
G__16301 = new cljs.core.IndexedSeq(G__16302__a,0);
}
return G__16297__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16297.cljs$lang$maxFixedArity = 3;
G__16297.cljs$lang$applyTo = G__16297__4.cljs$lang$applyTo;
G__16297.cljs$core$IFn$_invoke$arity$0 = G__16297__0;
G__16297.cljs$core$IFn$_invoke$arity$1 = G__16297__1;
G__16297.cljs$core$IFn$_invoke$arity$2 = G__16297__2;
G__16297.cljs$core$IFn$_invoke$arity$3 = G__16297__3;
G__16297.cljs$core$IFn$_invoke$arity$variadic = G__16297__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16297;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__16303 = null;
var G__16303__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__16303__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16261 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16261) : f.call(null,G__16261));
})(),(function (){var G__16262 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16262) : g.call(null,G__16262));
})()],null));
});
var G__16303__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16263 = x;
var G__16264 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16263,G__16264) : f.call(null,G__16263,G__16264));
})(),(function (){var G__16265 = x;
var G__16266 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16265,G__16266) : g.call(null,G__16265,G__16266));
})()],null));
});
var G__16303__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16267 = x;
var G__16268 = y;
var G__16269 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16267,G__16268,G__16269) : f.call(null,G__16267,G__16268,G__16269));
})(),(function (){var G__16270 = x;
var G__16271 = y;
var G__16272 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16270,G__16271,G__16272) : g.call(null,G__16270,G__16271,G__16272));
})()],null));
});
var G__16303__4 = (function() { 
var G__16304__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__16304 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16305__i = 0, G__16305__a = new Array(arguments.length -  3);
while (G__16305__i < G__16305__a.length) {G__16305__a[G__16305__i] = arguments[G__16305__i + 3]; ++G__16305__i;}
  args = new cljs.core.IndexedSeq(G__16305__a,0);
} 
return G__16304__delegate.call(this,x,y,z,args);};
G__16304.cljs$lang$maxFixedArity = 3;
G__16304.cljs$lang$applyTo = (function (arglist__16306){
var x = cljs.core.first(arglist__16306);
arglist__16306 = cljs.core.next(arglist__16306);
var y = cljs.core.first(arglist__16306);
arglist__16306 = cljs.core.next(arglist__16306);
var z = cljs.core.first(arglist__16306);
var args = cljs.core.rest(arglist__16306);
return G__16304__delegate(x,y,z,args);
});
G__16304.cljs$core$IFn$_invoke$arity$variadic = G__16304__delegate;
return G__16304;
})()
;
G__16303 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16303__0.call(this);
case 1:
return G__16303__1.call(this,x);
case 2:
return G__16303__2.call(this,x,y);
case 3:
return G__16303__3.call(this,x,y,z);
default:
var G__16307 = null;
if (arguments.length > 3) {
var G__16308__i = 0, G__16308__a = new Array(arguments.length -  3);
while (G__16308__i < G__16308__a.length) {G__16308__a[G__16308__i] = arguments[G__16308__i + 3]; ++G__16308__i;}
G__16307 = new cljs.core.IndexedSeq(G__16308__a,0);
}
return G__16303__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16303.cljs$lang$maxFixedArity = 3;
G__16303.cljs$lang$applyTo = G__16303__4.cljs$lang$applyTo;
G__16303.cljs$core$IFn$_invoke$arity$0 = G__16303__0;
G__16303.cljs$core$IFn$_invoke$arity$1 = G__16303__1;
G__16303.cljs$core$IFn$_invoke$arity$2 = G__16303__2;
G__16303.cljs$core$IFn$_invoke$arity$3 = G__16303__3;
G__16303.cljs$core$IFn$_invoke$arity$variadic = G__16303__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16303;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__16309 = null;
var G__16309__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__16309__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16273 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16273) : f.call(null,G__16273));
})(),(function (){var G__16274 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16274) : g.call(null,G__16274));
})(),(function (){var G__16275 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16275) : h.call(null,G__16275));
})()],null));
});
var G__16309__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16276 = x;
var G__16277 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16276,G__16277) : f.call(null,G__16276,G__16277));
})(),(function (){var G__16278 = x;
var G__16279 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16278,G__16279) : g.call(null,G__16278,G__16279));
})(),(function (){var G__16280 = x;
var G__16281 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16280,G__16281) : h.call(null,G__16280,G__16281));
})()],null));
});
var G__16309__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16282 = x;
var G__16283 = y;
var G__16284 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16282,G__16283,G__16284) : f.call(null,G__16282,G__16283,G__16284));
})(),(function (){var G__16285 = x;
var G__16286 = y;
var G__16287 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16285,G__16286,G__16287) : g.call(null,G__16285,G__16286,G__16287));
})(),(function (){var G__16288 = x;
var G__16289 = y;
var G__16290 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16288,G__16289,G__16290) : h.call(null,G__16288,G__16289,G__16290));
})()],null));
});
var G__16309__4 = (function() { 
var G__16310__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__16310 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16311__i = 0, G__16311__a = new Array(arguments.length -  3);
while (G__16311__i < G__16311__a.length) {G__16311__a[G__16311__i] = arguments[G__16311__i + 3]; ++G__16311__i;}
  args = new cljs.core.IndexedSeq(G__16311__a,0);
} 
return G__16310__delegate.call(this,x,y,z,args);};
G__16310.cljs$lang$maxFixedArity = 3;
G__16310.cljs$lang$applyTo = (function (arglist__16312){
var x = cljs.core.first(arglist__16312);
arglist__16312 = cljs.core.next(arglist__16312);
var y = cljs.core.first(arglist__16312);
arglist__16312 = cljs.core.next(arglist__16312);
var z = cljs.core.first(arglist__16312);
var args = cljs.core.rest(arglist__16312);
return G__16310__delegate(x,y,z,args);
});
G__16310.cljs$core$IFn$_invoke$arity$variadic = G__16310__delegate;
return G__16310;
})()
;
G__16309 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16309__0.call(this);
case 1:
return G__16309__1.call(this,x);
case 2:
return G__16309__2.call(this,x,y);
case 3:
return G__16309__3.call(this,x,y,z);
default:
var G__16313 = null;
if (arguments.length > 3) {
var G__16314__i = 0, G__16314__a = new Array(arguments.length -  3);
while (G__16314__i < G__16314__a.length) {G__16314__a[G__16314__i] = arguments[G__16314__i + 3]; ++G__16314__i;}
G__16313 = new cljs.core.IndexedSeq(G__16314__a,0);
}
return G__16309__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16309.cljs$lang$maxFixedArity = 3;
G__16309.cljs$lang$applyTo = G__16309__4.cljs$lang$applyTo;
G__16309.cljs$core$IFn$_invoke$arity$0 = G__16309__0;
G__16309.cljs$core$IFn$_invoke$arity$1 = G__16309__1;
G__16309.cljs$core$IFn$_invoke$arity$2 = G__16309__2;
G__16309.cljs$core$IFn$_invoke$arity$3 = G__16309__3;
G__16309.cljs$core$IFn$_invoke$arity$variadic = G__16309__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16309;
})()
});
var juxt__4 = (function() { 
var G__16315__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__16316 = null;
var G__16316__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16203_SHARP_,p2__16204_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16203_SHARP_,(function (){return (p2__16204_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16204_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16204_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16316__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16205_SHARP_,p2__16206_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16205_SHARP_,(function (){var G__16291 = x;
return (p2__16206_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16206_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16291) : p2__16206_SHARP_.call(null,G__16291));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16316__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16207_SHARP_,p2__16208_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16207_SHARP_,(function (){var G__16292 = x;
var G__16293 = y;
return (p2__16208_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16208_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16292,G__16293) : p2__16208_SHARP_.call(null,G__16292,G__16293));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16316__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16209_SHARP_,p2__16210_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16209_SHARP_,(function (){var G__16294 = x;
var G__16295 = y;
var G__16296 = z;
return (p2__16210_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16210_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16294,G__16295,G__16296) : p2__16210_SHARP_.call(null,G__16294,G__16295,G__16296));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16316__4 = (function() { 
var G__16317__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16211_SHARP_,p2__16212_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16211_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16212_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__16317 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16318__i = 0, G__16318__a = new Array(arguments.length -  3);
while (G__16318__i < G__16318__a.length) {G__16318__a[G__16318__i] = arguments[G__16318__i + 3]; ++G__16318__i;}
  args = new cljs.core.IndexedSeq(G__16318__a,0);
} 
return G__16317__delegate.call(this,x,y,z,args);};
G__16317.cljs$lang$maxFixedArity = 3;
G__16317.cljs$lang$applyTo = (function (arglist__16319){
var x = cljs.core.first(arglist__16319);
arglist__16319 = cljs.core.next(arglist__16319);
var y = cljs.core.first(arglist__16319);
arglist__16319 = cljs.core.next(arglist__16319);
var z = cljs.core.first(arglist__16319);
var args = cljs.core.rest(arglist__16319);
return G__16317__delegate(x,y,z,args);
});
G__16317.cljs$core$IFn$_invoke$arity$variadic = G__16317__delegate;
return G__16317;
})()
;
G__16316 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16316__0.call(this);
case 1:
return G__16316__1.call(this,x);
case 2:
return G__16316__2.call(this,x,y);
case 3:
return G__16316__3.call(this,x,y,z);
default:
var G__16320 = null;
if (arguments.length > 3) {
var G__16321__i = 0, G__16321__a = new Array(arguments.length -  3);
while (G__16321__i < G__16321__a.length) {G__16321__a[G__16321__i] = arguments[G__16321__i + 3]; ++G__16321__i;}
G__16320 = new cljs.core.IndexedSeq(G__16321__a,0);
}
return G__16316__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16316.cljs$lang$maxFixedArity = 3;
G__16316.cljs$lang$applyTo = G__16316__4.cljs$lang$applyTo;
G__16316.cljs$core$IFn$_invoke$arity$0 = G__16316__0;
G__16316.cljs$core$IFn$_invoke$arity$1 = G__16316__1;
G__16316.cljs$core$IFn$_invoke$arity$2 = G__16316__2;
G__16316.cljs$core$IFn$_invoke$arity$3 = G__16316__3;
G__16316.cljs$core$IFn$_invoke$arity$variadic = G__16316__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16316;
})()
;})(fs__$1))
};
var G__16315 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16322__i = 0, G__16322__a = new Array(arguments.length -  3);
while (G__16322__i < G__16322__a.length) {G__16322__a[G__16322__i] = arguments[G__16322__i + 3]; ++G__16322__i;}
  fs = new cljs.core.IndexedSeq(G__16322__a,0);
} 
return G__16315__delegate.call(this,f,g,h,fs);};
G__16315.cljs$lang$maxFixedArity = 3;
G__16315.cljs$lang$applyTo = (function (arglist__16323){
var f = cljs.core.first(arglist__16323);
arglist__16323 = cljs.core.next(arglist__16323);
var g = cljs.core.first(arglist__16323);
arglist__16323 = cljs.core.next(arglist__16323);
var h = cljs.core.first(arglist__16323);
var fs = cljs.core.rest(arglist__16323);
return G__16315__delegate(f,g,h,fs);
});
G__16315.cljs$core$IFn$_invoke$arity$variadic = G__16315__delegate;
return G__16315;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__16324 = null;
if (arguments.length > 3) {
var G__16325__i = 0, G__16325__a = new Array(arguments.length -  3);
while (G__16325__i < G__16325__a.length) {G__16325__a[G__16325__i] = arguments[G__16325__i + 3]; ++G__16325__i;}
G__16324 = new cljs.core.IndexedSeq(G__16325__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__16324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__16326 = cljs.core.next(coll);
coll = G__16326;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__16327 = (n - (1));
var G__16328 = cljs.core.next(coll);
n = G__16327;
coll = G__16328;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__16332 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16332,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16332,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16332,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_16340 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__16341_16347 = cljs.core.first(coll);
var G__16342_16348 = writer;
var G__16343_16349 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16341_16347,G__16342_16348,G__16343_16349) : print_one.call(null,G__16341_16347,G__16342_16348,G__16343_16349));
} else {
}

var coll_16350__$1 = cljs.core.next(coll);
var n_16351 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_16350__$1) && (((n_16351 == null)) || (!((n_16351 === (0)))))){
cljs.core._write(writer,sep);

var G__16344_16352 = cljs.core.first(coll_16350__$1);
var G__16345_16353 = writer;
var G__16346_16354 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16344_16352,G__16345_16353,G__16346_16354) : print_one.call(null,G__16344_16352,G__16345_16353,G__16346_16354));

var G__16355 = cljs.core.next(coll_16350__$1);
var G__16356 = (n_16351 - (1));
coll_16350__$1 = G__16355;
n_16351 = G__16356;
continue;
} else {
if((cljs.core.seq(coll_16350__$1)) && ((n_16351 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16340;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__16361 = cljs.core.seq(ss);
var chunk__16362 = null;
var count__16363 = (0);
var i__16364 = (0);
while(true){
if((i__16364 < count__16363)){
var s = chunk__16362.cljs$core$IIndexed$_nth$arity$2(null,i__16364);
cljs.core._write(writer,s);

var G__16365 = seq__16361;
var G__16366 = chunk__16362;
var G__16367 = count__16363;
var G__16368 = (i__16364 + (1));
seq__16361 = G__16365;
chunk__16362 = G__16366;
count__16363 = G__16367;
i__16364 = G__16368;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16361);
if(temp__4126__auto__){
var seq__16361__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16361__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__16361__$1);
var G__16369 = cljs.core.chunk_rest(seq__16361__$1);
var G__16370 = c__4716__auto__;
var G__16371 = cljs.core.count(c__4716__auto__);
var G__16372 = (0);
seq__16361 = G__16369;
chunk__16362 = G__16370;
count__16363 = G__16371;
i__16364 = G__16372;
continue;
} else {
var s = cljs.core.first(seq__16361__$1);
cljs.core._write(writer,s);

var G__16373 = cljs.core.next(seq__16361__$1);
var G__16374 = null;
var G__16375 = (0);
var G__16376 = (0);
seq__16361 = G__16373;
chunk__16362 = G__16374;
count__16363 = G__16375;
i__16364 = G__16376;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__16377__i = 0, G__16377__a = new Array(arguments.length -  1);
while (G__16377__i < G__16377__a.length) {G__16377__a[G__16377__i] = arguments[G__16377__i + 1]; ++G__16377__i;}
  ss = new cljs.core.IndexedSeq(G__16377__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__16378){
var writer = cljs.core.first(arglist__16378);
var ss = cljs.core.rest(arglist__16378);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj16380 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj16380;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__16383 = "[\\\\\"\b\f\n\r\t]";
var G__16384 = "g";
return RegExp(G__16383,G__16384);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3917__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3917__auto__)){
var and__3917__auto____$1 = (function (){var G__16398 = obj;
if(G__16398){
var bit__4610__auto__ = (G__16398.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4610__auto__) || (G__16398.cljs$core$IMeta$)){
return true;
} else {
if((!G__16398.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16398);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16398);
}
})();
if(and__3917__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__16399 = obj;
if(G__16399){
var bit__4603__auto__ = (G__16399.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4603__auto__) || (G__16399.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16400 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16401 = pr_writer;
var G__16402 = writer;
var G__16403 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16400,G__16401,G__16402,G__16403) : cljs.core.print_map.call(null,G__16400,G__16401,G__16402,G__16403));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16404 = obj;
return goog.isString(G__16404);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16406 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16406;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16405 = obj;
if(G__16405){
var bit__4610__auto__ = (G__16405.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4610__auto__) || (G__16405.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16405.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16405);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16405);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16411 = cljs.core.seq(cljs.core.next(objs));
var chunk__16412 = null;
var count__16413 = (0);
var i__16414 = (0);
while(true){
if((i__16414 < count__16413)){
var obj = chunk__16412.cljs$core$IIndexed$_nth$arity$2(null,i__16414);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16415 = seq__16411;
var G__16416 = chunk__16412;
var G__16417 = count__16413;
var G__16418 = (i__16414 + (1));
seq__16411 = G__16415;
chunk__16412 = G__16416;
count__16413 = G__16417;
i__16414 = G__16418;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16411);
if(temp__4126__auto__){
var seq__16411__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16411__$1)){
var c__4716__auto__ = cljs.core.chunk_first(seq__16411__$1);
var G__16419 = cljs.core.chunk_rest(seq__16411__$1);
var G__16420 = c__4716__auto__;
var G__16421 = cljs.core.count(c__4716__auto__);
var G__16422 = (0);
seq__16411 = G__16419;
chunk__16412 = G__16420;
count__16413 = G__16421;
i__16414 = G__16422;
continue;
} else {
var obj = cljs.core.first(seq__16411__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16423 = cljs.core.next(seq__16411__$1);
var G__16424 = null;
var G__16425 = (0);
var G__16426 = (0);
seq__16411 = G__16423;
chunk__16412 = G__16424;
count__16413 = G__16425;
i__16414 = G__16426;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16427__i = 0, G__16427__a = new Array(arguments.length -  0);
while (G__16427__i < G__16427__a.length) {G__16427__a[G__16427__i] = arguments[G__16427__i + 0]; ++G__16427__i;}
  objs = new cljs.core.IndexedSeq(G__16427__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16428){
var objs = cljs.core.seq(arglist__16428);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16429__i = 0, G__16429__a = new Array(arguments.length -  0);
while (G__16429__i < G__16429__a.length) {G__16429__a[G__16429__i] = arguments[G__16429__i + 0]; ++G__16429__i;}
  objs = new cljs.core.IndexedSeq(G__16429__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16430){
var objs = cljs.core.seq(arglist__16430);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16431__i = 0, G__16431__a = new Array(arguments.length -  0);
while (G__16431__i < G__16431__a.length) {G__16431__a[G__16431__i] = arguments[G__16431__i + 0]; ++G__16431__i;}
  objs = new cljs.core.IndexedSeq(G__16431__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16432){
var objs = cljs.core.seq(arglist__16432);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16433__i = 0, G__16433__a = new Array(arguments.length -  0);
while (G__16433__i < G__16433__a.length) {G__16433__a[G__16433__i] = arguments[G__16433__i + 0]; ++G__16433__i;}
  objs = new cljs.core.IndexedSeq(G__16433__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16434){
var objs = cljs.core.seq(arglist__16434);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16435__i = 0, G__16435__a = new Array(arguments.length -  0);
while (G__16435__i < G__16435__a.length) {G__16435__a[G__16435__i] = arguments[G__16435__i + 0]; ++G__16435__i;}
  objs = new cljs.core.IndexedSeq(G__16435__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16436){
var objs = cljs.core.seq(arglist__16436);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16437__i = 0, G__16437__a = new Array(arguments.length -  0);
while (G__16437__i < G__16437__a.length) {G__16437__a[G__16437__i] = arguments[G__16437__i + 0]; ++G__16437__i;}
  objs = new cljs.core.IndexedSeq(G__16437__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16438){
var objs = cljs.core.seq(arglist__16438);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16439__i = 0, G__16439__a = new Array(arguments.length -  0);
while (G__16439__i < G__16439__a.length) {G__16439__a[G__16439__i] = arguments[G__16439__i + 0]; ++G__16439__i;}
  objs = new cljs.core.IndexedSeq(G__16439__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16440){
var objs = cljs.core.seq(arglist__16440);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16441__i = 0, G__16441__a = new Array(arguments.length -  0);
while (G__16441__i < G__16441__a.length) {G__16441__a[G__16441__i] = arguments[G__16441__i + 0]; ++G__16441__i;}
  objs = new cljs.core.IndexedSeq(G__16441__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16442){
var objs = cljs.core.seq(arglist__16442);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16449_16455 = cljs.core.key(e);
var G__16450_16456 = w;
var G__16451_16457 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16449_16455,G__16450_16456,G__16451_16457) : print_one.call(null,G__16449_16455,G__16450_16456,G__16451_16457));

cljs.core._write(w," ");

var G__16452 = cljs.core.val(e);
var G__16453 = w;
var G__16454 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16452,G__16453,G__16454) : print_one.call(null,G__16452,G__16453,G__16454));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16458__i = 0, G__16458__a = new Array(arguments.length -  2);
while (G__16458__i < G__16458__a.length) {G__16458__a[G__16458__i] = arguments[G__16458__i + 2]; ++G__16458__i;}
  args = new cljs.core.IndexedSeq(G__16458__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16459){
var iref = cljs.core.first(arglist__16459);
arglist__16459 = cljs.core.next(arglist__16459);
var f = cljs.core.first(arglist__16459);
var args = cljs.core.rest(arglist__16459);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16462 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16462) : cljs.core.atom.call(null,G__16462));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16464 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16464) : cljs.core.deref.call(null,G__16464));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16465_SHARP_,p2__16466_SHARP_){
var ret = (function (){var G__16469 = p1__16465_SHARP_;
var G__16470 = p2__16466_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16469,G__16470) : rf.call(null,G__16469,G__16470));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16473 = null;
var G__16473__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16473__1 = (function (result){
var G__16472 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16472) : rf.call(null,G__16472));
});
var G__16473__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16473 = function(result,input){
switch(arguments.length){
case 0:
return G__16473__0.call(this);
case 1:
return G__16473__1.call(this,result);
case 2:
return G__16473__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16473.cljs$core$IFn$_invoke$arity$0 = G__16473__0;
G__16473.cljs$core$IFn$_invoke$arity$1 = G__16473__1;
G__16473.cljs$core$IFn$_invoke$arity$2 = G__16473__2;
return G__16473;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__16482 = null;
var G__16482__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16482__1 = (function (result){
var G__16478 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16478) : rf.call(null,G__16478));
});
var G__16482__2 = (function (result,input){
var prior = (function (){var G__16479 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16479) : cljs.core.deref.call(null,G__16479));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16480 = result;
var G__16481 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16480,G__16481) : rf.call(null,G__16480,G__16481));
}
});
G__16482 = function(result,input){
switch(arguments.length){
case 0:
return G__16482__0.call(this);
case 1:
return G__16482__1.call(this,result);
case 2:
return G__16482__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16482.cljs$core$IFn$_invoke$arity$0 = G__16482__0;
G__16482.cljs$core$IFn$_invoke$arity$1 = G__16482__1;
G__16482.cljs$core$IFn$_invoke$arity$2 = G__16482__2;
return G__16482;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4907__auto__ = this;
return cljs.core.es6_iterator(this__4907__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16484_SHARP_,p2__16483_SHARP_){
var G__16486 = p2__16483_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16486) : proc.call(null,G__16486));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj16488 = {};
return obj16488;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._clj__GT_js[(function (){var G__16492 = x__4573__auto__;
return goog.typeOf(G__16492);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._key__GT_js[(function (){var G__16496 = x__4573__auto__;
return goog.typeOf(G__16496);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__16499 = k;
if(G__16499){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__16499.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16499.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16499);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__16500 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16500) : cljs.core.clj__GT_js.call(null,G__16500));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__16516 = x;
if(G__16516){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__16516.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16516.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16516);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16516);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj16518 = {};
return obj16518;
})();
var seq__16519_16529 = cljs.core.seq(x);
var chunk__16520_16530 = null;
var count__16521_16531 = (0);
var i__16522_16532 = (0);
while(true){
if((i__16522_16532 < count__16521_16531)){
var vec__16523_16533 = chunk__16520_16530.cljs$core$IIndexed$_nth$arity$2(null,i__16522_16532);
var k_16534 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16523_16533,(0),null);
var v_16535 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16523_16533,(1),null);
(m[cljs.core.key__GT_js(k_16534)] = clj__GT_js(v_16535));

var G__16536 = seq__16519_16529;
var G__16537 = chunk__16520_16530;
var G__16538 = count__16521_16531;
var G__16539 = (i__16522_16532 + (1));
seq__16519_16529 = G__16536;
chunk__16520_16530 = G__16537;
count__16521_16531 = G__16538;
i__16522_16532 = G__16539;
continue;
} else {
var temp__4126__auto___16540 = cljs.core.seq(seq__16519_16529);
if(temp__4126__auto___16540){
var seq__16519_16541__$1 = temp__4126__auto___16540;
if(cljs.core.chunked_seq_QMARK_(seq__16519_16541__$1)){
var c__4716__auto___16542 = cljs.core.chunk_first(seq__16519_16541__$1);
var G__16543 = cljs.core.chunk_rest(seq__16519_16541__$1);
var G__16544 = c__4716__auto___16542;
var G__16545 = cljs.core.count(c__4716__auto___16542);
var G__16546 = (0);
seq__16519_16529 = G__16543;
chunk__16520_16530 = G__16544;
count__16521_16531 = G__16545;
i__16522_16532 = G__16546;
continue;
} else {
var vec__16524_16547 = cljs.core.first(seq__16519_16541__$1);
var k_16548 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16524_16547,(0),null);
var v_16549 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16524_16547,(1),null);
(m[cljs.core.key__GT_js(k_16548)] = clj__GT_js(v_16549));

var G__16550 = cljs.core.next(seq__16519_16541__$1);
var G__16551 = null;
var G__16552 = (0);
var G__16553 = (0);
seq__16519_16529 = G__16550;
chunk__16520_16530 = G__16551;
count__16521_16531 = G__16552;
i__16522_16532 = G__16553;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__16525_16554 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__16526_16555 = null;
var count__16527_16556 = (0);
var i__16528_16557 = (0);
while(true){
if((i__16528_16557 < count__16527_16556)){
var x_16558__$1 = chunk__16526_16555.cljs$core$IIndexed$_nth$arity$2(null,i__16528_16557);
arr.push(x_16558__$1);

var G__16559 = seq__16525_16554;
var G__16560 = chunk__16526_16555;
var G__16561 = count__16527_16556;
var G__16562 = (i__16528_16557 + (1));
seq__16525_16554 = G__16559;
chunk__16526_16555 = G__16560;
count__16527_16556 = G__16561;
i__16528_16557 = G__16562;
continue;
} else {
var temp__4126__auto___16563 = cljs.core.seq(seq__16525_16554);
if(temp__4126__auto___16563){
var seq__16525_16564__$1 = temp__4126__auto___16563;
if(cljs.core.chunked_seq_QMARK_(seq__16525_16564__$1)){
var c__4716__auto___16565 = cljs.core.chunk_first(seq__16525_16564__$1);
var G__16566 = cljs.core.chunk_rest(seq__16525_16564__$1);
var G__16567 = c__4716__auto___16565;
var G__16568 = cljs.core.count(c__4716__auto___16565);
var G__16569 = (0);
seq__16525_16554 = G__16566;
chunk__16526_16555 = G__16567;
count__16527_16556 = G__16568;
i__16528_16557 = G__16569;
continue;
} else {
var x_16570__$1 = cljs.core.first(seq__16525_16564__$1);
arr.push(x_16570__$1);

var G__16571 = cljs.core.next(seq__16525_16564__$1);
var G__16572 = null;
var G__16573 = (0);
var G__16574 = (0);
seq__16525_16554 = G__16571;
chunk__16526_16555 = G__16572;
count__16527_16556 = G__16573;
i__16528_16557 = G__16574;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16576 = {};
return obj16576;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3917__auto__ = x;
if(and__3917__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3917__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4573__auto__ = (((x == null))?null:x);
return (function (){var or__3929__auto__ = (cljs.core._js__GT_clj[(function (){var G__16580 = x__4573__auto__;
return goog.typeOf(G__16580);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16637__delegate = function (x,opts){
var map__16610 = opts;
var map__16610__$1 = ((cljs.core.seq_QMARK_(map__16610))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16610):map__16610);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16610__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16610,map__16610__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16626 = x__$1;
if(G__16626){
var bit__4610__auto__ = null;
if(cljs.core.truth_((function (){var or__3929__auto__ = bit__4610__auto__;
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return G__16626.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16626.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16626);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4685__auto__ = ((function (map__16610,map__16610__$1,keywordize_keys,keyfn){
return (function iter__16627(s__16628){
return (new cljs.core.LazySeq(null,((function (map__16610,map__16610__$1,keywordize_keys,keyfn){
return (function (){
var s__16628__$1 = s__16628;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__16628__$1);
if(temp__4126__auto__){
var s__16628__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16628__$2)){
var c__4683__auto__ = cljs.core.chunk_first(s__16628__$2);
var size__4684__auto__ = cljs.core.count(c__4683__auto__);
var b__16630 = cljs.core.chunk_buffer(size__4684__auto__);
if((function (){var i__16629 = (0);
while(true){
if((i__16629 < size__4684__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4683__auto__,i__16629);
cljs.core.chunk_append(b__16630,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16635 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16635) : keyfn.call(null,G__16635));
})(),thisfn((x__$1[k]))], null));

var G__16638 = (i__16629 + (1));
i__16629 = G__16638;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16630),iter__16627(cljs.core.chunk_rest(s__16628__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16630),null);
}
} else {
var k = cljs.core.first(s__16628__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16636 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16636) : keyfn.call(null,G__16636));
})(),thisfn((x__$1[k]))], null),iter__16627(cljs.core.rest(s__16628__$2)));
}
} else {
return null;
}
break;
}
});})(map__16610,map__16610__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16610,map__16610__$1,keywordize_keys,keyfn))
;
return iter__4685__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16610,map__16610__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16637 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16639__i = 0, G__16639__a = new Array(arguments.length -  1);
while (G__16639__i < G__16639__a.length) {G__16639__a[G__16639__i] = arguments[G__16639__i + 1]; ++G__16639__i;}
  opts = new cljs.core.IndexedSeq(G__16639__a,0);
} 
return G__16637__delegate.call(this,x,opts);};
G__16637.cljs$lang$maxFixedArity = 1;
G__16637.cljs$lang$applyTo = (function (arglist__16640){
var x = cljs.core.first(arglist__16640);
var opts = cljs.core.rest(arglist__16640);
return G__16637__delegate(x,opts);
});
G__16637.cljs$core$IFn$_invoke$arity$variadic = G__16637__delegate;
return G__16637;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16641 = null;
if (arguments.length > 1) {
var G__16642__i = 0, G__16642__a = new Array(arguments.length -  1);
while (G__16642__i < G__16642__a.length) {G__16642__a[G__16642__i] = arguments[G__16642__i + 1]; ++G__16642__i;}
G__16641 = new cljs.core.IndexedSeq(G__16642__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16645 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16645) : cljs.core.atom.call(null,G__16645));
})();
return ((function (mem){
return (function() { 
var G__16647__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16646 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16646) : cljs.core.deref.call(null,G__16646));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16647 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16648__i = 0, G__16648__a = new Array(arguments.length -  0);
while (G__16648__i < G__16648__a.length) {G__16648__a[G__16648__i] = arguments[G__16648__i + 0]; ++G__16648__i;}
  args = new cljs.core.IndexedSeq(G__16648__a,0);
} 
return G__16647__delegate.call(this,args);};
G__16647.cljs$lang$maxFixedArity = 0;
G__16647.cljs$lang$applyTo = (function (arglist__16649){
var args = cljs.core.seq(arglist__16649);
return G__16647__delegate(args);
});
G__16647.cljs$core$IFn$_invoke$arity$variadic = G__16647__delegate;
return G__16647;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16651 = ret;
f = G__16651;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16652__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16652 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16653__i = 0, G__16653__a = new Array(arguments.length -  1);
while (G__16653__i < G__16653__a.length) {G__16653__a[G__16653__i] = arguments[G__16653__i + 1]; ++G__16653__i;}
  args = new cljs.core.IndexedSeq(G__16653__a,0);
} 
return G__16652__delegate.call(this,f,args);};
G__16652.cljs$lang$maxFixedArity = 1;
G__16652.cljs$lang$applyTo = (function (arglist__16654){
var f = cljs.core.first(arglist__16654);
var args = cljs.core.rest(arglist__16654);
return G__16652__delegate(f,args);
});
G__16652.cljs$core$IFn$_invoke$arity$variadic = G__16652__delegate;
return G__16652;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16655 = null;
if (arguments.length > 1) {
var G__16656__i = 0, G__16656__a = new Array(arguments.length -  1);
while (G__16656__i < G__16656__a.length) {G__16656__a[G__16656__i] = arguments[G__16656__i + 1]; ++G__16656__i;}
G__16655 = new cljs.core.IndexedSeq(G__16656__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16659 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16659) : Math.floor.call(null,G__16659));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16661 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16661) : f.call(null,G__16661));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16663 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16663) : cljs.core.atom.call(null,G__16663));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16664__i = 0, G__16664__a = new Array(arguments.length -  1);
while (G__16664__i < G__16664__a.length) {G__16664__a[G__16664__i] = arguments[G__16664__i + 1]; ++G__16664__i;}
  args = new cljs.core.IndexedSeq(G__16664__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16665){
var f = cljs.core.first(arglist__16665);
var args = cljs.core.rest(arglist__16665);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16730 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16730) : cljs.core.deref.call(null,G__16730));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3929__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
var and__3917__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3917__auto__){
var and__3917__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3917__auto____$1){
var and__3917__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3917__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16755 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16753 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16753) : child.call(null,G__16753));
})(),(function (){var G__16754 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16754) : parent.call(null,G__16754));
})());
var G__16756 = (i + (1));
ret = G__16755;
i = G__16756;
continue;
}
break;
}
} else {
return and__3917__auto____$2;
}
} else {
return and__3917__auto____$1;
}
} else {
return and__3917__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16760 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16760) : cljs.core.deref.call(null,G__16760));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16764 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16764) : cljs.core.deref.call(null,G__16764));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16768 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16768) : cljs.core.deref.call(null,G__16768));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16777 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16777) : targets.call(null,G__16777));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16778 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16778) : sources.call(null,G__16778));
})()));
});})(tp,td,ta))
;
var or__3929__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16782 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16782) : tp.call(null,G__16782));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16783 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16783) : ta.call(null,G__16783));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16784 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16784) : ta.call(null,G__16784));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16791 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16791) : parentMap.call(null,G__16791));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16792 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16792) : parentMap.call(null,G__16792));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16785_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16785_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16785_SHARP_),cljs.core.second(p1__16785_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16793 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16793) : parentMap.call(null,G__16793));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16786_SHARP_,p2__16787_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16786_SHARP_,p2__16787_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16796 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16796) : cljs.core.deref.call(null,G__16796));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16797 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16797) : cljs.core.deref.call(null,G__16797));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16813 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16813) : cljs.core.deref.call(null,G__16813));
})().call(null,x);
var or__3929__auto__ = (cljs.core.truth_((function (){var and__3917__auto__ = xprefs;
if(cljs.core.truth_(and__3917__auto__)){
var G__16815 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16815) : xprefs.call(null,G__16815));
} else {
return and__3917__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16816 = cljs.core.rest(ps);
ps = G__16816;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3929__auto____$1)){
return or__3929__auto____$1;
} else {
var or__3929__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16817 = cljs.core.rest(ps);
ps = G__16817;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3929__auto____$2)){
return or__3929__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3929__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3929__auto__)){
return or__3929__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16831){
var vec__16832 = p__16831;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16832,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16832,(1),null);
var e = vec__16832;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16833 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16833) : cljs.core.deref.call(null,G__16833));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3929__auto__ = (be == null);
if(or__3929__auto__){
return or__3929__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16834 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16834) : cljs.core.deref.call(null,G__16834));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16835 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16835) : cljs.core.deref.call(null,G__16835));
})(),(function (){var G__16836 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16836) : cljs.core.deref.call(null,G__16836));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16838 = {};
return obj16838;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._reset[(function (){var G__16842 = x__4573__auto__;
return goog.typeOf(G__16842);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._reset["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._add_method[(function (){var G__16846 = x__4573__auto__;
return goog.typeOf(G__16846);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._add_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._remove_method[(function (){var G__16850 = x__4573__auto__;
return goog.typeOf(G__16850);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._prefer_method[(function (){var G__16854 = x__4573__auto__;
return goog.typeOf(G__16854);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._get_method[(function (){var G__16858 = x__4573__auto__;
return goog.typeOf(G__16858);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._get_method["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._methods[(function (){var G__16862 = x__4573__auto__;
return goog.typeOf(G__16862);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._methods["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3917__auto__ = mf;
if(and__3917__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3917__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4573__auto__ = (((mf == null))?null:mf);
return (function (){var or__3929__auto__ = (cljs.core._prefers[(function (){var G__16866 = x__4573__auto__;
return goog.typeOf(G__16866);
})()]);
if(or__3929__auto__){
return or__3929__auto__;
} else {
var or__3929__auto____$1 = (cljs.core._prefers["_"]);
if(or__3929__auto____$1){
return or__3929__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16868 = this$__$1;
return goog.getUid(G__16868);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16869 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16869) : cljs.core.deref.call(null,G__16869));
})(),(function (){var G__16870 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16870) : cljs.core.deref.call(null,G__16870));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16871 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16871) : cljs.core.deref.call(null,G__16871));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16872 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16872) : cljs.core.deref.call(null,G__16872));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16873 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16873) : cljs.core.deref.call(null,G__16873));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16874 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16874) : cljs.core.deref.call(null,G__16874));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17715 = null;
var G__17715__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17715__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16875 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16875) : self__.dispatch_fn.call(null,G__16875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16876 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16876) : target_fn.call(null,G__16876));
});
var G__17715__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16877 = a;
var G__16878 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16877,G__16878) : self__.dispatch_fn.call(null,G__16877,G__16878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16879 = a;
var G__16880 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16879,G__16880) : target_fn.call(null,G__16879,G__16880));
});
var G__17715__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16881 = a;
var G__16882 = b;
var G__16883 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16881,G__16882,G__16883) : self__.dispatch_fn.call(null,G__16881,G__16882,G__16883));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16884 = a;
var G__16885 = b;
var G__16886 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16884,G__16885,G__16886) : target_fn.call(null,G__16884,G__16885,G__16886));
});
var G__17715__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16887 = a;
var G__16888 = b;
var G__16889 = c;
var G__16890 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16887,G__16888,G__16889,G__16890) : self__.dispatch_fn.call(null,G__16887,G__16888,G__16889,G__16890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16891 = a;
var G__16892 = b;
var G__16893 = c;
var G__16894 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16891,G__16892,G__16893,G__16894) : target_fn.call(null,G__16891,G__16892,G__16893,G__16894));
});
var G__17715__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16895 = a;
var G__16896 = b;
var G__16897 = c;
var G__16898 = d;
var G__16899 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16895,G__16896,G__16897,G__16898,G__16899) : self__.dispatch_fn.call(null,G__16895,G__16896,G__16897,G__16898,G__16899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16900 = a;
var G__16901 = b;
var G__16902 = c;
var G__16903 = d;
var G__16904 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16900,G__16901,G__16902,G__16903,G__16904) : target_fn.call(null,G__16900,G__16901,G__16902,G__16903,G__16904));
});
var G__17715__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16905 = a;
var G__16906 = b;
var G__16907 = c;
var G__16908 = d;
var G__16909 = e;
var G__16910 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16905,G__16906,G__16907,G__16908,G__16909,G__16910) : self__.dispatch_fn.call(null,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16911 = a;
var G__16912 = b;
var G__16913 = c;
var G__16914 = d;
var G__16915 = e;
var G__16916 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16911,G__16912,G__16913,G__16914,G__16915,G__16916) : target_fn.call(null,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916));
});
var G__17715__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16917 = a;
var G__16918 = b;
var G__16919 = c;
var G__16920 = d;
var G__16921 = e;
var G__16922 = f;
var G__16923 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16917,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923) : self__.dispatch_fn.call(null,G__16917,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16924 = a;
var G__16925 = b;
var G__16926 = c;
var G__16927 = d;
var G__16928 = e;
var G__16929 = f;
var G__16930 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930) : target_fn.call(null,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930));
});
var G__17715__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16931 = a;
var G__16932 = b;
var G__16933 = c;
var G__16934 = d;
var G__16935 = e;
var G__16936 = f;
var G__16937 = g;
var G__16938 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938) : self__.dispatch_fn.call(null,G__16931,G__16932,G__16933,G__16934,G__16935,G__16936,G__16937,G__16938));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16939 = a;
var G__16940 = b;
var G__16941 = c;
var G__16942 = d;
var G__16943 = e;
var G__16944 = f;
var G__16945 = g;
var G__16946 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946) : target_fn.call(null,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946));
});
var G__17715__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16947 = a;
var G__16948 = b;
var G__16949 = c;
var G__16950 = d;
var G__16951 = e;
var G__16952 = f;
var G__16953 = g;
var G__16954 = h;
var G__16955 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955) : self__.dispatch_fn.call(null,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952,G__16953,G__16954,G__16955));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16956 = a;
var G__16957 = b;
var G__16958 = c;
var G__16959 = d;
var G__16960 = e;
var G__16961 = f;
var G__16962 = g;
var G__16963 = h;
var G__16964 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964) : target_fn.call(null,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964));
});
var G__17715__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16965 = a;
var G__16966 = b;
var G__16967 = c;
var G__16968 = d;
var G__16969 = e;
var G__16970 = f;
var G__16971 = g;
var G__16972 = h;
var G__16973 = i;
var G__16974 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974) : self__.dispatch_fn.call(null,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971,G__16972,G__16973,G__16974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16975 = a;
var G__16976 = b;
var G__16977 = c;
var G__16978 = d;
var G__16979 = e;
var G__16980 = f;
var G__16981 = g;
var G__16982 = h;
var G__16983 = i;
var G__16984 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984) : target_fn.call(null,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984));
});
var G__17715__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16985 = a;
var G__16986 = b;
var G__16987 = c;
var G__16988 = d;
var G__16989 = e;
var G__16990 = f;
var G__16991 = g;
var G__16992 = h;
var G__16993 = i;
var G__16994 = j;
var G__16995 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995) : self__.dispatch_fn.call(null,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990,G__16991,G__16992,G__16993,G__16994,G__16995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16996 = a;
var G__16997 = b;
var G__16998 = c;
var G__16999 = d;
var G__17000 = e;
var G__17001 = f;
var G__17002 = g;
var G__17003 = h;
var G__17004 = i;
var G__17005 = j;
var G__17006 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006) : target_fn.call(null,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006));
});
var G__17715__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17007 = a;
var G__17008 = b;
var G__17009 = c;
var G__17010 = d;
var G__17011 = e;
var G__17012 = f;
var G__17013 = g;
var G__17014 = h;
var G__17015 = i;
var G__17016 = j;
var G__17017 = k;
var G__17018 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018) : self__.dispatch_fn.call(null,G__17007,G__17008,G__17009,G__17010,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17019 = a;
var G__17020 = b;
var G__17021 = c;
var G__17022 = d;
var G__17023 = e;
var G__17024 = f;
var G__17025 = g;
var G__17026 = h;
var G__17027 = i;
var G__17028 = j;
var G__17029 = k;
var G__17030 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030) : target_fn.call(null,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030));
});
var G__17715__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17031 = a;
var G__17032 = b;
var G__17033 = c;
var G__17034 = d;
var G__17035 = e;
var G__17036 = f;
var G__17037 = g;
var G__17038 = h;
var G__17039 = i;
var G__17040 = j;
var G__17041 = k;
var G__17042 = l;
var G__17043 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041,G__17042,G__17043) : self__.dispatch_fn.call(null,G__17031,G__17032,G__17033,G__17034,G__17035,G__17036,G__17037,G__17038,G__17039,G__17040,G__17041,G__17042,G__17043));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17044 = a;
var G__17045 = b;
var G__17046 = c;
var G__17047 = d;
var G__17048 = e;
var G__17049 = f;
var G__17050 = g;
var G__17051 = h;
var G__17052 = i;
var G__17053 = j;
var G__17054 = k;
var G__17055 = l;
var G__17056 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056) : target_fn.call(null,G__17044,G__17045,G__17046,G__17047,G__17048,G__17049,G__17050,G__17051,G__17052,G__17053,G__17054,G__17055,G__17056));
});
var G__17715__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17057 = a;
var G__17058 = b;
var G__17059 = c;
var G__17060 = d;
var G__17061 = e;
var G__17062 = f;
var G__17063 = g;
var G__17064 = h;
var G__17065 = i;
var G__17066 = j;
var G__17067 = k;
var G__17068 = l;
var G__17069 = m;
var G__17070 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070) : self__.dispatch_fn.call(null,G__17057,G__17058,G__17059,G__17060,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066,G__17067,G__17068,G__17069,G__17070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17071 = a;
var G__17072 = b;
var G__17073 = c;
var G__17074 = d;
var G__17075 = e;
var G__17076 = f;
var G__17077 = g;
var G__17078 = h;
var G__17079 = i;
var G__17080 = j;
var G__17081 = k;
var G__17082 = l;
var G__17083 = m;
var G__17084 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084) : target_fn.call(null,G__17071,G__17072,G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079,G__17080,G__17081,G__17082,G__17083,G__17084));
});
var G__17715__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17085 = a;
var G__17086 = b;
var G__17087 = c;
var G__17088 = d;
var G__17089 = e;
var G__17090 = f;
var G__17091 = g;
var G__17092 = h;
var G__17093 = i;
var G__17094 = j;
var G__17095 = k;
var G__17096 = l;
var G__17097 = m;
var G__17098 = n;
var G__17099 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099) : self__.dispatch_fn.call(null,G__17085,G__17086,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094,G__17095,G__17096,G__17097,G__17098,G__17099));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17100 = a;
var G__17101 = b;
var G__17102 = c;
var G__17103 = d;
var G__17104 = e;
var G__17105 = f;
var G__17106 = g;
var G__17107 = h;
var G__17108 = i;
var G__17109 = j;
var G__17110 = k;
var G__17111 = l;
var G__17112 = m;
var G__17113 = n;
var G__17114 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17100,G__17101,G__17102,G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114) : target_fn.call(null,G__17100,G__17101,G__17102,G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111,G__17112,G__17113,G__17114));
});
var G__17715__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17115 = a;
var G__17116 = b;
var G__17117 = c;
var G__17118 = d;
var G__17119 = e;
var G__17120 = f;
var G__17121 = g;
var G__17122 = h;
var G__17123 = i;
var G__17124 = j;
var G__17125 = k;
var G__17126 = l;
var G__17127 = m;
var G__17128 = n;
var G__17129 = o;
var G__17130 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130) : self__.dispatch_fn.call(null,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17131 = a;
var G__17132 = b;
var G__17133 = c;
var G__17134 = d;
var G__17135 = e;
var G__17136 = f;
var G__17137 = g;
var G__17138 = h;
var G__17139 = i;
var G__17140 = j;
var G__17141 = k;
var G__17142 = l;
var G__17143 = m;
var G__17144 = n;
var G__17145 = o;
var G__17146 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146) : target_fn.call(null,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146));
});
var G__17715__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17147 = a;
var G__17148 = b;
var G__17149 = c;
var G__17150 = d;
var G__17151 = e;
var G__17152 = f;
var G__17153 = g;
var G__17154 = h;
var G__17155 = i;
var G__17156 = j;
var G__17157 = k;
var G__17158 = l;
var G__17159 = m;
var G__17160 = n;
var G__17161 = o;
var G__17162 = p;
var G__17163 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17147,G__17148,G__17149,G__17150,G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163) : self__.dispatch_fn.call(null,G__17147,G__17148,G__17149,G__17150,G__17151,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162,G__17163));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17164 = a;
var G__17165 = b;
var G__17166 = c;
var G__17167 = d;
var G__17168 = e;
var G__17169 = f;
var G__17170 = g;
var G__17171 = h;
var G__17172 = i;
var G__17173 = j;
var G__17174 = k;
var G__17175 = l;
var G__17176 = m;
var G__17177 = n;
var G__17178 = o;
var G__17179 = p;
var G__17180 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180) : target_fn.call(null,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180));
});
var G__17715__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17181 = a;
var G__17182 = b;
var G__17183 = c;
var G__17184 = d;
var G__17185 = e;
var G__17186 = f;
var G__17187 = g;
var G__17188 = h;
var G__17189 = i;
var G__17190 = j;
var G__17191 = k;
var G__17192 = l;
var G__17193 = m;
var G__17194 = n;
var G__17195 = o;
var G__17196 = p;
var G__17197 = q;
var G__17198 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17181,G__17182,G__17183,G__17184,G__17185,G__17186,G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198) : self__.dispatch_fn.call(null,G__17181,G__17182,G__17183,G__17184,G__17185,G__17186,G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17199 = a;
var G__17200 = b;
var G__17201 = c;
var G__17202 = d;
var G__17203 = e;
var G__17204 = f;
var G__17205 = g;
var G__17206 = h;
var G__17207 = i;
var G__17208 = j;
var G__17209 = k;
var G__17210 = l;
var G__17211 = m;
var G__17212 = n;
var G__17213 = o;
var G__17214 = p;
var G__17215 = q;
var G__17216 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17199,G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216) : target_fn.call(null,G__17199,G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212,G__17213,G__17214,G__17215,G__17216));
});
var G__17715__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17217 = a;
var G__17218 = b;
var G__17219 = c;
var G__17220 = d;
var G__17221 = e;
var G__17222 = f;
var G__17223 = g;
var G__17224 = h;
var G__17225 = i;
var G__17226 = j;
var G__17227 = k;
var G__17228 = l;
var G__17229 = m;
var G__17230 = n;
var G__17231 = o;
var G__17232 = p;
var G__17233 = q;
var G__17234 = r;
var G__17235 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17217,G__17218,G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235) : self__.dispatch_fn.call(null,G__17217,G__17218,G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17236 = a;
var G__17237 = b;
var G__17238 = c;
var G__17239 = d;
var G__17240 = e;
var G__17241 = f;
var G__17242 = g;
var G__17243 = h;
var G__17244 = i;
var G__17245 = j;
var G__17246 = k;
var G__17247 = l;
var G__17248 = m;
var G__17249 = n;
var G__17250 = o;
var G__17251 = p;
var G__17252 = q;
var G__17253 = r;
var G__17254 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17236,G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254) : target_fn.call(null,G__17236,G__17237,G__17238,G__17239,G__17240,G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254));
});
var G__17715__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17255 = a;
var G__17256 = b;
var G__17257 = c;
var G__17258 = d;
var G__17259 = e;
var G__17260 = f;
var G__17261 = g;
var G__17262 = h;
var G__17263 = i;
var G__17264 = j;
var G__17265 = k;
var G__17266 = l;
var G__17267 = m;
var G__17268 = n;
var G__17269 = o;
var G__17270 = p;
var G__17271 = q;
var G__17272 = r;
var G__17273 = s;
var G__17274 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17255,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274) : self__.dispatch_fn.call(null,G__17255,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17275 = a;
var G__17276 = b;
var G__17277 = c;
var G__17278 = d;
var G__17279 = e;
var G__17280 = f;
var G__17281 = g;
var G__17282 = h;
var G__17283 = i;
var G__17284 = j;
var G__17285 = k;
var G__17286 = l;
var G__17287 = m;
var G__17288 = n;
var G__17289 = o;
var G__17290 = p;
var G__17291 = q;
var G__17292 = r;
var G__17293 = s;
var G__17294 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294) : target_fn.call(null,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294));
});
var G__17715__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17715 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17715__1.call(this,self__);
case 2:
return G__17715__2.call(this,self__,a);
case 3:
return G__17715__3.call(this,self__,a,b);
case 4:
return G__17715__4.call(this,self__,a,b,c);
case 5:
return G__17715__5.call(this,self__,a,b,c,d);
case 6:
return G__17715__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17715__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17715__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17715__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17715__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17715__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17715__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17715__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17715__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17715__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17715__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17715__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17715__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17715__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17715__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17715__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17715__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17715.cljs$core$IFn$_invoke$arity$1 = G__17715__1;
G__17715.cljs$core$IFn$_invoke$arity$2 = G__17715__2;
G__17715.cljs$core$IFn$_invoke$arity$3 = G__17715__3;
G__17715.cljs$core$IFn$_invoke$arity$4 = G__17715__4;
G__17715.cljs$core$IFn$_invoke$arity$5 = G__17715__5;
G__17715.cljs$core$IFn$_invoke$arity$6 = G__17715__6;
G__17715.cljs$core$IFn$_invoke$arity$7 = G__17715__7;
G__17715.cljs$core$IFn$_invoke$arity$8 = G__17715__8;
G__17715.cljs$core$IFn$_invoke$arity$9 = G__17715__9;
G__17715.cljs$core$IFn$_invoke$arity$10 = G__17715__10;
G__17715.cljs$core$IFn$_invoke$arity$11 = G__17715__11;
G__17715.cljs$core$IFn$_invoke$arity$12 = G__17715__12;
G__17715.cljs$core$IFn$_invoke$arity$13 = G__17715__13;
G__17715.cljs$core$IFn$_invoke$arity$14 = G__17715__14;
G__17715.cljs$core$IFn$_invoke$arity$15 = G__17715__15;
G__17715.cljs$core$IFn$_invoke$arity$16 = G__17715__16;
G__17715.cljs$core$IFn$_invoke$arity$17 = G__17715__17;
G__17715.cljs$core$IFn$_invoke$arity$18 = G__17715__18;
G__17715.cljs$core$IFn$_invoke$arity$19 = G__17715__19;
G__17715.cljs$core$IFn$_invoke$arity$20 = G__17715__20;
G__17715.cljs$core$IFn$_invoke$arity$21 = G__17715__21;
G__17715.cljs$core$IFn$_invoke$arity$22 = G__17715__22;
return G__17715;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16867){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16867)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17295 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17295) : self__.dispatch_fn.call(null,G__17295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17296 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17296) : target_fn.call(null,G__17296));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17297 = a;
var G__17298 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17297,G__17298) : self__.dispatch_fn.call(null,G__17297,G__17298));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17299 = a;
var G__17300 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17299,G__17300) : target_fn.call(null,G__17299,G__17300));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17301 = a;
var G__17302 = b;
var G__17303 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17301,G__17302,G__17303) : self__.dispatch_fn.call(null,G__17301,G__17302,G__17303));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17304 = a;
var G__17305 = b;
var G__17306 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17304,G__17305,G__17306) : target_fn.call(null,G__17304,G__17305,G__17306));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17307 = a;
var G__17308 = b;
var G__17309 = c;
var G__17310 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17307,G__17308,G__17309,G__17310) : self__.dispatch_fn.call(null,G__17307,G__17308,G__17309,G__17310));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17311 = a;
var G__17312 = b;
var G__17313 = c;
var G__17314 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17311,G__17312,G__17313,G__17314) : target_fn.call(null,G__17311,G__17312,G__17313,G__17314));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17315 = a;
var G__17316 = b;
var G__17317 = c;
var G__17318 = d;
var G__17319 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17315,G__17316,G__17317,G__17318,G__17319) : self__.dispatch_fn.call(null,G__17315,G__17316,G__17317,G__17318,G__17319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17320 = a;
var G__17321 = b;
var G__17322 = c;
var G__17323 = d;
var G__17324 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17320,G__17321,G__17322,G__17323,G__17324) : target_fn.call(null,G__17320,G__17321,G__17322,G__17323,G__17324));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17325 = a;
var G__17326 = b;
var G__17327 = c;
var G__17328 = d;
var G__17329 = e;
var G__17330 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17325,G__17326,G__17327,G__17328,G__17329,G__17330) : self__.dispatch_fn.call(null,G__17325,G__17326,G__17327,G__17328,G__17329,G__17330));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17331 = a;
var G__17332 = b;
var G__17333 = c;
var G__17334 = d;
var G__17335 = e;
var G__17336 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17331,G__17332,G__17333,G__17334,G__17335,G__17336) : target_fn.call(null,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17337 = a;
var G__17338 = b;
var G__17339 = c;
var G__17340 = d;
var G__17341 = e;
var G__17342 = f;
var G__17343 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343) : self__.dispatch_fn.call(null,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17344 = a;
var G__17345 = b;
var G__17346 = c;
var G__17347 = d;
var G__17348 = e;
var G__17349 = f;
var G__17350 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350) : target_fn.call(null,G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17351 = a;
var G__17352 = b;
var G__17353 = c;
var G__17354 = d;
var G__17355 = e;
var G__17356 = f;
var G__17357 = g;
var G__17358 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358) : self__.dispatch_fn.call(null,G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17359 = a;
var G__17360 = b;
var G__17361 = c;
var G__17362 = d;
var G__17363 = e;
var G__17364 = f;
var G__17365 = g;
var G__17366 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366) : target_fn.call(null,G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17367 = a;
var G__17368 = b;
var G__17369 = c;
var G__17370 = d;
var G__17371 = e;
var G__17372 = f;
var G__17373 = g;
var G__17374 = h;
var G__17375 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375) : self__.dispatch_fn.call(null,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17376 = a;
var G__17377 = b;
var G__17378 = c;
var G__17379 = d;
var G__17380 = e;
var G__17381 = f;
var G__17382 = g;
var G__17383 = h;
var G__17384 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384) : target_fn.call(null,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17385 = a;
var G__17386 = b;
var G__17387 = c;
var G__17388 = d;
var G__17389 = e;
var G__17390 = f;
var G__17391 = g;
var G__17392 = h;
var G__17393 = i;
var G__17394 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392,G__17393,G__17394) : self__.dispatch_fn.call(null,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391,G__17392,G__17393,G__17394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17395 = a;
var G__17396 = b;
var G__17397 = c;
var G__17398 = d;
var G__17399 = e;
var G__17400 = f;
var G__17401 = g;
var G__17402 = h;
var G__17403 = i;
var G__17404 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404) : target_fn.call(null,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17405 = a;
var G__17406 = b;
var G__17407 = c;
var G__17408 = d;
var G__17409 = e;
var G__17410 = f;
var G__17411 = g;
var G__17412 = h;
var G__17413 = i;
var G__17414 = j;
var G__17415 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411,G__17412,G__17413,G__17414,G__17415) : self__.dispatch_fn.call(null,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410,G__17411,G__17412,G__17413,G__17414,G__17415));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17416 = a;
var G__17417 = b;
var G__17418 = c;
var G__17419 = d;
var G__17420 = e;
var G__17421 = f;
var G__17422 = g;
var G__17423 = h;
var G__17424 = i;
var G__17425 = j;
var G__17426 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426) : target_fn.call(null,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17427 = a;
var G__17428 = b;
var G__17429 = c;
var G__17430 = d;
var G__17431 = e;
var G__17432 = f;
var G__17433 = g;
var G__17434 = h;
var G__17435 = i;
var G__17436 = j;
var G__17437 = k;
var G__17438 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17427,G__17428,G__17429,G__17430,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438) : self__.dispatch_fn.call(null,G__17427,G__17428,G__17429,G__17430,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17439 = a;
var G__17440 = b;
var G__17441 = c;
var G__17442 = d;
var G__17443 = e;
var G__17444 = f;
var G__17445 = g;
var G__17446 = h;
var G__17447 = i;
var G__17448 = j;
var G__17449 = k;
var G__17450 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450) : target_fn.call(null,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17451 = a;
var G__17452 = b;
var G__17453 = c;
var G__17454 = d;
var G__17455 = e;
var G__17456 = f;
var G__17457 = g;
var G__17458 = h;
var G__17459 = i;
var G__17460 = j;
var G__17461 = k;
var G__17462 = l;
var G__17463 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17451,G__17452,G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463) : self__.dispatch_fn.call(null,G__17451,G__17452,G__17453,G__17454,G__17455,G__17456,G__17457,G__17458,G__17459,G__17460,G__17461,G__17462,G__17463));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17464 = a;
var G__17465 = b;
var G__17466 = c;
var G__17467 = d;
var G__17468 = e;
var G__17469 = f;
var G__17470 = g;
var G__17471 = h;
var G__17472 = i;
var G__17473 = j;
var G__17474 = k;
var G__17475 = l;
var G__17476 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17464,G__17465,G__17466,G__17467,G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476) : target_fn.call(null,G__17464,G__17465,G__17466,G__17467,G__17468,G__17469,G__17470,G__17471,G__17472,G__17473,G__17474,G__17475,G__17476));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17477 = a;
var G__17478 = b;
var G__17479 = c;
var G__17480 = d;
var G__17481 = e;
var G__17482 = f;
var G__17483 = g;
var G__17484 = h;
var G__17485 = i;
var G__17486 = j;
var G__17487 = k;
var G__17488 = l;
var G__17489 = m;
var G__17490 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17477,G__17478,G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488,G__17489,G__17490) : self__.dispatch_fn.call(null,G__17477,G__17478,G__17479,G__17480,G__17481,G__17482,G__17483,G__17484,G__17485,G__17486,G__17487,G__17488,G__17489,G__17490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17491 = a;
var G__17492 = b;
var G__17493 = c;
var G__17494 = d;
var G__17495 = e;
var G__17496 = f;
var G__17497 = g;
var G__17498 = h;
var G__17499 = i;
var G__17500 = j;
var G__17501 = k;
var G__17502 = l;
var G__17503 = m;
var G__17504 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504) : target_fn.call(null,G__17491,G__17492,G__17493,G__17494,G__17495,G__17496,G__17497,G__17498,G__17499,G__17500,G__17501,G__17502,G__17503,G__17504));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17505 = a;
var G__17506 = b;
var G__17507 = c;
var G__17508 = d;
var G__17509 = e;
var G__17510 = f;
var G__17511 = g;
var G__17512 = h;
var G__17513 = i;
var G__17514 = j;
var G__17515 = k;
var G__17516 = l;
var G__17517 = m;
var G__17518 = n;
var G__17519 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17505,G__17506,G__17507,G__17508,G__17509,G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519) : self__.dispatch_fn.call(null,G__17505,G__17506,G__17507,G__17508,G__17509,G__17510,G__17511,G__17512,G__17513,G__17514,G__17515,G__17516,G__17517,G__17518,G__17519));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17520 = a;
var G__17521 = b;
var G__17522 = c;
var G__17523 = d;
var G__17524 = e;
var G__17525 = f;
var G__17526 = g;
var G__17527 = h;
var G__17528 = i;
var G__17529 = j;
var G__17530 = k;
var G__17531 = l;
var G__17532 = m;
var G__17533 = n;
var G__17534 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17520,G__17521,G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532,G__17533,G__17534) : target_fn.call(null,G__17520,G__17521,G__17522,G__17523,G__17524,G__17525,G__17526,G__17527,G__17528,G__17529,G__17530,G__17531,G__17532,G__17533,G__17534));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17535 = a;
var G__17536 = b;
var G__17537 = c;
var G__17538 = d;
var G__17539 = e;
var G__17540 = f;
var G__17541 = g;
var G__17542 = h;
var G__17543 = i;
var G__17544 = j;
var G__17545 = k;
var G__17546 = l;
var G__17547 = m;
var G__17548 = n;
var G__17549 = o;
var G__17550 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17535,G__17536,G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544,G__17545,G__17546,G__17547,G__17548,G__17549,G__17550) : self__.dispatch_fn.call(null,G__17535,G__17536,G__17537,G__17538,G__17539,G__17540,G__17541,G__17542,G__17543,G__17544,G__17545,G__17546,G__17547,G__17548,G__17549,G__17550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17551 = a;
var G__17552 = b;
var G__17553 = c;
var G__17554 = d;
var G__17555 = e;
var G__17556 = f;
var G__17557 = g;
var G__17558 = h;
var G__17559 = i;
var G__17560 = j;
var G__17561 = k;
var G__17562 = l;
var G__17563 = m;
var G__17564 = n;
var G__17565 = o;
var G__17566 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17551,G__17552,G__17553,G__17554,G__17555,G__17556,G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566) : target_fn.call(null,G__17551,G__17552,G__17553,G__17554,G__17555,G__17556,G__17557,G__17558,G__17559,G__17560,G__17561,G__17562,G__17563,G__17564,G__17565,G__17566));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17567 = a;
var G__17568 = b;
var G__17569 = c;
var G__17570 = d;
var G__17571 = e;
var G__17572 = f;
var G__17573 = g;
var G__17574 = h;
var G__17575 = i;
var G__17576 = j;
var G__17577 = k;
var G__17578 = l;
var G__17579 = m;
var G__17580 = n;
var G__17581 = o;
var G__17582 = p;
var G__17583 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17567,G__17568,G__17569,G__17570,G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583) : self__.dispatch_fn.call(null,G__17567,G__17568,G__17569,G__17570,G__17571,G__17572,G__17573,G__17574,G__17575,G__17576,G__17577,G__17578,G__17579,G__17580,G__17581,G__17582,G__17583));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17584 = a;
var G__17585 = b;
var G__17586 = c;
var G__17587 = d;
var G__17588 = e;
var G__17589 = f;
var G__17590 = g;
var G__17591 = h;
var G__17592 = i;
var G__17593 = j;
var G__17594 = k;
var G__17595 = l;
var G__17596 = m;
var G__17597 = n;
var G__17598 = o;
var G__17599 = p;
var G__17600 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17584,G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598,G__17599,G__17600) : target_fn.call(null,G__17584,G__17585,G__17586,G__17587,G__17588,G__17589,G__17590,G__17591,G__17592,G__17593,G__17594,G__17595,G__17596,G__17597,G__17598,G__17599,G__17600));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17601 = a;
var G__17602 = b;
var G__17603 = c;
var G__17604 = d;
var G__17605 = e;
var G__17606 = f;
var G__17607 = g;
var G__17608 = h;
var G__17609 = i;
var G__17610 = j;
var G__17611 = k;
var G__17612 = l;
var G__17613 = m;
var G__17614 = n;
var G__17615 = o;
var G__17616 = p;
var G__17617 = q;
var G__17618 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617,G__17618) : self__.dispatch_fn.call(null,G__17601,G__17602,G__17603,G__17604,G__17605,G__17606,G__17607,G__17608,G__17609,G__17610,G__17611,G__17612,G__17613,G__17614,G__17615,G__17616,G__17617,G__17618));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17619 = a;
var G__17620 = b;
var G__17621 = c;
var G__17622 = d;
var G__17623 = e;
var G__17624 = f;
var G__17625 = g;
var G__17626 = h;
var G__17627 = i;
var G__17628 = j;
var G__17629 = k;
var G__17630 = l;
var G__17631 = m;
var G__17632 = n;
var G__17633 = o;
var G__17634 = p;
var G__17635 = q;
var G__17636 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636) : target_fn.call(null,G__17619,G__17620,G__17621,G__17622,G__17623,G__17624,G__17625,G__17626,G__17627,G__17628,G__17629,G__17630,G__17631,G__17632,G__17633,G__17634,G__17635,G__17636));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17637 = a;
var G__17638 = b;
var G__17639 = c;
var G__17640 = d;
var G__17641 = e;
var G__17642 = f;
var G__17643 = g;
var G__17644 = h;
var G__17645 = i;
var G__17646 = j;
var G__17647 = k;
var G__17648 = l;
var G__17649 = m;
var G__17650 = n;
var G__17651 = o;
var G__17652 = p;
var G__17653 = q;
var G__17654 = r;
var G__17655 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653,G__17654,G__17655) : self__.dispatch_fn.call(null,G__17637,G__17638,G__17639,G__17640,G__17641,G__17642,G__17643,G__17644,G__17645,G__17646,G__17647,G__17648,G__17649,G__17650,G__17651,G__17652,G__17653,G__17654,G__17655));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17656 = a;
var G__17657 = b;
var G__17658 = c;
var G__17659 = d;
var G__17660 = e;
var G__17661 = f;
var G__17662 = g;
var G__17663 = h;
var G__17664 = i;
var G__17665 = j;
var G__17666 = k;
var G__17667 = l;
var G__17668 = m;
var G__17669 = n;
var G__17670 = o;
var G__17671 = p;
var G__17672 = q;
var G__17673 = r;
var G__17674 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674) : target_fn.call(null,G__17656,G__17657,G__17658,G__17659,G__17660,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666,G__17667,G__17668,G__17669,G__17670,G__17671,G__17672,G__17673,G__17674));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17675 = a;
var G__17676 = b;
var G__17677 = c;
var G__17678 = d;
var G__17679 = e;
var G__17680 = f;
var G__17681 = g;
var G__17682 = h;
var G__17683 = i;
var G__17684 = j;
var G__17685 = k;
var G__17686 = l;
var G__17687 = m;
var G__17688 = n;
var G__17689 = o;
var G__17690 = p;
var G__17691 = q;
var G__17692 = r;
var G__17693 = s;
var G__17694 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17675,G__17676,G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691,G__17692,G__17693,G__17694) : self__.dispatch_fn.call(null,G__17675,G__17676,G__17677,G__17678,G__17679,G__17680,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686,G__17687,G__17688,G__17689,G__17690,G__17691,G__17692,G__17693,G__17694));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17695 = a;
var G__17696 = b;
var G__17697 = c;
var G__17698 = d;
var G__17699 = e;
var G__17700 = f;
var G__17701 = g;
var G__17702 = h;
var G__17703 = i;
var G__17704 = j;
var G__17705 = k;
var G__17706 = l;
var G__17707 = m;
var G__17708 = n;
var G__17709 = o;
var G__17710 = p;
var G__17711 = q;
var G__17712 = r;
var G__17713 = s;
var G__17714 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714) : target_fn.call(null,G__17695,G__17696,G__17697,G__17698,G__17699,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17716 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17716);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4516__auto__,writer__4517__auto__,opt__4518__auto__){
return cljs.core._write(writer__4517__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17721 = msg;
return Error(G__17721);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17726 = x;
var G__17727 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17726,G__17727) : pred.call(null,G__17726,G__17727));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17728 = y;
var G__17729 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17728,G__17729) : pred.call(null,G__17728,G__17729));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
